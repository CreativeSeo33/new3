{
    "definitions": {
        "App\\ApiResource\\ProductResource": {
            "class": "App\\ApiResource\\ProductResource",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "App\\Api\\Processor\\DeleteAttributeGroupRestrictProcessor": {
            "class": "App\\Api\\Processor\\DeleteAttributeGroupRestrictProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                },
                {
                    "type": "service",
                    "id": "App\\Repository\\AttributeRepository"
                },
                {
                    "type": "service",
                    "id": "App\\Repository\\ProductAttributeAssignmentRepository"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.state_processor",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B8Wul0F"
            ]
        },
        "App\\Api\\Processor\\DeleteAttributeRestrictProcessor": {
            "class": "App\\Api\\Processor\\DeleteAttributeRestrictProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                },
                {
                    "type": "service",
                    "id": "App\\Repository\\ProductAttributeAssignmentRepository"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.state_processor",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B8Wul0F"
            ]
        },
        "App\\Api\\Processor\\DeleteOptionRestrictProcessor": {
            "class": "App\\Api\\Processor\\DeleteOptionRestrictProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                },
                {
                    "type": "service",
                    "id": "App\\Repository\\OptionValueRepository"
                },
                {
                    "type": "service",
                    "id": "App\\Repository\\ProductOptionValueAssignmentRepository"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.state_processor",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B8Wul0F"
            ]
        },
        "App\\Api\\Processor\\DeleteOptionValueRestrictProcessor": {
            "class": "App\\Api\\Processor\\DeleteOptionValueRestrictProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                },
                {
                    "type": "service",
                    "id": "App\\Repository\\ProductOptionValueAssignmentRepository"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.state_processor",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B8Wul0F"
            ]
        },
        "App\\Api\\Processor\\DeliveryTypeProcessor": {
            "class": "App\\Api\\Processor\\DeliveryTypeProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.state_processor",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B8Wul0F"
            ]
        },
        "App\\Command\\CartPurgeExpiredCommand": {
            "class": "App\\Command\\CartPurgeExpiredCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                },
                {
                    "type": "service",
                    "id": "App\\Repository\\CartRepository"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "cart:purge-expired",
                        "description": "Remove expired guest carts from database",
                        "help": ""
                    }
                },
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".App\\Command\\CartPurgeExpiredCommand.lazy"
            ]
        },
        "App\\Command\\CartsCleanupCommand": {
            "class": "App\\Command\\CartsCleanupCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                }
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "app:carts:cleanup",
                        "description": "",
                        "help": ""
                    }
                },
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "App\\Command\\CleanupIdempotencyKeysCommand": {
            "class": "App\\Command\\CleanupIdempotencyKeysCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.dbal.default_connection"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "app:cleanup-idempotency-keys",
                        "description": "\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u0438\u0441\u0442\u0435\u043a\u0448\u0438\u0435 \u043a\u043b\u044e\u0447\u0438 \u0438\u0434\u0435\u043c\u043f\u043e\u0442\u0435\u043d\u0442\u043d\u043e\u0441\u0442\u0438",
                        "help": ""
                    }
                },
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".App\\Command\\CleanupIdempotencyKeysCommand.lazy"
            ]
        },
        "App\\Command\\ImagesCacheWarmupCommand": {
            "class": "App\\Command\\ImagesCacheWarmupCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.cache.manager"
                },
                {
                    "type": "service",
                    "id": "parameter_bag"
                }
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "app:images:cache:warmup",
                        "description": "",
                        "help": ""
                    }
                },
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "App\\Command\\SessionClearCommand": {
            "class": "App\\Command\\SessionClearCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "request_stack"
                },
                {
                    "type": "service",
                    "id": "filesystem"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "app:session:clear",
                        "description": "Clear session data (all or specific keys)",
                        "help": ""
                    }
                },
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".App\\Command\\SessionClearCommand.lazy"
            ]
        },
        "App\\Command\\TestCartHashCommand": {
            "class": "App\\Command\\TestCartHashCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Service\\CartManager"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "app:test-cart-hash",
                        "description": "Test cart options hash generation",
                        "help": ""
                    }
                },
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".App\\Command\\TestCartHashCommand.lazy"
            ]
        },
        "App\\Command\\TestIdempotencyCommand": {
            "class": "App\\Command\\TestIdempotencyCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Service\\Idempotency\\IdempotencyService"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "test:idempotency",
                        "description": "Test idempotency functionality",
                        "help": ""
                    }
                },
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".App\\Command\\TestIdempotencyCommand.lazy"
            ]
        },
        "App\\Command\\TestLoggingCommand": {
            "class": "App\\Command\\TestLoggingCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Service\\LoggerService"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "app:test-logging",
                        "description": "\u0422\u0435\u0441\u0442\u043e\u0432\u0430\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f",
                        "help": ""
                    }
                },
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".App\\Command\\TestLoggingCommand.lazy"
            ]
        },
        "App\\Command\\TestRemoveDirectCommand": {
            "class": "App\\Command\\TestRemoveDirectCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "app:test-remove-direct",
                        "description": "Test removing cart item directly",
                        "help": ""
                    }
                },
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".App\\Command\\TestRemoveDirectCommand.lazy"
            ]
        },
        "App\\Command\\TestRemoveItemCommand": {
            "class": "App\\Command\\TestRemoveItemCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Service\\CartManager"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\CartContext"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "app:test-remove-item",
                        "description": "Test removing an item from cart",
                        "help": ""
                    }
                },
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".App\\Command\\TestRemoveItemCommand.lazy"
            ]
        },
        "App\\Command\\UserCreateCommand": {
            "class": "App\\Command\\UserCreateCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                },
                {
                    "type": "service",
                    "id": "security.user_password_hasher"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "app:user:create",
                        "description": "\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441 \u0445\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043f\u0430\u0440\u043e\u043b\u0435\u043c",
                        "help": ""
                    }
                },
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".App\\Command\\UserCreateCommand.lazy"
            ]
        },
        "App\\Controller\\Admin\\Api\\ProductBootstrapController": {
            "class": "App\\Controller\\Admin\\Api\\ProductBootstrapController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "calls": [
                "setContainer"
            ],
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Controller\\Admin\\Api\\ProductCopyController": {
            "class": "App\\Controller\\Admin\\Api\\ProductCopyController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Service\\ProductCopyService"
                }
            ],
            "file": null,
            "calls": [
                "setContainer"
            ],
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Controller\\Admin\\DashboardController": {
            "class": "App\\Controller\\Admin\\DashboardController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "calls": [
                "setContainer"
            ],
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Controller\\Admin\\MediaAdminController": {
            "class": "App\\Controller\\Admin\\MediaAdminController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                "J:\\laragon\\www\\new3",
                {
                    "type": "service",
                    "id": "App\\Service\\ImageCacheService"
                },
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\ImageWarmupService"
                },
                "%app.imagine.filters%"
            ],
            "file": null,
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Controller\\Admin\\SecurityController": {
            "class": "App\\Controller\\Admin\\SecurityController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "calls": [
                "setContainer"
            ],
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Controller\\Api\\CartApiController": {
            "class": "App\\Controller\\Api\\CartApiController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Service\\CartManager"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\CartContext"
                },
                {
                    "type": "service",
                    "id": "App\\Repository\\CartRepository"
                },
                {
                    "type": "service",
                    "id": "App\\Repository\\ProductRepository"
                },
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\LivePriceCalculator"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\CartCalculator"
                },
                {
                    "type": "service",
                    "id": "App\\Http\\CartWriteGuard"
                },
                {
                    "type": "service",
                    "id": "App\\Http\\CartResponse"
                },
                {
                    "type": "service",
                    "id": "App\\Http\\CartEtags"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\CartDeltaBuilder"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\Idempotency\\IdempotencyService"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\Idempotency\\IdempotencyRequestHasher"
                },
                {
                    "type": "service",
                    "id": "monolog.logger.idempotency"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\Delivery\\DeliveryService"
                }
            ],
            "file": null,
            "calls": [
                "setContainer"
            ],
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Controller\\Api\\CsrfController": {
            "class": "App\\Controller\\Api\\CsrfController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "calls": [
                "setContainer"
            ],
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Controller\\Api\\DeliveryApiController": {
            "class": "App\\Controller\\Api\\DeliveryApiController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Service\\DeliveryContext"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\CartManager"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\Delivery\\DeliveryService"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\CartCalculator"
                },
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                },
                {
                    "type": "service",
                    "id": "App\\Http\\CartWriteGuard"
                },
                {
                    "type": "service",
                    "id": "App\\Http\\CartResponse"
                }
            ],
            "file": null,
            "calls": [
                "setContainer"
            ],
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Controller\\Api\\DeliveryPublicController": {
            "class": "App\\Controller\\Api\\DeliveryPublicController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "description": "\u041f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0435 \u044d\u043d\u0434\u043f\u043e\u0439\u043d\u0442\u044b \u0434\u043e\u0441\u0442\u0430\u0432\u043a\u0438 \u0434\u043b\u044f \u0444\u0440\u043e\u043d\u0442\u0430 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430. \u041a\u043e\u043d\u0442\u0440\u043e\u043b\u0438\u0440\u0443\u0435\u043c \u0432\u044b\u0434\u0430\u0447\u0443 \u0432\u0440\u0443\u0447\u043d\u0443\u044e (\u0431\u0435\u0437 ApiResource), \u0441 \u043a\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0438 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0435\u0439.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                },
                {
                    "type": "service",
                    "id": "App\\Repository\\PvzPriceRepository"
                },
                {
                    "type": "service",
                    "id": "cache.app"
                },
                "%env(int:DELIVERY_POINTS_DEFAULT_LIMIT)%",
                "%env(int:DELIVERY_POINTS_MAX_LIMIT)%",
                "%env(int:DELIVERY_PUBLIC_TTL)%"
            ],
            "file": null,
            "calls": [
                "setContainer"
            ],
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Controller\\CartClaimController": {
            "class": "App\\Controller\\CartClaimController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "calls": [
                "setContainer"
            ],
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Controller\\Catalog\\CartController": {
            "class": "App\\Controller\\Catalog\\CartController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Service\\Delivery\\DeliveryService"
                }
            ],
            "file": null,
            "calls": [
                "setContainer"
            ],
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Controller\\Catalog\\Category\\CatalogCategoryController": {
            "class": "App\\Controller\\Catalog\\Category\\CatalogCategoryController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Repository\\CategoryRepository"
                },
                {
                    "type": "service",
                    "id": "App\\Repository\\ProductRepository"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\BreadcrumbBuilder"
                }
            ],
            "file": null,
            "calls": [
                "setContainer"
            ],
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Controller\\Catalog\\CheckoutController": {
            "class": "App\\Controller\\Catalog\\CheckoutController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Service\\Delivery\\Provider\\DeliveryProviderRegistry"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\DeliveryContext"
                }
            ],
            "file": null,
            "calls": [
                "setContainer"
            ],
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Controller\\Catalog\\DeliveryPageController": {
            "class": "App\\Controller\\Catalog\\DeliveryPageController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Repository\\DeliveryTypeRepository"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\DeliveryContext"
                },
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "calls": [
                "setContainer"
            ],
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Controller\\Catalog\\IndexController": {
            "class": "App\\Controller\\Catalog\\IndexController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "calls": [
                "setContainer"
            ],
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Controller\\Catalog\\Product\\ProductCatalogController": {
            "class": "App\\Controller\\Catalog\\Product\\ProductCatalogController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Service\\BreadcrumbBuilder"
                }
            ],
            "file": null,
            "calls": [
                "setContainer"
            ],
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Controller\\ConfigController": {
            "class": "App\\Controller\\ConfigController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "calls": [
                "setContainer"
            ],
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Controller\\Debug\\SessionDebugController": {
            "class": "App\\Controller\\Debug\\SessionDebugController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "calls": [
                "setContainer"
            ],
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Controller\\HomeController": {
            "class": "App\\Controller\\HomeController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "calls": [
                "setContainer"
            ],
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Controller\\Media\\ImageCacheController": {
            "class": "App\\Controller\\Media\\ImageCacheController",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Service\\ImageCacheService"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "App\\Controller\\SecurityController": {
            "class": "App\\Controller\\SecurityController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "calls": [
                "setContainer"
            ],
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Controller\\SessionController": {
            "class": "App\\Controller\\SessionController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "calls": [
                "setContainer"
            ],
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Controller\\StimulusTestController": {
            "class": "App\\Controller\\StimulusTestController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "calls": [
                "setContainer"
            ],
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Doctrine\\Listener\\AttributeEntityListener": {
            "class": "App\\Doctrine\\Listener\\AttributeEntityListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Repository\\AttributeRepository"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\AttributeCodeGenerator"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.orm.entity_listener",
                    "parameters": {
                        "event": "prePersist",
                        "method": "",
                        "lazy": "",
                        "entity_manager": "",
                        "entity": "App\\Entity\\Attribute",
                        "priority": ""
                    }
                },
                {
                    "name": "doctrine.orm.entity_listener",
                    "parameters": {
                        "event": "preUpdate",
                        "method": "",
                        "lazy": "",
                        "entity_manager": "",
                        "entity": "App\\Entity\\Attribute",
                        "priority": ""
                    }
                }
            ],
            "usages": [
                ".service_locator.JE6U0mX"
            ]
        },
        "App\\Doctrine\\Listener\\OptionEntityListener": {
            "class": "App\\Doctrine\\Listener\\OptionEntityListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Repository\\OptionRepository"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\OptionCodeGenerator"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.orm.entity_listener",
                    "parameters": {
                        "event": "prePersist",
                        "method": "",
                        "lazy": "",
                        "entity_manager": "",
                        "entity": "App\\Entity\\Option",
                        "priority": ""
                    }
                },
                {
                    "name": "doctrine.orm.entity_listener",
                    "parameters": {
                        "event": "preUpdate",
                        "method": "",
                        "lazy": "",
                        "entity_manager": "",
                        "entity": "App\\Entity\\Option",
                        "priority": ""
                    }
                }
            ],
            "usages": [
                ".service_locator.JE6U0mX"
            ]
        },
        "App\\Doctrine\\Listener\\ProductEntityListener": {
            "class": "App\\Doctrine\\Listener\\ProductEntityListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Service\\ProductLifecycleService"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.orm.entity_listener",
                    "parameters": {
                        "event": "prePersist",
                        "method": "",
                        "lazy": "",
                        "entity_manager": "",
                        "entity": "App\\Entity\\Product",
                        "priority": ""
                    }
                },
                {
                    "name": "doctrine.orm.entity_listener",
                    "parameters": {
                        "event": "preUpdate",
                        "method": "",
                        "lazy": "",
                        "entity_manager": "",
                        "entity": "App\\Entity\\Product",
                        "priority": ""
                    }
                }
            ],
            "usages": [
                ".service_locator.JE6U0mX"
            ]
        },
        "App\\Doctrine\\Listener\\ProductImageListener": {
            "class": "App\\Doctrine\\Listener\\ProductImageListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.event_listener",
                    "parameters": {
                        "event": "prePersist",
                        "priority": "",
                        "connection": ""
                    }
                },
                {
                    "name": "doctrine.event_listener",
                    "parameters": {
                        "event": "preUpdate",
                        "priority": "",
                        "connection": ""
                    }
                }
            ],
            "usages": [
                ".service_locator.q6F1VxP"
            ]
        },
        "App\\Doctrine\\Listener\\ProductToCategoryListener": {
            "class": "App\\Doctrine\\Listener\\ProductToCategoryListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.event_listener",
                    "parameters": {
                        "event": "prePersist",
                        "priority": "",
                        "connection": ""
                    }
                },
                {
                    "name": "doctrine.event_listener",
                    "parameters": {
                        "event": "preUpdate",
                        "priority": "",
                        "connection": ""
                    }
                }
            ],
            "usages": [
                ".service_locator.q6F1VxP"
            ]
        },
        "App\\EventListener\\CartCookieListener": {
            "class": "App\\EventListener\\CartCookieListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_listener",
                    "parameters": {
                        "event": "kernel.response",
                        "method": "onKernelResponse"
                    }
                },
                {
                    "name": "kernel.event_listener",
                    "parameters": {
                        "event": "kernel.response",
                        "method": "onKernelResponse",
                        "priority": 0,
                        "dispatcher": ""
                    }
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "App\\EventListener\\CartSessionCleanupListener": {
            "class": "App\\EventListener\\CartSessionCleanupListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Service\\CartSessionStorage"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher",
                "debug.security.event_dispatcher.main"
            ]
        },
        "App\\EventListener\\CategoryCacheListener": {
            "class": "App\\EventListener\\CategoryCacheListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Service\\BreadcrumbBuilder"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.orm.entity_listener",
                    "parameters": {
                        "event": "postUpdate",
                        "method": "postUpdate",
                        "lazy": "",
                        "entity_manager": "",
                        "entity": "App\\Entity\\Category",
                        "priority": ""
                    }
                },
                {
                    "name": "doctrine.orm.entity_listener",
                    "parameters": {
                        "event": "postRemove",
                        "method": "postRemove",
                        "lazy": "",
                        "entity_manager": "",
                        "entity": "App\\Entity\\Category",
                        "priority": ""
                    }
                }
            ],
            "usages": [
                ".service_locator.JE6U0mX"
            ]
        },
        "App\\EventListener\\ProductImageCacheListener": {
            "class": "App\\EventListener\\ProductImageCacheListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.cache.manager"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.orm.entity_listener",
                    "parameters": {
                        "event": "postPersist",
                        "method": "postPersist",
                        "lazy": "",
                        "entity_manager": "",
                        "entity": "App\\Entity\\ProductImage",
                        "priority": ""
                    }
                }
            ],
            "usages": [
                ".service_locator.JE6U0mX"
            ]
        },
        "App\\EventSubscriber\\CartCookieSubscriber": {
            "class": "App\\EventSubscriber\\CartCookieSubscriber",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "App\\EventSubscriber\\CartLoginSubscriber": {
            "class": "App\\EventSubscriber\\CartLoginSubscriber",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Repository\\CartRepository"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\CartManager"
                },
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                },
                {
                    "type": "service",
                    "id": "App\\Http\\CartCookieFactory"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher",
                "debug.security.event_dispatcher.main"
            ]
        },
        "App\\EventSubscriber\\DeliveryContextSubscriber": {
            "class": "App\\EventSubscriber\\DeliveryContextSubscriber",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Service\\DeliveryContext"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "App\\EventSubscriber\\DeliveryDefaultSubscriber": {
            "class": "App\\EventSubscriber\\DeliveryDefaultSubscriber",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "request_stack"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\DeliveryContext"
                },
                {
                    "type": "service",
                    "id": "App\\Repository\\DeliveryTypeRepository"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "App\\Event\\CartUpdatedEvent": {
            "class": "App\\Event\\CartUpdatedEvent",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "container.error",
                    "parameters": {
                        "message": "Cannot autowire service \"App\\Event\\CartUpdatedEvent\": argument \"$cartId\" of method \"__construct()\" is type-hinted \"string\", you should configure its value explicitly."
                    }
                }
            ],
            "usages": []
        },
        "App\\Exception\\CartItemNotFoundException": {
            "class": "App\\Exception\\CartItemNotFoundException",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "App\\Exception\\InsufficientStockException": {
            "class": "App\\Exception\\InsufficientStockException",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "container.error",
                    "parameters": {
                        "message": "Cannot autowire service \"App\\Exception\\InsufficientStockException\": argument \"$message\" of method \"__construct()\" is type-hinted \"string\", you should configure its value explicitly."
                    }
                }
            ],
            "usages": []
        },
        "App\\Exception\\InvalidDeliveryDataException": {
            "class": "App\\Exception\\InvalidDeliveryDataException",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "App\\Http\\CartCookieFactory": {
            "class": "App\\Http\\CartCookieFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                true,
                true,
                "cart_id",
                180,
                null,
                "lax"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "App\\EventSubscriber\\CartLoginSubscriber",
                "App\\Service\\CartContext",
                "App\\Service\\CartManager",
                "App\\Twig\\Components\\CartCounter"
            ]
        },
        "App\\Http\\CartEtags": {
            "class": "App\\Http\\CartEtags",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Controller\\Api\\CartApiController",
                "App\\Http\\CartResponse",
                "App\\Http\\CartWriteGuard"
            ]
        },
        "App\\Http\\CartResponse": {
            "class": "App\\Http\\CartResponse",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Http\\CartEtags"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\CartDeltaBuilder"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Controller\\Api\\CartApiController",
                "App\\Controller\\Api\\DeliveryApiController"
            ]
        },
        "App\\Http\\CartWriteGuard": {
            "class": "App\\Http\\CartWriteGuard",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Http\\CartEtags"
                },
                false
            ],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Controller\\Api\\CartApiController",
                "App\\Controller\\Api\\DeliveryApiController"
            ]
        },
        "App\\Repository\\AttributeGroupRepository": {
            "class": "App\\Repository\\AttributeGroupRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\AttributeRepository": {
            "class": "App\\Repository\\AttributeRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                "App\\Api\\Processor\\DeleteAttributeGroupRestrictProcessor",
                "App\\Doctrine\\Listener\\AttributeEntityListener",
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\CarouselRepository": {
            "class": "App\\Repository\\CarouselRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\CartIdempotencyRepository": {
            "class": "App\\Repository\\CartIdempotencyRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                "App\\Service\\Idempotency\\IdempotencyService",
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\CartItemRepository": {
            "class": "App\\Repository\\CartItemRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                "App\\State\\ProductStateProcessor",
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\CartRepository": {
            "class": "App\\Repository\\CartRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                "App\\Command\\CartPurgeExpiredCommand",
                "App\\Controller\\Api\\CartApiController",
                "App\\EventSubscriber\\CartLoginSubscriber",
                "App\\Service\\CartContext",
                "App\\Service\\CartManager",
                "App\\Twig\\Components\\CartCounter",
                ".service_locator.oCuGgOo",
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\CategoryRepository": {
            "class": "App\\Repository\\CategoryRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                "App\\Controller\\Catalog\\Category\\CatalogCategoryController",
                "App\\Service\\BreadcrumbBuilder",
                "App\\Service\\FooterCategoryService",
                "App\\Service\\NavbarCategoryService",
                ".service_locator.azC1irB",
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\CityModalRepository": {
            "class": "App\\Repository\\CityModalRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\DeliveryTypeRepository": {
            "class": "App\\Repository\\DeliveryTypeRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                "App\\Controller\\Catalog\\DeliveryPageController",
                "App\\EventSubscriber\\DeliveryDefaultSubscriber",
                ".service_locator.5ZB0iDK",
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\FiasRepository": {
            "class": "App\\Repository\\FiasRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                "App\\Service\\FiasService",
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\ManufacturerRepository": {
            "class": "App\\Repository\\ManufacturerRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\OptionRepository": {
            "class": "App\\Repository\\OptionRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                "App\\Doctrine\\Listener\\OptionEntityListener",
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\OptionValueRepository": {
            "class": "App\\Repository\\OptionValueRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                "App\\Api\\Processor\\DeleteOptionRestrictProcessor",
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\OrderCustomerRepository": {
            "class": "App\\Repository\\OrderCustomerRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\OrderDeliveryRepository": {
            "class": "App\\Repository\\OrderDeliveryRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\OrderProductOptionsRepository": {
            "class": "App\\Repository\\OrderProductOptionsRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\OrderProductsRepository": {
            "class": "App\\Repository\\OrderProductsRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\OrderRepository": {
            "class": "App\\Repository\\OrderRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.H0xKdxO",
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\OrderStatusRepository": {
            "class": "App\\Repository\\OrderStatusRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\ProductAttributeAssignmentRepository": {
            "class": "App\\Repository\\ProductAttributeAssignmentRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                "App\\Api\\Processor\\DeleteAttributeGroupRestrictProcessor",
                "App\\Api\\Processor\\DeleteAttributeRestrictProcessor",
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\ProductImageRepository": {
            "class": "App\\Repository\\ProductImageRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\ProductOptionValueAssignmentRepository": {
            "class": "App\\Repository\\ProductOptionValueAssignmentRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                "App\\Api\\Processor\\DeleteOptionRestrictProcessor",
                "App\\Api\\Processor\\DeleteOptionValueRestrictProcessor",
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\ProductRepository": {
            "class": "App\\Repository\\ProductRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                "App\\Controller\\Api\\CartApiController",
                "App\\Controller\\Catalog\\Category\\CatalogCategoryController",
                "App\\Service\\CartManager",
                "App\\State\\ProductStateProcessor",
                "App\\State\\ProductStateProvider",
                ".service_locator.azC1irB",
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\ProductSeoRepository": {
            "class": "App\\Repository\\ProductSeoRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\ProductToCategoryRepository": {
            "class": "App\\Repository\\ProductToCategoryRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.azC1irB",
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\PvzPriceRepository": {
            "class": "App\\Repository\\PvzPriceRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                "App\\Controller\\Api\\DeliveryPublicController",
                "App\\Service\\Delivery\\DeliveryService",
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\SettingsRepository": {
            "class": "App\\Repository\\SettingsRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Repository\\UserRepository": {
            "class": "App\\Repository\\UserRepository",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.repository_service",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.fbEHMRD"
            ]
        },
        "App\\Service\\AttributeCodeGenerator": {
            "class": "App\\Service\\AttributeCodeGenerator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Doctrine\\Listener\\AttributeEntityListener"
            ]
        },
        "App\\Service\\BreadcrumbBuilder": {
            "class": "App\\Service\\BreadcrumbBuilder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Repository\\CategoryRepository"
                },
                {
                    "type": "service",
                    "id": "router.default"
                },
                {
                    "type": "service",
                    "id": "cache.app"
                },
                {
                    "type": "service",
                    "id": "cache.app"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Controller\\Catalog\\Category\\CatalogCategoryController",
                "App\\Controller\\Catalog\\Product\\ProductCatalogController",
                "App\\EventListener\\CategoryCacheListener"
            ]
        },
        "App\\Service\\CartCalculator": {
            "class": "App\\Service\\CartCalculator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Service\\Delivery\\DeliveryService"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\LivePriceCalculator"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Controller\\Api\\CartApiController",
                "App\\Controller\\Api\\DeliveryApiController",
                "App\\Service\\CartDeltaBuilder",
                "App\\Service\\CartManager"
            ]
        },
        "App\\Service\\CartContext": {
            "class": "App\\Service\\CartContext",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                },
                {
                    "type": "service",
                    "id": "App\\Repository\\CartRepository"
                },
                {
                    "type": "service",
                    "id": "lock.default.factory"
                },
                {
                    "type": "service",
                    "id": "request_stack"
                },
                {
                    "type": "service",
                    "id": "App\\Http\\CartCookieFactory"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Command\\TestRemoveItemCommand",
                "App\\Controller\\Api\\CartApiController"
            ]
        },
        "App\\Service\\CartDeltaBuilder": {
            "class": "App\\Service\\CartDeltaBuilder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "description": "\u0421\u0435\u0440\u0432\u0438\u0441 \u0434\u043b\u044f \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043e\u0442\u0432\u0435\u0442\u043e\u0432 Cart API",
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Service\\CartCalculator"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\LivePriceCalculator"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Controller\\Api\\CartApiController",
                "App\\Http\\CartResponse"
            ]
        },
        "App\\Service\\CartLockService": {
            "class": "App\\Service\\CartLockService",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "lock.default.factory"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Service\\CartManager"
            ]
        },
        "App\\Service\\CartManager": {
            "class": "App\\Service\\CartManager",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "description": "CartManager - \u0441\u0435\u0440\u0432\u0438\u0441 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u0440\u0437\u0438\u043d\u043e\u0439 \u043f\u043e\u043a\u0443\u043f\u043e\u043a",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                },
                {
                    "type": "service",
                    "id": "App\\Repository\\CartRepository"
                },
                {
                    "type": "service",
                    "id": "App\\Repository\\ProductRepository"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\CartCalculator"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\InventoryService"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\CartLockService"
                },
                {
                    "type": "service",
                    "id": "request_stack"
                },
                {
                    "type": "service",
                    "id": "debug.event_dispatcher"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\DeliveryContext"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\CheckoutContext"
                },
                {
                    "type": "service",
                    "id": "App\\Http\\CartCookieFactory"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\LivePriceCalculator"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Command\\TestCartHashCommand",
                "App\\Command\\TestRemoveItemCommand",
                "App\\Controller\\Api\\CartApiController",
                "App\\Controller\\Api\\DeliveryApiController",
                "App\\EventSubscriber\\CartLoginSubscriber",
                ".service_locator.5ZB0iDK",
                ".service_locator.mDm18Yb",
                ".service_locator.H0xKdxO"
            ]
        },
        "App\\Service\\CartSessionStorage": {
            "class": "App\\Service\\CartSessionStorage",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "request_stack"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "App\\EventListener\\CartSessionCleanupListener"
            ]
        },
        "App\\Service\\CheckoutContext": {
            "class": "App\\Service\\CheckoutContext",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "request_stack"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Service\\CartManager",
                ".service_locator.H0xKdxO"
            ]
        },
        "App\\Service\\DeliveryContext": {
            "class": "App\\Service\\DeliveryContext",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "request_stack"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\GeoIpService"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Controller\\Api\\DeliveryApiController",
                "App\\Controller\\Catalog\\CheckoutController",
                "App\\Controller\\Catalog\\DeliveryPageController",
                "App\\EventSubscriber\\DeliveryContextSubscriber",
                "App\\EventSubscriber\\DeliveryDefaultSubscriber",
                "App\\Service\\CartManager",
                "App\\Service\\Delivery\\DeliveryService",
                ".service_locator.5ZB0iDK",
                ".service_locator.H0xKdxO"
            ]
        },
        "App\\Service\\Delivery\\DeliveryService": {
            "class": "App\\Service\\Delivery\\DeliveryService",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "description": "\u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0441\u0435\u0440\u0432\u0438\u0441 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0440\u0430\u0441\u0447\u0435\u0442\u0430\u043c\u0438 \u0434\u043e\u0441\u0442\u0430\u0432\u043a\u0438. \u0417\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u0441\u0442\u0430\u0440\u044b\u0439 ShippingCalculator.",
            "arguments": [
                [],
                {
                    "type": "service",
                    "id": "App\\Service\\DeliveryContext"
                },
                {
                    "type": "service",
                    "id": "App\\Repository\\PvzPriceRepository"
                },
                {
                    "type": "service",
                    "id": "cache.app"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Controller\\Api\\CartApiController",
                "App\\Controller\\Api\\DeliveryApiController",
                "App\\Controller\\Catalog\\CartController",
                "App\\Service\\CartCalculator",
                ".service_locator.mDm18Yb",
                ".service_locator.H0xKdxO"
            ]
        },
        "App\\Service\\Delivery\\Dto\\CalculationContext": {
            "class": "App\\Service\\Delivery\\Dto\\CalculationContext",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "container.error",
                    "parameters": {
                        "message": "Cannot autowire service \"App\\Service\\Delivery\\Dto\\CalculationContext\": argument \"$cart\" of method \"__construct()\" needs an instance of \"App\\Entity\\Cart\" but this type has been excluded because it's a Doctrine entity."
                    }
                }
            ],
            "usages": []
        },
        "App\\Service\\Delivery\\Dto\\DeliveryCalculationResult": {
            "class": "App\\Service\\Delivery\\Dto\\DeliveryCalculationResult",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "description": "DTO \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0440\u0430\u0441\u0447\u0435\u0442\u0430 \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u0438 \u0434\u043e\u0441\u0442\u0430\u0432\u043a\u0438. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 readonly-\u0441\u0432\u043e\u0439\u0441\u0442\u0432 \u0433\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0435\u0442 \u043d\u0435\u0438\u0437\u043c\u0435\u043d\u044f\u0435\u043c\u043e\u0441\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043f\u043e\u0441\u043b\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "container.error",
                    "parameters": {
                        "message": "Cannot autowire service \"App\\Service\\Delivery\\Dto\\DeliveryCalculationResult\": argument \"$cost\" of method \"__construct()\" is type-hinted \"int\", you should configure its value explicitly."
                    }
                }
            ],
            "usages": []
        },
        "App\\Service\\Delivery\\Method\\CourierDeliveryMethod": {
            "class": "App\\Service\\Delivery\\Method\\CourierDeliveryMethod",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                "cost_per_item",
                "%env(int:DELIVERY_COURIER_SURCHARGE)%",
                "%env(int:DELIVERY_FREE_THRESHOLD_DEFAULT)%"
            ],
            "file": null,
            "tags": [
                {
                    "name": "app.delivery_method",
                    "parameters": []
                },
                {
                    "name": "app.delivery_provider",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Service\\Delivery\\Method\\PvzDeliveryMethod": {
            "class": "App\\Service\\Delivery\\Method\\PvzDeliveryMethod",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                "cost_per_item",
                "%env(int:DELIVERY_FREE_THRESHOLD_DEFAULT)%"
            ],
            "file": null,
            "tags": [
                {
                    "name": "app.delivery_method",
                    "parameters": []
                },
                {
                    "name": "app.delivery_provider",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "App\\Service\\Delivery\\Provider\\DeliveryProviderRegistry": {
            "class": "App\\Service\\Delivery\\Provider\\DeliveryProviderRegistry",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                []
            ],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Controller\\Catalog\\CheckoutController"
            ]
        },
        "App\\Service\\FiasService": {
            "class": "App\\Service\\FiasService",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "description": "\u0421\u0435\u0440\u0432\u0438\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 FIAS",
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Repository\\FiasRepository"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "App\\Service\\FooterCategoryService": {
            "class": "App\\Service\\FooterCategoryService",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Repository\\CategoryRepository"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "twig"
            ]
        },
        "App\\Service\\GeoIpService": {
            "class": "App\\Service\\GeoIpService",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Service\\DeliveryContext"
            ]
        },
        "App\\Service\\Idempotency\\BeginResult": {
            "class": "App\\Service\\Idempotency\\BeginResult",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "container.error",
                    "parameters": {
                        "message": "Cannot autowire service \"App\\Service\\Idempotency\\BeginResult\": argument \"$type\" of method \"__construct()\" is type-hinted \"string\", you should configure its value explicitly."
                    }
                }
            ],
            "usages": []
        },
        "App\\Service\\Idempotency\\IdempotencyRequestHasher": {
            "class": "App\\Service\\Idempotency\\IdempotencyRequestHasher",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Controller\\Api\\CartApiController"
            ]
        },
        "App\\Service\\Idempotency\\IdempotencyService": {
            "class": "App\\Service\\Idempotency\\IdempotencyService",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                },
                {
                    "type": "service",
                    "id": "App\\Repository\\CartIdempotencyRepository"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Command\\TestIdempotencyCommand",
                "App\\Controller\\Api\\CartApiController"
            ]
        },
        "App\\Service\\ImageCacheService": {
            "class": "App\\Service\\ImageCacheService",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.cache.manager"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.filter.manager"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.filter.configuration"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.data.manager"
                },
                "J:\\laragon\\www\\new3"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Controller\\Admin\\MediaAdminController",
                "App\\Controller\\Media\\ImageCacheController"
            ]
        },
        "App\\Service\\ImageWarmupService": {
            "class": "App\\Service\\ImageWarmupService",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.data.manager"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.filter.manager"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.cache.manager"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Controller\\Admin\\MediaAdminController"
            ]
        },
        "App\\Service\\InventoryService": {
            "class": "App\\Service\\InventoryService",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                },
                {
                    "type": "service",
                    "id": "cache.app"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Service\\CartManager"
            ]
        },
        "App\\Service\\LivePriceCalculator": {
            "class": "App\\Service\\LivePriceCalculator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "description": "LivePriceCalculator - \u0441\u0435\u0440\u0432\u0438\u0441 \u0434\u043b\u044f \u0440\u0430\u0441\u0447\u0451\u0442\u0430 \u0430\u043a\u0442\u0443\u0430\u043b\u044c\u043d\u044b\u0445 \u0446\u0435\u043d \u0442\u043e\u0432\u0430\u0440\u043e\u0432 \u0432 \u043a\u043e\u0440\u0437\u0438\u043d\u0435",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Controller\\Api\\CartApiController",
                "App\\Service\\CartCalculator",
                "App\\Service\\CartDeltaBuilder",
                "App\\Service\\CartManager"
            ]
        },
        "App\\Service\\LoggerService": {
            "class": "App\\Service\\LoggerService",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "description": "\u0421\u0435\u0440\u0432\u0438\u0441 \u0434\u043b\u044f \u0446\u0435\u043d\u0442\u0440\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f",
            "arguments": [
                {
                    "type": "service",
                    "id": "monolog.logger"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Command\\TestLoggingCommand"
            ]
        },
        "App\\Service\\NavbarCategoryService": {
            "class": "App\\Service\\NavbarCategoryService",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Repository\\CategoryRepository"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "twig"
            ]
        },
        "App\\Service\\OptionCodeGenerator": {
            "class": "App\\Service\\OptionCodeGenerator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Doctrine\\Listener\\OptionEntityListener"
            ]
        },
        "App\\Service\\PaginationService": {
            "class": "App\\Service\\PaginationService",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "parameter_bag"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "App\\State\\ProductStateProcessor",
                "App\\State\\ProductStateProvider",
                ".service_locator.Icu.WO7"
            ]
        },
        "App\\Service\\PriceNormalizer": {
            "class": "App\\Service\\PriceNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "description": "PriceNormalizer - \u0443\u0442\u0438\u043b\u0438\u0442\u0430 \u0434\u043b\u044f \u043d\u043e\u0440\u043c\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0446\u0435\u043d \u0432 \u0440\u0443\u0431\u043b\u044f\u0445 (\u0446\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430)",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "App\\Service\\ProductCopyService": {
            "class": "App\\Service\\ProductCopyService",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                },
                {
                    "type": "service",
                    "id": "slugger"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\ProductLifecycleService"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Controller\\Admin\\Api\\ProductCopyController"
            ]
        },
        "App\\Service\\ProductLifecycleService": {
            "class": "App\\Service\\ProductLifecycleService",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "slugger"
                },
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Doctrine\\Listener\\ProductEntityListener",
                "App\\Service\\ProductCopyService"
            ]
        },
        "App\\Service\\ProductVariantService": {
            "class": "App\\Service\\ProductVariantService",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                },
                {
                    "type": "service",
                    "id": "cache.app"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "App\\State\\ProductStateProcessor": {
            "class": "App\\State\\ProductStateProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "description": "Processes ProductResource writes to Product entity.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                },
                {
                    "type": "service",
                    "id": "App\\Repository\\ProductRepository"
                },
                {
                    "type": "service",
                    "id": "App\\Repository\\CartItemRepository"
                },
                {
                    "type": "service",
                    "id": "request_stack"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\PaginationService"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.state_processor",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B8Wul0F"
            ]
        },
        "App\\State\\ProductStateProvider": {
            "class": "App\\State\\ProductStateProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "description": "Provides ProductResource items and collections from Product entity.",
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Repository\\ProductRepository"
                },
                {
                    "type": "service",
                    "id": "App\\Service\\PaginationService"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.state_provider",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.FwcobOi"
            ]
        },
        "App\\State\\UserPasswordProcessor": {
            "class": "App\\State\\UserPasswordProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                },
                {
                    "type": "service",
                    "id": "security.user_password_hasher"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.state_processor",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B8Wul0F"
            ]
        },
        "App\\Twig\\Components\\CartCounter": {
            "class": "App\\Twig\\Components\\CartCounter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": false,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "App\\Repository\\CartRepository"
                },
                {
                    "type": "service",
                    "id": "request_stack"
                },
                {
                    "type": "service",
                    "id": "App\\Http\\CartCookieFactory"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "twig.component",
                    "parameters": {
                        "key": "CartCounter",
                        "expose_public_props": 1,
                        "attributes_var": "attributes"
                    }
                }
            ],
            "usages": [
                ".service_locator.1va4iYR"
            ]
        },
        "App\\Twig\\ContactsExtension": {
            "class": "App\\Twig\\ContactsExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "App\\Twig\\PriceExtension": {
            "class": "App\\Twig\\PriceExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "App\\Validator\\ConsistentAttributeAssignmentValidator": {
            "class": "App\\Validator\\ConsistentAttributeAssignmentValidator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "validator.constraint_validator",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.kCsWobb"
            ]
        },
        "Doctrine\\Bundle\\DoctrineBundle\\Controller\\ProfilerController": {
            "class": "Doctrine\\Bundle\\DoctrineBundle\\Controller\\ProfilerController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "@internal",
            "arguments": [
                {
                    "type": "service",
                    "id": "twig"
                },
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "profiler"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "Doctrine\\Bundle\\DoctrineBundle\\Dbal\\ManagerRegistryAwareConnectionProvider": {
            "class": "Doctrine\\Bundle\\DoctrineBundle\\Dbal\\ManagerRegistryAwareConnectionProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": ".21_Registry~4VeSJ51"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "doctrine.query_sql_command",
                "Doctrine\\DBAL\\Tools\\Console\\Command\\RunSqlCommand"
            ]
        },
        "Doctrine\\DBAL\\Tools\\Console\\Command\\RunSqlCommand": {
            "class": "Doctrine\\DBAL\\Tools\\Console\\Command\\RunSqlCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Task for executing arbitrary SQL that can come from a file or directly from the command line.",
            "arguments": [
                {
                    "type": "service",
                    "id": "Doctrine\\Bundle\\DoctrineBundle\\Dbal\\ManagerRegistryAwareConnectionProvider"
                }
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "dbal:run-sql"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "Liip\\ImagineBundle\\Controller\\ImagineController": {
            "class": "Liip\\ImagineBundle\\Controller\\ImagineController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.service.filter"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.data.manager"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.cache.signer"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.controller.config"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "liip_imagine.controller"
            ]
        },
        "Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Redirects a request to another URL.",
            "arguments": [
                {
                    "type": "service",
                    "id": "router.default"
                },
                {
                    "type": "service",
                    "id": ".5_int~4VeSJ51"
                },
                {
                    "type": "service",
                    "id": ".6_int~4VeSJ51"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "Symfony\\Bundle\\FrameworkBundle\\Controller\\TemplateController": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Controller\\TemplateController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "TemplateController.",
            "arguments": [
                {
                    "type": "service",
                    "id": "twig"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "Symfony\\UX\\LiveComponent\\ComponentValidator": {
            "class": "Symfony\\UX\\LiveComponent\\ComponentValidator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.lZH22eH.Symfony\\UX\\LiveComponent\\ComponentValidator"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.service_subscriber",
                    "parameters": {
                        "key": "validator",
                        "id": "validator"
                    }
                }
            ],
            "usages": [
                "Symfony\\UX\\LiveComponent\\ComponentValidatorInterface"
            ]
        },
        "Symfony\\WebpackEncoreBundle\\EventListener\\ResetAssetsEventListener": {
            "class": "Symfony\\WebpackEncoreBundle\\EventListener\\ResetAssetsEventListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "webpack_encore.entrypoint_lookup_collection"
                },
                [
                    "_default"
                ]
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "annotated_app_entity_carousel_api_platform_doctrine_orm_filter_search_filter": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\SearchFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The search filter allows to filter a collection by given properties.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "api_platform.symfony.iri_converter"
                },
                {
                    "type": "service",
                    "id": "property_accessor"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                {
                    "place": "exact"
                },
                {
                    "type": "service",
                    "id": "api_platform.api.identifiers_extractor"
                },
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.filter",
                    "parameters": []
                }
            ],
            "usages": [
                "api_platform.filter_locator"
            ]
        },
        "annotated_app_entity_city_api_platform_doctrine_orm_filter_order_filter": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\OrderFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The order filter allows to sort a collection against the given properties.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                "order",
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                {
                    "population": "DESC"
                },
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                },
                null
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.filter",
                    "parameters": []
                }
            ],
            "usages": [
                "api_platform.filter_locator"
            ]
        },
        "annotated_app_entity_city_api_platform_doctrine_orm_filter_search_filter": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\SearchFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The search filter allows to filter a collection by given properties.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "api_platform.symfony.iri_converter"
                },
                {
                    "type": "service",
                    "id": "property_accessor"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                {
                    "address": "partial"
                },
                {
                    "type": "service",
                    "id": "api_platform.api.identifiers_extractor"
                },
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.filter",
                    "parameters": []
                }
            ],
            "usages": [
                "api_platform.filter_locator"
            ]
        },
        "annotated_app_entity_fias_api_platform_doctrine_orm_filter_search_filter": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\SearchFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The search filter allows to filter a collection by given properties.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "api_platform.symfony.iri_converter"
                },
                {
                    "type": "service",
                    "id": "property_accessor"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                {
                    "offname": "partial",
                    "shortname": "partial",
                    "postalcode": "partial",
                    "level": "exact",
                    "parentId": "exact"
                },
                {
                    "type": "service",
                    "id": "api_platform.api.identifiers_extractor"
                },
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.filter",
                    "parameters": []
                }
            ],
            "usages": [
                "api_platform.filter_locator"
            ]
        },
        "annotated_app_entity_option_value_api_platform_doctrine_orm_filter_search_filter": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\SearchFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The search filter allows to filter a collection by given properties.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "api_platform.symfony.iri_converter"
                },
                {
                    "type": "service",
                    "id": "property_accessor"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                {
                    "optionType": "exact"
                },
                {
                    "type": "service",
                    "id": "api_platform.api.identifiers_extractor"
                },
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.filter",
                    "parameters": []
                }
            ],
            "usages": [
                "api_platform.filter_locator"
            ]
        },
        "annotated_app_entity_order_api_platform_doctrine_orm_filter_order_filter": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\OrderFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The order filter allows to sort a collection against the given properties.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                "order",
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                {
                    "dateAdded": null
                },
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                },
                null
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.filter",
                    "parameters": []
                }
            ],
            "usages": [
                "api_platform.filter_locator"
            ]
        },
        "annotated_app_entity_order_api_platform_doctrine_orm_filter_search_filter": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\SearchFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The search filter allows to filter a collection by given properties.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "api_platform.symfony.iri_converter"
                },
                {
                    "type": "service",
                    "id": "property_accessor"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                {
                    "orderId": "partial",
                    "status": "exact",
                    "customer.name": "partial",
                    "customer.phone": "partial"
                },
                {
                    "type": "service",
                    "id": "api_platform.api.identifiers_extractor"
                },
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.filter",
                    "parameters": []
                }
            ],
            "usages": [
                "api_platform.filter_locator"
            ]
        },
        "annotated_app_entity_product_api_platform_doctrine_orm_filter_boolean_filter": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\BooleanFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The boolean filter allows you to search on boolean fields and values.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                {
                    "attributeAssignments.boolValue": null
                },
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.filter",
                    "parameters": []
                }
            ],
            "usages": [
                "api_platform.filter_locator"
            ]
        },
        "annotated_app_entity_product_api_platform_doctrine_orm_filter_order_filter": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\OrderFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The order filter allows to sort a collection against the given properties.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                "order",
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                {
                    "dateAdded": null,
                    "status": null,
                    "sortOrder": null,
                    "effectivePrice": null
                },
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                },
                null
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.filter",
                    "parameters": []
                }
            ],
            "usages": [
                "api_platform.filter_locator"
            ]
        },
        "annotated_app_entity_product_api_platform_doctrine_orm_filter_range_filter": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\RangeFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The range filter allows you to filter by a value lower than, greater than, lower than or equal, greater than or equal and between two values.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                {
                    "attributeAssignments.intValue": null,
                    "attributeAssignments.decimalValue": null
                },
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.filter",
                    "parameters": []
                }
            ],
            "usages": [
                "api_platform.filter_locator"
            ]
        },
        "annotated_app_entity_product_api_platform_doctrine_orm_filter_search_filter": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\SearchFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The search filter allows to filter a collection by given properties.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "api_platform.symfony.iri_converter"
                },
                {
                    "type": "service",
                    "id": "property_accessor"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                {
                    "attributeAssignments.attribute.code": "exact",
                    "attributeAssignments.attributeGroup.code": "exact",
                    "category.category": "exact"
                },
                {
                    "type": "service",
                    "id": "api_platform.api.identifiers_extractor"
                },
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.filter",
                    "parameters": []
                }
            ],
            "usages": [
                "api_platform.filter_locator"
            ]
        },
        "annotated_app_entity_product_to_category_api_platform_doctrine_orm_filter_search_filter": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\SearchFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The search filter allows to filter a collection by given properties.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "api_platform.symfony.iri_converter"
                },
                {
                    "type": "service",
                    "id": "property_accessor"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                {
                    "product": "exact",
                    "category": "exact"
                },
                {
                    "type": "service",
                    "id": "api_platform.api.identifiers_extractor"
                },
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.filter",
                    "parameters": []
                }
            ],
            "usages": [
                "api_platform.filter_locator"
            ]
        },
        "annotated_app_entity_pvz_points_api_platform_doctrine_orm_filter_search_filter": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\SearchFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The search filter allows to filter a collection by given properties.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "api_platform.symfony.iri_converter"
                },
                {
                    "type": "service",
                    "id": "property_accessor"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                {
                    "city": "partial",
                    "cityFias.id": "exact",
                    "region": "partial"
                },
                {
                    "type": "service",
                    "id": "api_platform.api.identifiers_extractor"
                },
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.filter",
                    "parameters": []
                }
            ],
            "usages": [
                "api_platform.filter_locator"
            ]
        },
        "annotated_app_entity_pvz_price_api_platform_doctrine_orm_filter_search_filter": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\SearchFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The search filter allows to filter a collection by given properties.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "api_platform.symfony.iri_converter"
                },
                {
                    "type": "service",
                    "id": "property_accessor"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                {
                    "city": "partial",
                    "cityFias.id": "exact",
                    "region": "partial"
                },
                {
                    "type": "service",
                    "id": "api_platform.api.identifiers_extractor"
                },
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.filter",
                    "parameters": []
                }
            ],
            "usages": [
                "api_platform.filter_locator"
            ]
        },
        "api_platform.action.documentation": {
            "class": "ApiPlatform\\Symfony\\Action\\DocumentationAction",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Generates the API documentation.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.name_collection_factory.cached"
                },
                "Hello API Platform",
                "",
                "1.0.0",
                {
                    "type": "service",
                    "id": "api_platform.openapi.factory"
                },
                {
                    "type": "service",
                    "id": "api_platform.state_provider.content_negotiation"
                },
                {
                    "type": "service",
                    "id": "api_platform.state_processor.write"
                },
                {
                    "type": "service",
                    "id": "api_platform.negotiator"
                },
                "%api_platform.docs_formats%"
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "api_platform.action.entrypoint": {
            "class": "ApiPlatform\\Symfony\\Action\\EntrypointAction",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Generates the API entrypoint.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.name_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.state_provider.content_negotiation"
                },
                {
                    "type": "service",
                    "id": "api_platform.state_processor.write"
                },
                "%api_platform.docs_formats%"
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "api_platform.action.not_exposed": {
            "class": "ApiPlatform\\Symfony\\Action\\NotExposedAction",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An action which always returns HTTP 404 Not Found with an explanation for why the operation is not exposed.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "ApiPlatform\\Symfony\\Action\\NotExposedAction"
            ]
        },
        "api_platform.action.not_found": {
            "class": "ApiPlatform\\Symfony\\Action\\NotFoundAction",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An action which always returns HTTP 404 Not Found. Useful for disabling an operation.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "ApiPlatform\\Symfony\\Action\\NotFoundAction"
            ]
        },
        "api_platform.api.identifiers_extractor": {
            "class": "ApiPlatform\\Metadata\\IdentifiersExtractor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "{@inheritdoc}",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.resource_class_resolver"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.name_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.metadata_factory.cached"
                },
                {
                    "type": "service",
                    "id": "property_accessor"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.identifiers_extractor",
                "ApiPlatform\\Metadata\\IdentifiersExtractorInterface",
                "api_platform.symfony.iri_converter",
                "api_platform.doctrine.orm.search_filter.instance",
                "annotated_app_entity_carousel_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_city_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_fias_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_option_value_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_order_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_product_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_product_to_category_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_pvz_points_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_pvz_price_api_platform_doctrine_orm_filter_search_filter"
            ]
        },
        "api_platform.argument_resolver.payload": {
            "class": "ApiPlatform\\Symfony\\Bundle\\ArgumentResolver\\PayloadArgumentResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.openapi.serializer_context_builder"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "controller.argument_value_resolver",
                    "parameters": []
                }
            ],
            "usages": [
                ".debug.value_resolver.api_platform.argument_resolver.payload"
            ]
        },
        "api_platform.cache.metadata.property": {
            "class": "Symfony\\Component\\Cache\\Adapter\\TraceableAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An adapter that collects data about all cache calls.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.cache.metadata.property.recorder_inner"
                },
                {
                    "type": "service",
                    "id": "profiler.is_disabled_state_checker"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": []
                },
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "cache.system_clearer",
                "cache.global_clearer",
                "data_collector.cache",
                "api_platform.metadata.property.name_collection_factory.cached",
                "api_platform.metadata.property.metadata_factory.cached"
            ]
        },
        "api_platform.cache.metadata.property.recorder_inner": {
            "class": "Symfony\\Component\\Cache\\Adapter\\AdapterInterface",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Interface for adapters managing instances of Symfony's CacheItem.",
            "arguments": [
                "onDx8K73k5",
                0,
                "%container.build_id%",
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/pools\/system",
                {
                    "type": "service",
                    "id": "monolog.logger.cache"
                }
            ],
            "file": null,
            "factory_class": "Symfony\\Component\\Cache\\Adapter\\AbstractAdapter",
            "factory_method": "createSystemCache",
            "tags": [],
            "usages": [
                "api_platform.cache.metadata.property"
            ]
        },
        "api_platform.cache.metadata.resource": {
            "class": "Symfony\\Component\\Cache\\Adapter\\TraceableAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An adapter that collects data about all cache calls.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.cache.metadata.resource.recorder_inner"
                },
                {
                    "type": "service",
                    "id": "profiler.is_disabled_state_checker"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": []
                },
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "cache.system_clearer",
                "cache.global_clearer",
                "data_collector.cache",
                "api_platform.metadata.resource.name_collection_factory.cached"
            ]
        },
        "api_platform.cache.metadata.resource.recorder_inner": {
            "class": "Symfony\\Component\\Cache\\Adapter\\AdapterInterface",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Interface for adapters managing instances of Symfony's CacheItem.",
            "arguments": [
                "s7aKeuqQpJ",
                0,
                "%container.build_id%",
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/pools\/system",
                {
                    "type": "service",
                    "id": "monolog.logger.cache"
                }
            ],
            "file": null,
            "factory_class": "Symfony\\Component\\Cache\\Adapter\\AbstractAdapter",
            "factory_method": "createSystemCache",
            "tags": [],
            "usages": [
                "api_platform.cache.metadata.resource"
            ]
        },
        "api_platform.cache.metadata.resource_collection": {
            "class": "Symfony\\Component\\Cache\\Adapter\\TraceableAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An adapter that collects data about all cache calls.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.cache.metadata.resource_collection.recorder_inner"
                },
                {
                    "type": "service",
                    "id": "profiler.is_disabled_state_checker"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": []
                },
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "cache.system_clearer",
                "cache.global_clearer",
                "data_collector.cache",
                "api_platform.metadata.resource.metadata_collection_factory.cached"
            ]
        },
        "api_platform.cache.metadata.resource_collection.recorder_inner": {
            "class": "Symfony\\Component\\Cache\\Adapter\\AdapterInterface",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Interface for adapters managing instances of Symfony's CacheItem.",
            "arguments": [
                "D3b6ywpT0r",
                0,
                "%container.build_id%",
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/pools\/system",
                {
                    "type": "service",
                    "id": "monolog.logger.cache"
                }
            ],
            "file": null,
            "factory_class": "Symfony\\Component\\Cache\\Adapter\\AbstractAdapter",
            "factory_method": "createSystemCache",
            "tags": [],
            "usages": [
                "api_platform.cache.metadata.resource_collection"
            ]
        },
        "api_platform.cache.openapi": {
            "class": "Symfony\\Component\\Cache\\Adapter\\TraceableAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An adapter that collects data about all cache calls.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.cache.openapi.recorder_inner"
                },
                {
                    "type": "service",
                    "id": "profiler.is_disabled_state_checker"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": []
                },
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "cache.system_clearer",
                "cache.global_clearer",
                "data_collector.cache"
            ]
        },
        "api_platform.cache.openapi.recorder_inner": {
            "class": "Symfony\\Component\\Cache\\Adapter\\AdapterInterface",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Interface for adapters managing instances of Symfony's CacheItem.",
            "arguments": [
                "fhoLt7a0iI",
                0,
                "%container.build_id%",
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/pools\/system",
                {
                    "type": "service",
                    "id": "monolog.logger.cache"
                }
            ],
            "file": null,
            "factory_class": "Symfony\\Component\\Cache\\Adapter\\AbstractAdapter",
            "factory_method": "createSystemCache",
            "tags": [],
            "usages": [
                "api_platform.cache.openapi"
            ]
        },
        "api_platform.cache.route_name_resolver": {
            "class": "Symfony\\Component\\Cache\\Adapter\\TraceableAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An adapter that collects data about all cache calls.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.cache.route_name_resolver.recorder_inner"
                },
                {
                    "type": "service",
                    "id": "profiler.is_disabled_state_checker"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": []
                },
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "cache.system_clearer",
                "cache.global_clearer",
                "data_collector.cache"
            ]
        },
        "api_platform.cache.route_name_resolver.recorder_inner": {
            "class": "Symfony\\Component\\Cache\\Adapter\\AdapterInterface",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Interface for adapters managing instances of Symfony's CacheItem.",
            "arguments": [
                "XpEfL4X2-g",
                0,
                "%container.build_id%",
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/pools\/system",
                {
                    "type": "service",
                    "id": "monolog.logger.cache"
                }
            ],
            "file": null,
            "factory_class": "Symfony\\Component\\Cache\\Adapter\\AbstractAdapter",
            "factory_method": "createSystemCache",
            "tags": [],
            "usages": [
                "api_platform.cache.route_name_resolver"
            ]
        },
        "api_platform.cache_warmer.cache_pool_clearer": {
            "class": "ApiPlatform\\Symfony\\Bundle\\CacheWarmer\\CachePoolClearerCacheWarmer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Clears the cache pools when warming up the cache.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache.system_clearer"
                },
                [
                    "api_platform.cache.metadata.property",
                    "api_platform.cache.metadata.resource",
                    "api_platform.cache.metadata.resource_collection",
                    "api_platform.cache.route_name_resolver",
                    "api_platform.cache.identifiers_extractor",
                    "api_platform.elasticsearch.cache.metadata.document"
                ]
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.cache_warmer",
                    "parameters": {
                        "priority": 64
                    }
                }
            ],
            "usages": []
        },
        "api_platform.data_collector.request": {
            "class": "ApiPlatform\\Symfony\\Bundle\\DataCollector\\RequestDataCollector",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.filter_locator"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "data_collector",
                    "parameters": {
                        "template": "@ApiPlatform\/DataCollector\/request.html.twig",
                        "id": "api_platform.data_collector.request",
                        "priority": 334
                    }
                }
            ],
            "usages": [
                "profiler"
            ]
        },
        "api_platform.doctrine.metadata_factory": {
            "class": "Doctrine\\Persistence\\Mapping\\ClassMetadataFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Contract for a Doctrine persistence layer ClassMetadata class to implement.",
            "arguments": [],
            "file": null,
            "factory_service": "doctrine.orm.default_entity_manager",
            "factory_method": "getMetadataFactory",
            "tags": [],
            "usages": []
        },
        "api_platform.doctrine.orm.backed_enum_filter": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\BackedEnumFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The backed enum filter allows you to search on backed enum fields and values.",
            "arguments": {
                "0": {
                    "type": "service",
                    "id": "doctrine"
                },
                "1": {
                    "type": "service",
                    "id": "monolog.logger"
                },
                "nameConverter": {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            },
            "file": null,
            "tags": [],
            "usages": [
                "ApiPlatform\\Doctrine\\Orm\\Filter\\BackedEnumFilter"
            ]
        },
        "api_platform.doctrine.orm.backed_enum_filter.instance": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\BackedEnumFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The backed enum filter allows you to search on backed enum fields and values.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                [],
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "api_platform.doctrine.orm.boolean_filter": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\BooleanFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The boolean filter allows you to search on boolean fields and values.",
            "arguments": {
                "0": {
                    "type": "service",
                    "id": "doctrine"
                },
                "1": {
                    "type": "service",
                    "id": "monolog.logger"
                },
                "nameConverter": {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            },
            "file": null,
            "tags": [],
            "usages": [
                "ApiPlatform\\Doctrine\\Orm\\Filter\\BooleanFilter"
            ]
        },
        "api_platform.doctrine.orm.boolean_filter.instance": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\BooleanFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The boolean filter allows you to search on boolean fields and values.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                [],
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "api_platform.doctrine.orm.date_filter": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\DateFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The date filter allows to filter a collection by date intervals.",
            "arguments": {
                "0": {
                    "type": "service",
                    "id": "doctrine"
                },
                "1": {
                    "type": "service",
                    "id": "monolog.logger"
                },
                "nameConverter": {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            },
            "file": null,
            "tags": [],
            "usages": [
                "ApiPlatform\\Doctrine\\Orm\\Filter\\DateFilter"
            ]
        },
        "api_platform.doctrine.orm.date_filter.instance": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\DateFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The date filter allows to filter a collection by date intervals.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                [],
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "api_platform.doctrine.orm.exists_filter": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\ExistsFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The exists filter allows you to select items based on a nullable field value. It will also check the emptiness of a collection association.",
            "arguments": {
                "0": {
                    "type": "service",
                    "id": "doctrine"
                },
                "1": {
                    "type": "service",
                    "id": "monolog.logger"
                },
                "existsParameterName": "exists",
                "nameConverter": {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            },
            "file": null,
            "tags": [],
            "usages": [
                "ApiPlatform\\Doctrine\\Orm\\Filter\\ExistsFilter"
            ]
        },
        "api_platform.doctrine.orm.exists_filter.instance": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\ExistsFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The exists filter allows you to select items based on a nullable field value. It will also check the emptiness of a collection association.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                [],
                "exists",
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "api_platform.doctrine.orm.extension.parameter_extension": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Extension\\ParameterExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Reads operation parameters and execute its filter.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.filter_locator"
                },
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.doctrine.orm.query_extension.collection",
                    "parameters": {
                        "priority": -16
                    }
                },
                {
                    "name": "api_platform.doctrine.orm.query_extension.item",
                    "parameters": {
                        "priority": -9
                    }
                }
            ],
            "usages": [
                "ApiPlatform\\Doctrine\\Orm\\Extension\\ParameterExtension"
            ]
        },
        "api_platform.doctrine.orm.links_handler": {
            "class": "ApiPlatform\\Doctrine\\Orm\\State\\LinksHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.doctrine.orm.links_handler",
                    "parameters": {
                        "key": "api_platform.doctrine.orm.links_handler"
                    }
                }
            ],
            "usages": [
                ".service_locator.aVKDDNU"
            ]
        },
        "api_platform.doctrine.orm.metadata.property.metadata_factory": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Metadata\\Property\\DoctrineOrmPropertyMetadataFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Use Doctrine metadata to populate the identifier property.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.metadata_factory.property_info"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.property.metadata_factory.serializer.inner",
                "api_platform.metadata.property.metadata_factory.serializer"
            ]
        },
        "api_platform.doctrine.orm.metadata.resource.link_factory": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Metadata\\Resource\\DoctrineOrmLinkFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.name_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.resource_class_resolver"
                },
                {
                    "type": "service",
                    "id": "api_platform.doctrine.orm.metadata.resource.link_factory.inner"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.decorator",
                    "parameters": {
                        "id": "api_platform.metadata.resource.link_factory",
                        "inner": "api_platform.doctrine.orm.metadata.resource.link_factory.inner"
                    }
                }
            ],
            "usages": [
                "api_platform.metadata.resource.link_factory",
                "api_platform.metadata.resource.metadata_collection_factory.not_exposed_operation",
                "api_platform.metadata.resource.metadata_collection_factory.uri_template",
                "api_platform.metadata.resource.metadata_collection_factory.link"
            ]
        },
        "api_platform.doctrine.orm.metadata.resource.link_factory.inner": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\LinkFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.name_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.metadata_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.resource_class_resolver"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.doctrine.orm.metadata.resource.link_factory"
            ]
        },
        "api_platform.doctrine.orm.metadata.resource.metadata_collection_factory": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Metadata\\Resource\\DoctrineOrmResourceCollectionMetadataFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.php_doc"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.metadata_collection_factory.cached.inner",
                "api_platform.metadata.resource.metadata_collection_factory.cached"
            ]
        },
        "api_platform.doctrine.orm.numeric_filter": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\NumericFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The numeric filter allows you to search on numeric fields and values.",
            "arguments": {
                "0": {
                    "type": "service",
                    "id": "doctrine"
                },
                "1": {
                    "type": "service",
                    "id": "monolog.logger"
                },
                "nameConverter": {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            },
            "file": null,
            "tags": [],
            "usages": [
                "ApiPlatform\\Doctrine\\Orm\\Filter\\NumericFilter"
            ]
        },
        "api_platform.doctrine.orm.numeric_filter.instance": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\NumericFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The numeric filter allows you to search on numeric fields and values.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                [],
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "api_platform.doctrine.orm.order_filter": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\OrderFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The order filter allows to sort a collection against the given properties.",
            "arguments": {
                "0": {
                    "type": "service",
                    "id": "doctrine"
                },
                "1": "order",
                "2": {
                    "type": "service",
                    "id": "monolog.logger"
                },
                "nameConverter": {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                },
                "orderNullsComparison": null
            },
            "file": null,
            "tags": [],
            "usages": [
                "ApiPlatform\\Doctrine\\Orm\\Filter\\OrderFilter"
            ]
        },
        "api_platform.doctrine.orm.order_filter.instance": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\OrderFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The order filter allows to sort a collection against the given properties.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                "order",
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                [],
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                },
                null
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "api_platform.doctrine.orm.query_extension.eager_loading": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Extension\\EagerLoadingExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Eager loads relations.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.name_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.metadata_factory.cached"
                },
                30,
                true,
                false,
                {
                    "type": "service",
                    "id": "api_platform.serializer.mapping.class_metadata_factory"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.doctrine.orm.query_extension.item",
                    "parameters": {
                        "priority": -8
                    }
                },
                {
                    "name": "api_platform.doctrine.orm.query_extension.collection",
                    "parameters": {
                        "priority": -18
                    }
                }
            ],
            "usages": [
                "ApiPlatform\\Doctrine\\Orm\\Extension\\EagerLoadingExtension"
            ]
        },
        "api_platform.doctrine.orm.query_extension.filter": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Extension\\FilterExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Applies filters on a resource query.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.filter_locator"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.doctrine.orm.query_extension.collection",
                    "parameters": {
                        "priority": -16
                    }
                }
            ],
            "usages": [
                "ApiPlatform\\Doctrine\\Orm\\Extension\\FilterExtension"
            ]
        },
        "api_platform.doctrine.orm.query_extension.filter_eager_loading": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Extension\\FilterEagerLoadingExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Fixes filters on OneToMany associations https:\/\/github.com\/api-platform\/core\/issues\/944.",
            "arguments": [
                true,
                {
                    "type": "service",
                    "id": "api_platform.resource_class_resolver"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.doctrine.orm.query_extension.collection",
                    "parameters": {
                        "priority": -17
                    }
                }
            ],
            "usages": [
                "ApiPlatform\\Doctrine\\Orm\\Extension\\FilterEagerLoadingExtension"
            ]
        },
        "api_platform.doctrine.orm.query_extension.order": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Extension\\OrderExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Applies selected ordering while querying resource collection.",
            "arguments": [
                "ASC"
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.doctrine.orm.query_extension.collection",
                    "parameters": {
                        "priority": -32
                    }
                }
            ],
            "usages": [
                "ApiPlatform\\Doctrine\\Orm\\Extension\\OrderExtension"
            ]
        },
        "api_platform.doctrine.orm.query_extension.pagination": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Extension\\PaginationExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Applies pagination on the Doctrine query for resource collection when enabled.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "api_platform.pagination"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.doctrine.orm.query_extension.collection",
                    "parameters": {
                        "priority": -64
                    }
                }
            ],
            "usages": [
                "ApiPlatform\\Doctrine\\Orm\\Extension\\PaginationExtension"
            ]
        },
        "api_platform.doctrine.orm.range_filter": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\RangeFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The range filter allows you to filter by a value lower than, greater than, lower than or equal, greater than or equal and between two values.",
            "arguments": {
                "0": {
                    "type": "service",
                    "id": "doctrine"
                },
                "1": {
                    "type": "service",
                    "id": "monolog.logger"
                },
                "nameConverter": {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            },
            "file": null,
            "tags": [],
            "usages": [
                "ApiPlatform\\Doctrine\\Orm\\Filter\\RangeFilter"
            ]
        },
        "api_platform.doctrine.orm.range_filter.instance": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\RangeFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The range filter allows you to filter by a value lower than, greater than, lower than or equal, greater than or equal and between two values.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                [],
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "api_platform.doctrine.orm.search_filter": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\SearchFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The search filter allows to filter a collection by given properties.",
            "arguments": {
                "0": {
                    "type": "service",
                    "id": "doctrine"
                },
                "1": {
                    "type": "service",
                    "id": "api_platform.symfony.iri_converter"
                },
                "2": {
                    "type": "service",
                    "id": "property_accessor"
                },
                "3": {
                    "type": "service",
                    "id": "monolog.logger"
                },
                "identifiersExtractor": {
                    "type": "service",
                    "id": "api_platform.api.identifiers_extractor"
                },
                "nameConverter": {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            },
            "file": null,
            "tags": [],
            "usages": [
                "ApiPlatform\\Doctrine\\Orm\\Filter\\SearchFilter"
            ]
        },
        "api_platform.doctrine.orm.search_filter.instance": {
            "class": "ApiPlatform\\Doctrine\\Orm\\Filter\\SearchFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The search filter allows to filter a collection by given properties.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "api_platform.symfony.iri_converter"
                },
                {
                    "type": "service",
                    "id": "property_accessor"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                [],
                {
                    "type": "service",
                    "id": "api_platform.api.identifiers_extractor"
                },
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "api_platform.doctrine.orm.state.collection_provider": {
            "class": "ApiPlatform\\Doctrine\\Orm\\State\\CollectionProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Collection state provider using the Doctrine ORM.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "doctrine"
                },
                [],
                {
                    "type": "service",
                    "id": ".service_locator.aVKDDNU"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.state_provider",
                    "parameters": {
                        "priority": -100,
                        "key": "ApiPlatform\\Doctrine\\Orm\\State\\CollectionProvider"
                    }
                },
                {
                    "name": "api_platform.state_provider",
                    "parameters": {
                        "priority": -100,
                        "key": "api_platform.doctrine.orm.state.collection_provider"
                    }
                }
            ],
            "usages": [
                "ApiPlatform\\Doctrine\\Orm\\State\\CollectionProvider",
                ".service_locator.FwcobOi"
            ]
        },
        "api_platform.doctrine.orm.state.item_provider": {
            "class": "ApiPlatform\\Doctrine\\Orm\\State\\ItemProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Item state provider using the Doctrine ORM.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "doctrine"
                },
                [],
                {
                    "type": "service",
                    "id": ".service_locator.aVKDDNU"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.state_provider",
                    "parameters": {
                        "priority": -100,
                        "key": "ApiPlatform\\Doctrine\\Orm\\State\\ItemProvider"
                    }
                },
                {
                    "name": "api_platform.state_provider",
                    "parameters": {
                        "priority": -100,
                        "key": "api_platform.doctrine.orm.state.item_provider"
                    }
                }
            ],
            "usages": [
                "ApiPlatform\\Doctrine\\Orm\\State\\ItemProvider",
                "api_platform.state.item_provider",
                ".service_locator.FwcobOi"
            ]
        },
        "api_platform.doctrine.orm.state.persist_processor": {
            "class": "ApiPlatform\\Doctrine\\Common\\State\\PersistProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.state_processor",
                    "parameters": {
                        "priority": -100,
                        "key": "api_platform.doctrine.orm.state.persist_processor"
                    }
                },
                {
                    "name": "api_platform.state_processor",
                    "parameters": {
                        "priority": -100,
                        "key": "ApiPlatform\\Doctrine\\Common\\State\\PersistProcessor"
                    }
                }
            ],
            "usages": [
                "ApiPlatform\\Doctrine\\Common\\State\\PersistProcessor",
                ".service_locator.B8Wul0F"
            ]
        },
        "api_platform.doctrine.orm.state.remove_processor": {
            "class": "ApiPlatform\\Doctrine\\Common\\State\\RemoveProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.state_processor",
                    "parameters": {
                        "priority": -100,
                        "key": "api_platform.doctrine.orm.state.remove_processor"
                    }
                },
                {
                    "name": "api_platform.state_processor",
                    "parameters": {
                        "priority": -100,
                        "key": "ApiPlatform\\Doctrine\\Common\\State\\RemoveProcessor"
                    }
                }
            ],
            "usages": [
                "ApiPlatform\\Doctrine\\Common\\State\\RemoveProcessor",
                ".service_locator.B8Wul0F"
            ]
        },
        "api_platform.error_listener": {
            "class": "ApiPlatform\\Symfony\\EventListener\\ErrorListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "This error listener extends the Symfony one in order to add the `_api_operation` attribute when the request is duplicated. It will later be used to retrieve the exceptionToStatus from the operation ({@see ApiPlatform\\Action\\ExceptionAction}).",
            "arguments": [
                "api_platform.symfony.main_controller",
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                true,
                [],
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                "%api_platform.error_formats%",
                "%api_platform.exception_to_status%",
                null,
                {
                    "type": "service",
                    "id": "api_platform.resource_class_resolver"
                },
                {
                    "type": "service",
                    "id": "api_platform.negotiator"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.listener.exception"
            ]
        },
        "api_platform.filter_locator": {
            "class": "Symfony\\Component\\DependencyInjection\\ServiceLocator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "annotated_app_entity_carousel_api_platform_doctrine_orm_filter_search_filter": {
                        "type": "service",
                        "id": "annotated_app_entity_carousel_api_platform_doctrine_orm_filter_search_filter"
                    },
                    "annotated_app_entity_city_api_platform_doctrine_orm_filter_order_filter": {
                        "type": "service",
                        "id": "annotated_app_entity_city_api_platform_doctrine_orm_filter_order_filter"
                    },
                    "annotated_app_entity_city_api_platform_doctrine_orm_filter_search_filter": {
                        "type": "service",
                        "id": "annotated_app_entity_city_api_platform_doctrine_orm_filter_search_filter"
                    },
                    "annotated_app_entity_fias_api_platform_doctrine_orm_filter_search_filter": {
                        "type": "service",
                        "id": "annotated_app_entity_fias_api_platform_doctrine_orm_filter_search_filter"
                    },
                    "annotated_app_entity_option_value_api_platform_doctrine_orm_filter_search_filter": {
                        "type": "service",
                        "id": "annotated_app_entity_option_value_api_platform_doctrine_orm_filter_search_filter"
                    },
                    "annotated_app_entity_order_api_platform_doctrine_orm_filter_order_filter": {
                        "type": "service",
                        "id": "annotated_app_entity_order_api_platform_doctrine_orm_filter_order_filter"
                    },
                    "annotated_app_entity_order_api_platform_doctrine_orm_filter_search_filter": {
                        "type": "service",
                        "id": "annotated_app_entity_order_api_platform_doctrine_orm_filter_search_filter"
                    },
                    "annotated_app_entity_product_api_platform_doctrine_orm_filter_order_filter": {
                        "type": "service",
                        "id": "annotated_app_entity_product_api_platform_doctrine_orm_filter_order_filter"
                    },
                    "annotated_app_entity_product_api_platform_doctrine_orm_filter_search_filter": {
                        "type": "service",
                        "id": "annotated_app_entity_product_api_platform_doctrine_orm_filter_search_filter"
                    },
                    "annotated_app_entity_product_api_platform_doctrine_orm_filter_boolean_filter": {
                        "type": "service",
                        "id": "annotated_app_entity_product_api_platform_doctrine_orm_filter_boolean_filter"
                    },
                    "annotated_app_entity_product_api_platform_doctrine_orm_filter_range_filter": {
                        "type": "service",
                        "id": "annotated_app_entity_product_api_platform_doctrine_orm_filter_range_filter"
                    },
                    "annotated_app_entity_product_to_category_api_platform_doctrine_orm_filter_search_filter": {
                        "type": "service",
                        "id": "annotated_app_entity_product_to_category_api_platform_doctrine_orm_filter_search_filter"
                    },
                    "annotated_app_entity_pvz_points_api_platform_doctrine_orm_filter_search_filter": {
                        "type": "service",
                        "id": "annotated_app_entity_pvz_points_api_platform_doctrine_orm_filter_search_filter"
                    },
                    "annotated_app_entity_pvz_price_api_platform_doctrine_orm_filter_search_filter": {
                        "type": "service",
                        "id": "annotated_app_entity_pvz_price_api_platform_doctrine_orm_filter_search_filter"
                    }
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.service_locator",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.fF6qehf",
                "api_platform.serializer.filter_parameter_provider",
                "api_platform.serializer.context_builder.filter",
                "api_platform.metadata.resource.metadata_collection_factory.parameter",
                "api_platform.openapi.factory",
                "api_platform.hydra.normalizer.collection_filters",
                "api_platform.doctrine.orm.query_extension.filter",
                "api_platform.doctrine.orm.extension.parameter_extension",
                "api_platform.validator.metadata.resource.metadata_collection_factory.parameter",
                "api_platform.data_collector.request"
            ]
        },
        "api_platform.http_cache.processor.add_headers": {
            "class": "ApiPlatform\\HttpCache\\State\\AddHeadersProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.state_processor.add_link_header"
                },
                true,
                null,
                null,
                "%api_platform.http_cache.vary%",
                null
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.decorator",
                    "parameters": {
                        "id": "api_platform.state_processor.respond",
                        "inner": "api_platform.hydra.processor.link.inner"
                    }
                }
            ],
            "usages": [
                "api_platform.state_processor.respond",
                "api_platform.state_processor.serialize.inner",
                "api_platform.state_processor.serialize"
            ]
        },
        "api_platform.hydra.json_schema.schema_factory": {
            "class": "ApiPlatform\\Hydra\\JsonSchema\\SchemaFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Decorator factory which adds Hydra properties to the JSON Schema document.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.hydra.json_schema.schema_factory.inner"
                },
                "%api_platform.serializer.default_context%"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.json_schema.backward_compatible_schema_factory.inner",
                "api_platform.json_schema.backward_compatible_schema_factory"
            ]
        },
        "api_platform.hydra.json_schema.schema_factory.inner": {
            "class": "ApiPlatform\\JsonSchema\\SchemaFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "{@inheritdoc}",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.name_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.metadata_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                },
                {
                    "type": "service",
                    "id": "api_platform.resource_class_resolver"
                },
                "%api_platform.jsonschema_formats%",
                {
                    "type": "service",
                    "id": "api_platform.json_schema.definition_name_factory"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.hydra.json_schema.schema_factory"
            ]
        },
        "api_platform.hydra.name_converter.hydra_prefix": {
            "class": "ApiPlatform\\Hydra\\Serializer\\HydraPrefixNameConverter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "serializer.name_converter.metadata_aware"
                },
                "%api_platform.serializer.default_context%"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.name_converter",
                "api_platform.serializer.normalizer.item",
                "api_platform.normalizer.constraint_violation_list",
                "api_platform.metadata.resource.metadata_collection_factory.parameter",
                "api_platform.jsonld.context_builder",
                "api_platform.jsonld.normalizer.item",
                "api_platform.jsonld.normalizer.validation_exception",
                "api_platform.hydra.normalizer.documentation",
                "api_platform.hydra.normalizer.constraint_violation_list",
                "api_platform.problem.normalizer.validation_exception",
                "api_platform.doctrine.orm.order_filter.instance",
                "api_platform.doctrine.orm.range_filter.instance",
                "api_platform.doctrine.orm.date_filter.instance",
                "api_platform.doctrine.orm.backed_enum_filter.instance",
                "api_platform.doctrine.orm.boolean_filter.instance",
                "api_platform.doctrine.orm.numeric_filter.instance",
                "api_platform.doctrine.orm.exists_filter.instance",
                "api_platform.doctrine.orm.search_filter.instance",
                "annotated_app_entity_carousel_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_city_api_platform_doctrine_orm_filter_order_filter",
                "annotated_app_entity_city_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_fias_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_option_value_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_order_api_platform_doctrine_orm_filter_order_filter",
                "annotated_app_entity_order_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_product_api_platform_doctrine_orm_filter_order_filter",
                "annotated_app_entity_product_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_product_api_platform_doctrine_orm_filter_boolean_filter",
                "annotated_app_entity_product_api_platform_doctrine_orm_filter_range_filter",
                "annotated_app_entity_product_to_category_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_pvz_points_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_pvz_price_api_platform_doctrine_orm_filter_search_filter",
                "api_platform.hydra.json_schema.schema_factory.inner"
            ]
        },
        "api_platform.hydra.normalizer.collection_filters": {
            "class": "ApiPlatform\\Hydra\\Serializer\\CollectionFiltersNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Enhances the result of collection by adding the filters applied on collection.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.hydra.normalizer.partial_collection_view"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.resource_class_resolver"
                },
                {
                    "type": "service",
                    "id": "api_platform.filter_locator"
                },
                "%api_platform.serializer.default_context%"
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "priority": -985
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -985
                    }
                },
                {
                    "name": "container.decorator",
                    "parameters": {
                        "id": "api_platform.hydra.normalizer.collection",
                        "inner": "api_platform.hydra.normalizer.partial_collection_view.inner"
                    }
                }
            ],
            "usages": [
                "api_platform.hydra.normalizer.collection",
                ".61_TraceableNormalizer~4VeSJ51",
                ".debug.serializer.normalizer.api_platform.hydra.normalizer.collection"
            ]
        },
        "api_platform.hydra.normalizer.constraint_violation_list": {
            "class": "ApiPlatform\\Hydra\\Serializer\\ConstraintViolationListNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Converts {@see \\Symfony\\Component\\Validator\\ConstraintViolationListInterface} to a Hydra error representation.",
            "arguments": [
                [],
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                },
                "%api_platform.serializer.default_context%"
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "priority": -780
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -780
                    }
                }
            ],
            "usages": [
                ".40_TraceableNormalizer~4VeSJ51",
                ".debug.serializer.normalizer.api_platform.hydra.normalizer.constraint_violation_list"
            ]
        },
        "api_platform.hydra.normalizer.documentation": {
            "class": "ApiPlatform\\Hydra\\Serializer\\DocumentationNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Creates a machine readable Hydra API documentation.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.name_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.metadata_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.resource_class_resolver"
                },
                {
                    "type": "service",
                    "id": "api_platform.router"
                },
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                },
                "%api_platform.serializer.default_context%",
                true
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "priority": -800
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -800
                    }
                }
            ],
            "usages": [
                ".43_TraceableNormalizer~4VeSJ51",
                ".debug.serializer.normalizer.api_platform.hydra.normalizer.documentation"
            ]
        },
        "api_platform.hydra.normalizer.entrypoint": {
            "class": "ApiPlatform\\Hydra\\Serializer\\EntrypointNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Normalizes the API entrypoint.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.symfony.iri_converter"
                },
                {
                    "type": "service",
                    "id": "api_platform.router"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "priority": -800
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -800
                    }
                }
            ],
            "usages": [
                ".44_TraceableNormalizer~4VeSJ51",
                ".debug.serializer.normalizer.api_platform.hydra.normalizer.entrypoint"
            ]
        },
        "api_platform.hydra.normalizer.partial_collection_view": {
            "class": "ApiPlatform\\Hydra\\Serializer\\PartialCollectionViewNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Adds a view key to the result of a paginated Hydra collection.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.hydra.normalizer.partial_collection_view.inner"
                },
                "page",
                "pagination",
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "property_accessor"
                },
                1,
                "%api_platform.serializer.default_context%"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.hydra.normalizer.collection_filters.inner",
                "api_platform.hydra.normalizer.collection_filters"
            ]
        },
        "api_platform.hydra.normalizer.partial_collection_view.inner": {
            "class": "ApiPlatform\\Hydra\\Serializer\\CollectionNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "This normalizer handles collections.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.jsonld.context_builder"
                },
                {
                    "type": "service",
                    "id": "api_platform.resource_class_resolver"
                },
                {
                    "type": "service",
                    "id": "api_platform.symfony.iri_converter"
                },
                "%api_platform.serializer.default_context%"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.hydra.normalizer.partial_collection_view"
            ]
        },
        "api_platform.hydra.processor.link": {
            "class": "ApiPlatform\\Hydra\\State\\HydraLinkProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.hydra.processor.link.inner"
                },
                {
                    "type": "service",
                    "id": "api_platform.router"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.state_processor.add_link_header.inner",
                "api_platform.state_processor.add_link_header"
            ]
        },
        "api_platform.hydra.processor.link.inner": {
            "class": "ApiPlatform\\State\\Processor\\RespondProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Serializes data.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.symfony.iri_converter"
                },
                {
                    "type": "service",
                    "id": "api_platform.resource_class_resolver"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.operation.metadata_factory"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.hydra.processor.link"
            ]
        },
        "api_platform.json_schema.backward_compatible_schema_factory": {
            "class": "ApiPlatform\\JsonSchema\\BackwardCompatibleSchemaFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "This factory decorates range integer and number properties to keep Draft 4 backward compatibility.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.hydra.json_schema.schema_factory"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.decorator",
                    "parameters": {
                        "id": "api_platform.json_schema.schema_factory",
                        "inner": "api_platform.hydra.json_schema.schema_factory.inner"
                    }
                }
            ],
            "usages": [
                "ApiPlatform\\JsonSchema\\SchemaFactoryInterface",
                "api_platform.json_schema.schema_factory",
                "api_platform.json_schema.json_schema_generate_command",
                "api_platform.openapi.factory"
            ]
        },
        "api_platform.json_schema.definition_name_factory": {
            "class": "ApiPlatform\\JsonSchema\\DefinitionNameFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "%api_platform.jsonschema_formats%"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.hydra.json_schema.schema_factory.inner"
            ]
        },
        "api_platform.json_schema.json_schema_generate_command": {
            "class": "ApiPlatform\\JsonSchema\\Command\\JsonSchemaGenerateCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Generates a resource JSON Schema.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.json_schema.backward_compatible_schema_factory"
                },
                "%api_platform.formats%"
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "api_platform.json_schema.metadata.property.metadata_factory.schema": {
            "class": "ApiPlatform\\JsonSchema\\Metadata\\Property\\Factory\\SchemaPropertyMetadataFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Build ApiProperty::schema.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.resource_class_resolver"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.metadata_factory.validator"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.property.metadata_factory.cached.inner",
                "api_platform.metadata.property.metadata_factory.cached"
            ]
        },
        "api_platform.jsonld.action.context": {
            "class": "ApiPlatform\\JsonLd\\Action\\ContextAction",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Generates JSON-LD contexts.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.jsonld.context_builder"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.name_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.state_provider.content_negotiation"
                },
                {
                    "type": "service",
                    "id": "api_platform.state_processor.write"
                },
                {
                    "type": "service",
                    "id": "debug.serializer"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "api_platform.jsonld.context_builder": {
            "class": "ApiPlatform\\JsonLd\\ContextBuilder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "{@inheritdoc}",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.name_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.name_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.metadata_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.router"
                },
                {
                    "type": "service",
                    "id": "api_platform.symfony.iri_converter.skolem"
                },
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                },
                "%api_platform.serializer.default_context%"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.jsonld.action.context",
                "api_platform.jsonld.normalizer.item",
                "api_platform.jsonld.normalizer.object",
                "api_platform.hydra.normalizer.partial_collection_view.inner"
            ]
        },
        "api_platform.jsonld.encoder": {
            "class": "ApiPlatform\\Serializer\\JsonEncoder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A JSON encoder with appropriate default options to embed the generated document into HTML.",
            "arguments": [
                "jsonld",
                null
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.encoder",
                    "parameters": []
                },
                {
                    "name": "serializer.encoder.default",
                    "parameters": []
                }
            ],
            "usages": [
                ".71_TraceableEncoder~4VeSJ51",
                ".debug.serializer.encoder.api_platform.jsonld.encoder"
            ]
        },
        "api_platform.jsonld.normalizer.error": {
            "class": "ApiPlatform\\JsonLd\\Serializer\\ErrorNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.jsonld.normalizer.item"
                },
                "%api_platform.serializer.default_context%"
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "priority": -880
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -880
                    }
                }
            ],
            "usages": [
                ".46_TraceableNormalizer~4VeSJ51",
                "api_platform.jsonld.normalizer.validation_exception",
                ".debug.serializer.normalizer.api_platform.jsonld.normalizer.error"
            ]
        },
        "api_platform.jsonld.normalizer.item": {
            "class": "ApiPlatform\\JsonLd\\Serializer\\ItemNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Converts between objects and array including JSON-LD and Hydra metadata.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.name_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.metadata_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.symfony.iri_converter"
                },
                {
                    "type": "service",
                    "id": "api_platform.resource_class_resolver"
                },
                {
                    "type": "service",
                    "id": "api_platform.jsonld.context_builder"
                },
                {
                    "type": "service",
                    "id": "property_accessor"
                },
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                },
                {
                    "type": "service",
                    "id": "api_platform.serializer.mapping.class_metadata_factory"
                },
                "%api_platform.serializer.default_context%",
                {
                    "type": "service",
                    "id": "api_platform.security.resource_access_checker"
                },
                null
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "priority": -890
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -890
                    }
                }
            ],
            "usages": [
                ".49_TraceableNormalizer~4VeSJ51",
                "api_platform.jsonld.normalizer.error",
                ".debug.serializer.normalizer.api_platform.jsonld.normalizer.item"
            ]
        },
        "api_platform.jsonld.normalizer.object": {
            "class": "ApiPlatform\\JsonLd\\Serializer\\ObjectNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Decorates the output with JSON-LD metadata when appropriate, but otherwise just passes through to the decorated normalizer.",
            "arguments": [
                {
                    "type": "service",
                    "id": "serializer.normalizer.object"
                },
                {
                    "type": "service",
                    "id": "api_platform.symfony.iri_converter"
                },
                {
                    "type": "service",
                    "id": "api_platform.jsonld.context_builder"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "priority": -995
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -995
                    }
                }
            ],
            "usages": [
                ".63_TraceableNormalizer~4VeSJ51",
                ".debug.serializer.normalizer.api_platform.jsonld.normalizer.object"
            ]
        },
        "api_platform.jsonld.normalizer.validation_exception": {
            "class": "ApiPlatform\\Symfony\\Validator\\Serializer\\ValidationExceptionNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.jsonld.normalizer.error"
                },
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "priority": -800
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -800
                    }
                }
            ],
            "usages": [
                ".42_TraceableNormalizer~4VeSJ51",
                ".debug.serializer.normalizer.api_platform.jsonld.normalizer.validation_exception"
            ]
        },
        "api_platform.jsonopenapi.encoder": {
            "class": "ApiPlatform\\Serializer\\JsonEncoder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A JSON encoder with appropriate default options to embed the generated document into HTML.",
            "arguments": [
                "jsonopenapi",
                null
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.encoder",
                    "parameters": []
                },
                {
                    "name": "serializer.encoder.default",
                    "parameters": []
                }
            ],
            "usages": [
                ".69_TraceableEncoder~4VeSJ51",
                ".debug.serializer.encoder.api_platform.jsonopenapi.encoder"
            ]
        },
        "api_platform.listener.exception": {
            "class": "ApiPlatform\\Symfony\\EventListener\\ExceptionListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Handles requests errors.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.error_listener"
                },
                false
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "request"
                    }
                },
                {
                    "name": "kernel.event_listener",
                    "parameters": {
                        "event": "kernel.exception",
                        "method": "onKernelException",
                        "priority": -96
                    }
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "api_platform.maker.command.state_processor": {
            "class": "ApiPlatform\\Symfony\\Maker\\MakeStateProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.name_collection_factory.cached"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_state_processor"
            ]
        },
        "api_platform.maker.command.state_provider": {
            "class": "ApiPlatform\\Symfony\\Maker\\MakeStateProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.name_collection_factory.cached"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_state_provider"
            ]
        },
        "api_platform.metadata.inflector": {
            "class": "ApiPlatform\\Metadata\\Util\\Inflector",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.inflector",
                "api_platform.metadata.path_segment_name_generator.underscore",
                "api_platform.metadata.path_segment_name_generator.dash"
            ]
        },
        "api_platform.metadata.operation.metadata_factory": {
            "class": "ApiPlatform\\Metadata\\Operation\\Factory\\OperationMetadataFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.name_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "ApiPlatform\\Metadata\\Operation\\Factory\\OperationMetadataFactoryInterface",
                "api_platform.symfony.iri_converter",
                "api_platform.hydra.processor.link.inner"
            ]
        },
        "api_platform.metadata.path_segment_name_generator.dash": {
            "class": "ApiPlatform\\Metadata\\Operation\\DashPathSegmentNameGenerator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Generate a path name with a dash separator according to a string and whether it's a collection or not.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.inflector"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "api_platform.metadata.path_segment_name_generator.underscore": {
            "class": "ApiPlatform\\Metadata\\Operation\\UnderscorePathSegmentNameGenerator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Generate a path name with an underscore separator according to a string and whether it's a collection or not.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.inflector"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.path_segment_name_generator",
                "api_platform.metadata.resource.metadata_collection_factory.uri_template"
            ]
        },
        "api_platform.metadata.property.metadata_factory.attribute": {
            "class": "ApiPlatform\\Metadata\\Property\\Factory\\AttributePropertyMetadataFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Creates a property metadata from {@see ApiProperty} attribute.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.metadata_factory.identifier"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.property.metadata_factory.yaml.inner",
                "api_platform.metadata.property.metadata_factory.yaml"
            ]
        },
        "api_platform.metadata.property.metadata_factory.cached": {
            "class": "ApiPlatform\\Metadata\\Property\\Factory\\CachedPropertyMetadataFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Caches property metadata.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.cache.metadata.property"
                },
                {
                    "type": "service",
                    "id": "api_platform.json_schema.metadata.property.metadata_factory.schema"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.property.metadata_factory",
                "ApiPlatform\\Metadata\\Property\\Factory\\PropertyMetadataFactoryInterface",
                "api_platform.serializer.normalizer.item",
                "api_platform.api.identifiers_extractor",
                "api_platform.uri_variables.converter",
                "api_platform.metadata.resource.metadata_collection_factory.parameter",
                "api_platform.openapi.factory",
                "api_platform.jsonld.context_builder",
                "api_platform.jsonld.normalizer.item",
                "api_platform.hydra.normalizer.documentation",
                "api_platform.doctrine.orm.query_extension.eager_loading",
                "api_platform.doctrine.orm.metadata.resource.link_factory.inner",
                "api_platform.hydra.json_schema.schema_factory.inner"
            ]
        },
        "api_platform.metadata.property.metadata_factory.default_property": {
            "class": "ApiPlatform\\Metadata\\Property\\Factory\\DefaultPropertyMetadataFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Populates defaults values of the resource properties using the default PHP values of properties.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.metadata_factory.serializer"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.property.metadata_factory.identifier.inner",
                "api_platform.metadata.property.metadata_factory.identifier"
            ]
        },
        "api_platform.metadata.property.metadata_factory.identifier": {
            "class": "ApiPlatform\\Metadata\\Property\\Factory\\IdentifierPropertyMetadataFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.resource_class_resolver"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.metadata_factory.default_property"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.property.metadata_factory.attribute.inner",
                "api_platform.metadata.property.metadata_factory.attribute"
            ]
        },
        "api_platform.metadata.property.metadata_factory.property_info": {
            "class": "ApiPlatform\\Metadata\\Property\\Factory\\PropertyInfoPropertyMetadataFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "PropertyInfo metadata loader decorator.",
            "arguments": [
                {
                    "type": "service",
                    "id": "property_info"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.metadata_factory.xml"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.doctrine.orm.metadata.property.metadata_factory.inner",
                "api_platform.doctrine.orm.metadata.property.metadata_factory"
            ]
        },
        "api_platform.metadata.property.metadata_factory.serializer": {
            "class": "ApiPlatform\\Metadata\\Property\\Factory\\SerializerPropertyMetadataFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Populates read\/write and link status using serialization groups.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.serializer.mapping.class_metadata_factory"
                },
                {
                    "type": "service",
                    "id": "api_platform.doctrine.orm.metadata.property.metadata_factory"
                },
                {
                    "type": "service",
                    "id": "api_platform.resource_class_resolver"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.property.metadata_factory.default_property.inner",
                "api_platform.metadata.property.metadata_factory.default_property"
            ]
        },
        "api_platform.metadata.property.metadata_factory.validator": {
            "class": "ApiPlatform\\Symfony\\Validator\\Metadata\\Property\\ValidatorPropertyMetadataFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Decorates a metadata loader using the validator.",
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.validator"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.metadata_factory.yaml"
                },
                []
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.json_schema.metadata.property.metadata_factory.schema.inner",
                "api_platform.json_schema.metadata.property.metadata_factory.schema"
            ]
        },
        "api_platform.metadata.property.metadata_factory.xml": {
            "class": "ApiPlatform\\Metadata\\Property\\Factory\\ExtractorPropertyMetadataFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Creates properties's metadata using an extractor.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.property_extractor.xml"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.property.metadata_factory.property_info.inner",
                "api_platform.metadata.property.metadata_factory.property_info"
            ]
        },
        "api_platform.metadata.property.metadata_factory.yaml": {
            "class": "ApiPlatform\\Metadata\\Property\\Factory\\ExtractorPropertyMetadataFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Creates properties's metadata using an extractor.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.property_extractor.yaml"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.metadata_factory.attribute"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.property.metadata_factory.validator.inner",
                "api_platform.metadata.property.metadata_factory.validator"
            ]
        },
        "api_platform.metadata.property.name_collection_factory.cached": {
            "class": "ApiPlatform\\Metadata\\Property\\Factory\\CachedPropertyNameCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Caches property name collection.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.cache.metadata.property"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.name_collection_factory.yaml"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.property.name_collection_factory",
                "ApiPlatform\\Metadata\\Property\\Factory\\PropertyNameCollectionFactoryInterface",
                ".9_PropertyMetadataLoader~4VeSJ51",
                "api_platform.serializer.normalizer.item",
                "api_platform.api.identifiers_extractor",
                "api_platform.serializer.property_metadata_loader",
                "api_platform.metadata.resource.metadata_collection_factory.parameter",
                "api_platform.openapi.factory",
                "api_platform.jsonld.context_builder",
                "api_platform.jsonld.normalizer.item",
                "api_platform.hydra.normalizer.documentation",
                "api_platform.doctrine.orm.query_extension.eager_loading",
                "api_platform.doctrine.orm.metadata.resource.link_factory",
                "api_platform.doctrine.orm.metadata.resource.link_factory.inner",
                "api_platform.hydra.json_schema.schema_factory.inner"
            ]
        },
        "api_platform.metadata.property.name_collection_factory.concerns": {
            "class": "ApiPlatform\\Metadata\\Property\\Factory\\ConcernsPropertyNameCollectionMetadataFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Handles property defined with the {@see IsApiResource} concern.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.name_collection_factory.xml"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.property.name_collection_factory.yaml.inner",
                "api_platform.metadata.property.name_collection_factory.yaml"
            ]
        },
        "api_platform.metadata.property.name_collection_factory.property_info": {
            "class": "ApiPlatform\\Metadata\\Property\\Factory\\PropertyInfoPropertyNameCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "PropertyInfo collection loader.",
            "arguments": [
                {
                    "type": "service",
                    "id": "property_info"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.property.name_collection_factory.xml.inner",
                "api_platform.metadata.property.name_collection_factory.xml"
            ]
        },
        "api_platform.metadata.property.name_collection_factory.xml": {
            "class": "ApiPlatform\\Metadata\\Property\\Factory\\ExtractorPropertyNameCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Creates a property name collection using an extractor.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.property_extractor.xml"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.name_collection_factory.property_info"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.property.name_collection_factory.concerns.inner",
                "api_platform.metadata.property.name_collection_factory.concerns"
            ]
        },
        "api_platform.metadata.property.name_collection_factory.yaml": {
            "class": "ApiPlatform\\Metadata\\Property\\Factory\\ExtractorPropertyNameCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Creates a property name collection using an extractor.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.property_extractor.yaml"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.name_collection_factory.concerns"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.property.name_collection_factory.cached.inner",
                "api_platform.metadata.property.name_collection_factory.cached"
            ]
        },
        "api_platform.metadata.property_extractor.xml": {
            "class": "ApiPlatform\\Metadata\\Extractor\\XmlPropertyExtractor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Extracts an array of metadata from a list of XML files.",
            "arguments": [
                [],
                {
                    "type": "service",
                    "id": "service_container"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.property.name_collection_factory.xml",
                "api_platform.metadata.property.metadata_factory.xml"
            ]
        },
        "api_platform.metadata.property_extractor.yaml": {
            "class": "ApiPlatform\\Metadata\\Extractor\\YamlPropertyExtractor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Extracts an array of metadata from a list of YAML files.",
            "arguments": [
                [],
                {
                    "type": "service",
                    "id": "service_container"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.property.metadata_factory.yaml",
                "api_platform.metadata.property.name_collection_factory.yaml"
            ]
        },
        "api_platform.metadata.property_schema.choice_restriction": {
            "class": "ApiPlatform\\Symfony\\Validator\\Metadata\\Property\\Restriction\\PropertySchemaChoiceRestriction",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.metadata.property_schema_restriction",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "api_platform.metadata.property_schema.collection_restriction": {
            "class": "ApiPlatform\\Symfony\\Validator\\Metadata\\Property\\Restriction\\PropertySchemaCollectionRestriction",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                []
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.metadata.property_schema_restriction",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "api_platform.metadata.property_schema.count_restriction": {
            "class": "ApiPlatform\\Symfony\\Validator\\Metadata\\Property\\Restriction\\PropertySchemaCountRestriction",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.metadata.property_schema_restriction",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "api_platform.metadata.property_schema.format_restriction": {
            "class": "ApiPlatform\\Symfony\\Validator\\Metadata\\Property\\Restriction\\PropertySchemaFormat",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Class PropertySchemaFormat.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.metadata.property_schema_restriction",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "api_platform.metadata.property_schema.greater_than_or_equal_restriction": {
            "class": "ApiPlatform\\Symfony\\Validator\\Metadata\\Property\\Restriction\\PropertySchemaGreaterThanOrEqualRestriction",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.metadata.property_schema_restriction",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "api_platform.metadata.property_schema.greater_than_restriction": {
            "class": "ApiPlatform\\Symfony\\Validator\\Metadata\\Property\\Restriction\\PropertySchemaGreaterThanRestriction",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.metadata.property_schema_restriction",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "api_platform.metadata.property_schema.length_restriction": {
            "class": "ApiPlatform\\Symfony\\Validator\\Metadata\\Property\\Restriction\\PropertySchemaLengthRestriction",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Class PropertySchemaLengthRestrictions.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.metadata.property_schema_restriction",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "api_platform.metadata.property_schema.less_than_or_equal_restriction": {
            "class": "ApiPlatform\\Symfony\\Validator\\Metadata\\Property\\Restriction\\PropertySchemaLessThanOrEqualRestriction",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.metadata.property_schema_restriction",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "api_platform.metadata.property_schema.less_than_restriction": {
            "class": "ApiPlatform\\Symfony\\Validator\\Metadata\\Property\\Restriction\\PropertySchemaLessThanRestriction",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.metadata.property_schema_restriction",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "api_platform.metadata.property_schema.one_of_restriction": {
            "class": "ApiPlatform\\Symfony\\Validator\\Metadata\\Property\\Restriction\\PropertySchemaOneOfRestriction",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                []
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.metadata.property_schema_restriction",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "api_platform.metadata.property_schema.range_restriction": {
            "class": "ApiPlatform\\Symfony\\Validator\\Metadata\\Property\\Restriction\\PropertySchemaRangeRestriction",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.metadata.property_schema_restriction",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "api_platform.metadata.property_schema.regex_restriction": {
            "class": "ApiPlatform\\Symfony\\Validator\\Metadata\\Property\\Restriction\\PropertySchemaRegexRestriction",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Class PropertySchemaRegexRestriction.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.metadata.property_schema_restriction",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "api_platform.metadata.property_schema.unique_restriction": {
            "class": "ApiPlatform\\Symfony\\Validator\\Metadata\\Property\\Restriction\\PropertySchemaUniqueRestriction",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.metadata.property_schema_restriction",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "api_platform.metadata.resource.metadata_collection_factory.alternate_uri": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\AlternateUriResourceMetadataCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.filters"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.metadata_collection_factory.php_doc.inner",
                "api_platform.metadata.resource.metadata_collection_factory.php_doc"
            ]
        },
        "api_platform.metadata.resource.metadata_collection_factory.attributes": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\AttributesResourceMetadataCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Creates a resource metadata from {@see ApiResource} annotations.",
            "arguments": [
                null,
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                "%api_platform.defaults%",
                false
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.metadata_collection_factory.parameter.inner",
                "api_platform.metadata.resource.metadata_collection_factory.parameter"
            ]
        },
        "api_platform.metadata.resource.metadata_collection_factory.backed_enum": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\BackedEnumResourceMetadataCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Triggers resource deprecations.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.not_exposed_operation"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.metadata_collection_factory.uri_template.inner",
                "api_platform.metadata.resource.metadata_collection_factory.uri_template"
            ]
        },
        "api_platform.metadata.resource.metadata_collection_factory.cached": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\CachedResourceMetadataCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Caches resource metadata.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.cache.metadata.resource_collection"
                },
                {
                    "type": "service",
                    "id": "api_platform.doctrine.orm.metadata.resource.metadata_collection_factory"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.metadata_collection_factory",
                "ApiPlatform\\Metadata\\Resource\\Factory\\ResourceMetadataCollectionFactoryInterface",
                "api_platform.state_provider.create",
                "api_platform.serializer.context_builder.filter",
                "api_platform.serializer.normalizer.item",
                "api_platform.route_loader",
                "api_platform.api.identifiers_extractor",
                "api_platform.uri_variables.converter",
                "api_platform.symfony.iri_converter",
                "api_platform.state.error_provider",
                "api_platform.symfony.main_controller",
                "api_platform.error_listener",
                "api_platform.metadata.operation.metadata_factory",
                "api_platform.openapi.factory",
                "api_platform.jsonld.action.context",
                "api_platform.jsonld.context_builder",
                "api_platform.jsonld.normalizer.item",
                "api_platform.hydra.normalizer.documentation",
                "api_platform.hydra.normalizer.entrypoint",
                "api_platform.hydra.normalizer.partial_collection_view",
                "api_platform.hydra.normalizer.collection_filters",
                "api_platform.doctrine.orm.state.collection_provider",
                "api_platform.doctrine.orm.state.item_provider",
                "api_platform.doctrine.orm.links_handler",
                "api_platform.data_collector.request",
                "debug.api_platform.debug_resource.command",
                "api_platform.argument_resolver.payload",
                "api_platform.serializer.context_builder.filter.inner",
                "api_platform.hydra.json_schema.schema_factory.inner"
            ]
        },
        "api_platform.metadata.resource.metadata_collection_factory.concerns": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\ConcernsResourceMetadataCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Creates a resource metadata from {@see IsApiResource} concerns.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.xml"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.metadata_collection_factory.yaml.inner",
                "api_platform.metadata.resource.metadata_collection_factory.yaml"
            ]
        },
        "api_platform.metadata.resource.metadata_collection_factory.filters": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\FiltersResourceMetadataCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Creates a resource metadata from {@see Resource} annotations.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.formats"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.metadata_collection_factory.alternate_uri.inner",
                "api_platform.metadata.resource.metadata_collection_factory.alternate_uri"
            ]
        },
        "api_platform.metadata.resource.metadata_collection_factory.formats": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\FormatsResourceMetadataCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Normalizes enabled formats.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.input_output"
                },
                "%api_platform.formats%",
                "%api_platform.patch_formats%",
                "%api_platform.error_formats%"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.metadata_collection_factory.filters.inner",
                "api_platform.metadata.resource.metadata_collection_factory.filters"
            ]
        },
        "api_platform.metadata.resource.metadata_collection_factory.input_output": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\InputOutputResourceMetadataCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Transforms the given input\/output metadata to a normalized one.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.operation_name"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.metadata_collection_factory.formats.inner",
                "api_platform.metadata.resource.metadata_collection_factory.formats"
            ]
        },
        "api_platform.metadata.resource.metadata_collection_factory.link": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\LinkResourceMetadataCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Prepares graphql links.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.doctrine.orm.metadata.resource.link_factory"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.main_controller"
                },
                false
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.metadata_collection_factory.operation_name.inner",
                "api_platform.metadata.resource.metadata_collection_factory.operation_name"
            ]
        },
        "api_platform.metadata.resource.metadata_collection_factory.main_controller": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\MainControllerResourceMetadataCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.uri_template"
                },
                false
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.metadata_collection_factory.link.inner",
                "api_platform.metadata.resource.metadata_collection_factory.link"
            ]
        },
        "api_platform.metadata.resource.metadata_collection_factory.not_exposed_operation": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\NotExposedOperationResourceMetadataCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Adds a {@see ApiPlatform\\Metadata\\NotExposed} operation with {@see ApiPlatform\\Symfony\\Action\\NotFoundAction} on a resource which only has a GetCollection. This operation helps to generate resource IRI for items.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.doctrine.orm.metadata.resource.link_factory"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.yaml"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.metadata_collection_factory.backed_enum.inner",
                "api_platform.metadata.resource.metadata_collection_factory.backed_enum"
            ]
        },
        "api_platform.metadata.resource.metadata_collection_factory.operation_name": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\OperationNameResourceMetadataCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Creates a resource metadata from {@see Resource} annotations.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.link"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.metadata_collection_factory.input_output.inner",
                "api_platform.metadata.resource.metadata_collection_factory.input_output"
            ]
        },
        "api_platform.metadata.resource.metadata_collection_factory.parameter": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\ParameterResourceMetadataCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Prepares Parameters documentation by reading its filter details and declaring an OpenApi parameter.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.name_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.metadata_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.attributes"
                },
                {
                    "type": "service",
                    "id": "api_platform.filter_locator"
                },
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.validator.metadata.resource.metadata_collection_factory.parameter.inner",
                "api_platform.validator.metadata.resource.metadata_collection_factory.parameter"
            ]
        },
        "api_platform.metadata.resource.metadata_collection_factory.php_doc": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\PhpDocResourceMetadataCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Extracts descriptions from PHPDoc.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.alternate_uri"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.doctrine.orm.metadata.resource.metadata_collection_factory.inner",
                "api_platform.doctrine.orm.metadata.resource.metadata_collection_factory"
            ]
        },
        "api_platform.metadata.resource.metadata_collection_factory.uri_template": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\UriTemplateResourceMetadataCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.doctrine.orm.metadata.resource.link_factory"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.path_segment_name_generator.underscore"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.backed_enum"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.metadata_collection_factory.main_controller.inner",
                "api_platform.metadata.resource.metadata_collection_factory.main_controller"
            ]
        },
        "api_platform.metadata.resource.metadata_collection_factory.xml": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\ExtractorResourceMetadataCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Creates a resource metadata from {@see Resource} extractors (XML, YAML).",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource_extractor.xml"
                },
                {
                    "type": "service",
                    "id": "api_platform.validator.metadata.resource.metadata_collection_factory.parameter"
                },
                "%api_platform.defaults%",
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                false
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.metadata_collection_factory.concerns.inner",
                "api_platform.metadata.resource.metadata_collection_factory.concerns"
            ]
        },
        "api_platform.metadata.resource.metadata_collection_factory.yaml": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\ExtractorResourceMetadataCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Creates a resource metadata from {@see Resource} extractors (XML, YAML).",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource_extractor.yaml"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.concerns"
                },
                "%api_platform.defaults%",
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                false
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.metadata_collection_factory.not_exposed_operation.inner",
                "api_platform.metadata.resource.metadata_collection_factory.not_exposed_operation"
            ]
        },
        "api_platform.metadata.resource.name_collection_factory.attributes": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\AttributesResourceNameCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Creates a resource name collection from {@see ApiResource} annotations.",
            "arguments": [
                "%api_platform.resource_class_directories%",
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.name_collection_factory.concerns"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.name_collection_factory.class_name.inner",
                "api_platform.metadata.resource.name_collection_factory.class_name"
            ]
        },
        "api_platform.metadata.resource.name_collection_factory.cached": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\CachedResourceNameCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Caches resource name collection.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.cache.metadata.resource"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.name_collection_factory.yaml"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.name_collection_factory",
                "ApiPlatform\\Metadata\\Resource\\Factory\\ResourceNameCollectionFactoryInterface",
                "api_platform.resource_class_resolver",
                "api_platform.route_loader",
                "api_platform.action.entrypoint",
                "api_platform.action.documentation",
                "api_platform.metadata.operation.metadata_factory",
                "api_platform.openapi.factory",
                "api_platform.jsonld.action.context",
                "api_platform.jsonld.context_builder",
                "api_platform.maker.command.state_processor",
                "api_platform.maker.command.state_provider"
            ]
        },
        "api_platform.metadata.resource.name_collection_factory.class_name": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\ClassNameResourceNameCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "%api_platform.class_name_resources%",
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.name_collection_factory.attributes"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.name_collection_factory.yaml.inner",
                "api_platform.metadata.resource.name_collection_factory.yaml"
            ]
        },
        "api_platform.metadata.resource.name_collection_factory.concerns": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\ConcernsResourceNameCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Creates a resource name collection from {@see IsApiResource} concerns.",
            "arguments": [
                "%api_platform.resource_class_directories%",
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.name_collection_factory.xml"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.name_collection_factory.attributes.inner",
                "api_platform.metadata.resource.name_collection_factory.attributes"
            ]
        },
        "api_platform.metadata.resource.name_collection_factory.xml": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\ExtractorResourceNameCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Creates a resource name collection from {@see ApiResource} configuration files.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource_extractor.xml"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.name_collection_factory.concerns.inner",
                "api_platform.metadata.resource.name_collection_factory.concerns"
            ]
        },
        "api_platform.metadata.resource.name_collection_factory.yaml": {
            "class": "ApiPlatform\\Metadata\\Resource\\Factory\\ExtractorResourceNameCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Creates a resource name collection from {@see ApiResource} configuration files.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource_extractor.yaml"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.name_collection_factory.class_name"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.name_collection_factory.cached.inner",
                "api_platform.metadata.resource.name_collection_factory.cached"
            ]
        },
        "api_platform.metadata.resource_extractor.xml": {
            "class": "ApiPlatform\\Metadata\\Extractor\\XmlResourceExtractor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Extracts an array of metadata from a list of XML files.",
            "arguments": [
                [],
                {
                    "type": "service",
                    "id": "service_container"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.name_collection_factory.xml",
                "api_platform.metadata.resource.metadata_collection_factory.xml"
            ]
        },
        "api_platform.metadata.resource_extractor.yaml": {
            "class": "ApiPlatform\\Metadata\\Extractor\\YamlResourceExtractor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Extracts an array of metadata from a list of YAML files.",
            "arguments": [
                [],
                {
                    "type": "service",
                    "id": "service_container"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.name_collection_factory.yaml",
                "api_platform.metadata.resource.metadata_collection_factory.yaml"
            ]
        },
        "api_platform.negotiator": {
            "class": "Negotiation\\Negotiator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.action.documentation",
                "api_platform.state_provider.content_negotiation",
                "api_platform.error_listener"
            ]
        },
        "api_platform.normalizer.constraint_violation_list": {
            "class": "ApiPlatform\\Serializer\\ConstraintViolationListNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Converts {@see \\Symfony\\Component\\Validator\\ConstraintViolationListInterface} the API Problem spec (RFC 7807).",
            "arguments": [
                [],
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "priority": -780
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -780
                    }
                }
            ],
            "usages": [
                ".39_TraceableNormalizer~4VeSJ51",
                ".debug.serializer.normalizer.api_platform.normalizer.constraint_violation_list"
            ]
        },
        "api_platform.openapi.command": {
            "class": "ApiPlatform\\OpenApi\\Command\\OpenApiCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Dumps Open API documentation.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.openapi.factory"
                },
                {
                    "type": "service",
                    "id": "debug.serializer"
                }
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "api_platform.openapi.factory": {
            "class": "ApiPlatform\\OpenApi\\Factory\\OpenApiFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Generates an Open API v3 specification.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.name_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.name_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.metadata_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.json_schema.backward_compatible_schema_factory"
                },
                {
                    "type": "service",
                    "id": "api_platform.filter_locator"
                },
                "%api_platform.formats%",
                {
                    "type": "service",
                    "id": "api_platform.openapi.options"
                },
                {
                    "type": "service",
                    "id": "api_platform.pagination_options"
                },
                {
                    "type": "service",
                    "id": "api_platform.router"
                },
                "%api_platform.error_formats%"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "ApiPlatform\\OpenApi\\Factory\\OpenApiFactoryInterface",
                "api_platform.action.documentation",
                "api_platform.openapi.provider",
                "api_platform.openapi.command",
                "api_platform.swagger_ui.provider"
            ]
        },
        "api_platform.openapi.normalizer.api_gateway.inner": {
            "class": "ApiPlatform\\OpenApi\\Serializer\\OpenApiNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Generates an OpenAPI v3 specification.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".1_Serializer~1OK917Z"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.openapi.normalizer.legacy.inner"
            ]
        },
        "api_platform.openapi.normalizer.legacy": {
            "class": "ApiPlatform\\OpenApi\\Serializer\\LegacyOpenApiNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.openapi.normalizer.legacy.inner"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": []
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": []
                },
                {
                    "name": "container.decorator",
                    "parameters": {
                        "id": "api_platform.openapi.normalizer.api_gateway",
                        "inner": "api_platform.openapi.normalizer.legacy.inner"
                    }
                }
            ],
            "usages": [
                "ApiPlatform\\OpenApi\\Serializer\\OpenApiNormalizer",
                "api_platform.openapi.normalizer",
                "api_platform.openapi.normalizer.api_gateway",
                ".41_TraceableNormalizer~4VeSJ51",
                ".38_TraceableNormalizer~4VeSJ51",
                ".37_TraceableNormalizer~4VeSJ51",
                ".debug.serializer.normalizer.api_platform.openapi.normalizer.api_gateway",
                ".debug.serializer.normalizer.api_platform.openapi.normalizer.legacy",
                ".debug.serializer.normalizer.api_platform.openapi.normalizer"
            ]
        },
        "api_platform.openapi.normalizer.legacy.inner": {
            "class": "ApiPlatform\\OpenApi\\Serializer\\ApiGatewayNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Removes features unsupported by Amazon API Gateway.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.openapi.normalizer.api_gateway.inner"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.decorator",
                    "parameters": {
                        "id": "api_platform.openapi.normalizer",
                        "inner": "api_platform.openapi.normalizer.api_gateway.inner"
                    }
                }
            ],
            "usages": [
                "api_platform.openapi.normalizer.legacy"
            ]
        },
        "api_platform.openapi.options": {
            "class": "ApiPlatform\\OpenApi\\Options",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "Hello API Platform",
                "",
                "1.0.0",
                false,
                "oauth2",
                "application",
                "",
                "",
                "",
                [],
                [],
                null,
                null,
                null,
                null,
                null,
                null,
                true,
                false,
                [],
                []
            ],
            "file": null,
            "tags": [],
            "usages": [
                "ApiPlatform\\OpenApi\\Options",
                "api_platform.openapi.factory",
                "api_platform.swagger_ui.processor"
            ]
        },
        "api_platform.openapi.provider": {
            "class": "ApiPlatform\\OpenApi\\State\\OpenApiProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.openapi.factory"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.state_provider",
                    "parameters": {
                        "priority": -100,
                        "key": "ApiPlatform\\OpenApi\\State\\OpenApiProvider"
                    }
                },
                {
                    "name": "api_platform.state_provider",
                    "parameters": {
                        "priority": -100,
                        "key": "api_platform.openapi.provider"
                    }
                }
            ],
            "usages": [
                ".service_locator.FwcobOi"
            ]
        },
        "api_platform.openapi.serializer_context_builder": {
            "class": "ApiPlatform\\OpenApi\\Serializer\\SerializerContextBuilder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.serializer.context_builder.filter"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.decorator",
                    "parameters": {
                        "id": "api_platform.serializer.context_builder",
                        "inner": "api_platform.serializer.context_builder.filter.inner"
                    }
                }
            ],
            "usages": [
                "ApiPlatform\\State\\SerializerContextBuilderInterface",
                "api_platform.serializer.context_builder",
                "api_platform.state_processor.serialize",
                "api_platform.argument_resolver.payload",
                "api_platform.swagger_ui.provider.inner",
                "api_platform.state_provider.access_checker.post_deserialize.inner"
            ]
        },
        "api_platform.pagination": {
            "class": "ApiPlatform\\State\\Pagination\\Pagination",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Pagination configuration.",
            "arguments": [
                "%api_platform.collection.pagination%",
                "%api_platform.graphql.collection.pagination%"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "ApiPlatform\\State\\Pagination\\Pagination",
                "api_platform.doctrine.orm.query_extension.pagination"
            ]
        },
        "api_platform.pagination_options": {
            "class": "ApiPlatform\\State\\Pagination\\PaginationOptions",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                true,
                "page",
                true,
                "itemsPerPage",
                false,
                "pagination",
                5,
                100,
                false,
                false,
                "partial"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "ApiPlatform\\State\\Pagination\\PaginationOptions",
                "api_platform.openapi.factory"
            ]
        },
        "api_platform.path_segment_name_generator.dash": {
            "class": "ApiPlatform\\Metadata\\Operation\\DashPathSegmentNameGenerator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Generate a path name with a dash separator according to a string and whether it's a collection or not.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "api_platform.path_segment_name_generator.underscore": {
            "class": "ApiPlatform\\Metadata\\Operation\\UnderscorePathSegmentNameGenerator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Generate a path name with an underscore separator according to a string and whether it's a collection or not.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "api_platform.problem.encoder": {
            "class": "ApiPlatform\\Serializer\\JsonEncoder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A JSON encoder with appropriate default options to embed the generated document into HTML.",
            "arguments": [
                "jsonproblem"
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.encoder",
                    "parameters": []
                },
                {
                    "name": "serializer.encoder.default",
                    "parameters": []
                }
            ],
            "usages": [
                ".72_TraceableEncoder~4VeSJ51",
                ".debug.serializer.encoder.api_platform.problem.encoder"
            ]
        },
        "api_platform.problem.normalizer.validation_exception": {
            "class": "ApiPlatform\\Symfony\\Validator\\Serializer\\ValidationExceptionNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.serializer.normalizer.item"
                },
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "priority": -800
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -800
                    }
                }
            ],
            "usages": [
                ".45_TraceableNormalizer~4VeSJ51",
                ".debug.serializer.normalizer.api_platform.problem.normalizer.validation_exception"
            ]
        },
        "api_platform.resource_class_resolver": {
            "class": "ApiPlatform\\Metadata\\ResourceClassResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "{@inheritdoc}",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.name_collection_factory.cached"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "ApiPlatform\\Metadata\\ResourceClassResolverInterface",
                "api_platform.serializer.normalizer.item",
                "api_platform.api.identifiers_extractor",
                "api_platform.symfony.iri_converter",
                "api_platform.state.error_provider",
                "api_platform.error_listener",
                "api_platform.metadata.property.metadata_factory.serializer",
                "api_platform.metadata.property.metadata_factory.identifier",
                "api_platform.json_schema.metadata.property.metadata_factory.schema",
                "api_platform.jsonld.normalizer.item",
                "api_platform.hydra.normalizer.documentation",
                "api_platform.hydra.normalizer.collection_filters",
                "api_platform.doctrine.orm.query_extension.filter_eager_loading",
                "api_platform.doctrine.orm.metadata.resource.link_factory",
                "api_platform.hydra.processor.link.inner",
                "api_platform.doctrine.orm.metadata.resource.link_factory.inner",
                "api_platform.hydra.json_schema.schema_factory.inner",
                "api_platform.hydra.normalizer.partial_collection_view.inner"
            ]
        },
        "api_platform.route_loader": {
            "class": "ApiPlatform\\Symfony\\Routing\\ApiLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Loads Resources.",
            "arguments": [
                {
                    "type": "service",
                    "id": "kernel"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.name_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "service_container"
                },
                "%api_platform.formats%",
                "%api_platform.resource_class_directories%",
                false,
                true,
                true,
                false
            ],
            "file": null,
            "tags": [
                {
                    "name": "routing.loader",
                    "parameters": []
                }
            ],
            "usages": [
                "routing.resolver"
            ]
        },
        "api_platform.router": {
            "class": "ApiPlatform\\Symfony\\Routing\\Router",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Symfony router decorator.",
            "arguments": [
                {
                    "type": "service",
                    "id": "router.default"
                },
                1
            ],
            "file": null,
            "tags": [],
            "usages": [
                "ApiPlatform\\Metadata\\UrlGeneratorInterface",
                "api_platform.symfony.iri_converter.skolem",
                "api_platform.symfony.iri_converter",
                "api_platform.openapi.factory",
                "api_platform.hydra.processor.link",
                "api_platform.jsonld.context_builder",
                "api_platform.hydra.normalizer.documentation",
                "api_platform.hydra.normalizer.entrypoint"
            ]
        },
        "api_platform.security.expression_language_provider": {
            "class": "ApiPlatform\\Symfony\\Security\\Core\\Authorization\\ExpressionLanguageProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Registers API Platform's Expression Language functions.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "security.expression_language_provider",
                    "parameters": []
                }
            ],
            "usages": [
                "security.expression_language"
            ]
        },
        "api_platform.security.resource_access_checker": {
            "class": "ApiPlatform\\Symfony\\Security\\ResourceAccessChecker",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Checks if the logged user has sufficient permissions to access the given resource.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.expression_language"
                },
                {
                    "type": "service",
                    "id": "security.authentication.trust_resolver"
                },
                {
                    "type": "service",
                    "id": "security.role_hierarchy"
                },
                {
                    "type": "service",
                    "id": "security.token_storage"
                },
                {
                    "type": "service",
                    "id": "security.authorization_checker"
                },
                false
            ],
            "file": null,
            "tags": [],
            "usages": [
                "ApiPlatform\\Metadata\\ResourceAccessCheckerInterface",
                "api_platform.serializer.normalizer.item",
                "api_platform.jsonld.normalizer.item",
                "api_platform.state_provider.access_checker.post_deserialize",
                "api_platform.state_provider.security_parameter",
                "api_platform.state_provider.access_checker.post_validate",
                "api_platform.state_provider.security_parameter.inner"
            ]
        },
        "api_platform.serializer.context_builder.filter": {
            "class": "ApiPlatform\\Serializer\\SerializerFilterContextBuilder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "{@inheritdoc}",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.filter_locator"
                },
                {
                    "type": "service",
                    "id": "api_platform.serializer.context_builder.filter.inner"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.openapi.serializer_context_builder.inner",
                "api_platform.openapi.serializer_context_builder"
            ]
        },
        "api_platform.serializer.context_builder.filter.inner": {
            "class": "ApiPlatform\\Serializer\\SerializerContextBuilder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "{@inheritdoc}",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                true
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.serializer.context_builder.filter"
            ]
        },
        "api_platform.serializer.filter_parameter_provider": {
            "class": "ApiPlatform\\Serializer\\Parameter\\SerializerFilterParameterProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.filter_locator"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.parameter_provider",
                    "parameters": {
                        "key": "api_platform.serializer.filter_parameter_provider",
                        "priority": -895
                    }
                }
            ],
            "usages": [
                ".service_locator.WQt9XZi"
            ]
        },
        "api_platform.serializer.group_filter": {
            "class": "ApiPlatform\\Serializer\\Filter\\GroupFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The group filter allows you to filter by serialization groups.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "ApiPlatform\\Serializer\\Filter\\GroupFilter"
            ]
        },
        "api_platform.serializer.mapping.class_metadata_factory": {
            "class": "ApiPlatform\\Serializer\\Mapping\\Factory\\ClassMetadataFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.serializer.mapping.class_metadata_factory.inner"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.decorator",
                    "parameters": {
                        "id": "serializer.mapping.class_metadata_factory",
                        "inner": "api_platform.serializer.mapping.class_metadata_factory.inner"
                    }
                }
            ],
            "usages": [
                "Symfony\\Component\\Serializer\\Mapping\\Factory\\ClassMetadataFactoryInterface",
                "serializer.mapping.class_metadata_factory",
                "console.command.serializer_debug",
                "serializer.mapping.class_discriminator_resolver",
                "serializer.normalizer.object",
                "serializer.normalizer.property",
                "serializer.name_converter.metadata_aware",
                "property_info.serializer_extractor",
                "api_platform.serializer.normalizer.item",
                "api_platform.metadata.property.metadata_factory.serializer",
                "api_platform.jsonld.normalizer.item",
                "api_platform.doctrine.orm.query_extension.eager_loading"
            ]
        },
        "api_platform.serializer.mapping.class_metadata_factory.inner": {
            "class": "Symfony\\Component\\Serializer\\Mapping\\Factory\\ClassMetadataFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Returns a {@link ClassMetadata}.",
            "arguments": [
                {
                    "type": "service",
                    "id": "serializer.mapping.chain_loader"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.serializer.mapping.class_metadata_factory"
            ]
        },
        "api_platform.serializer.normalizer.item": {
            "class": "ApiPlatform\\Serializer\\ItemNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Generic item normalizer.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.name_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.metadata_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.symfony.iri_converter"
                },
                {
                    "type": "service",
                    "id": "api_platform.resource_class_resolver"
                },
                {
                    "type": "service",
                    "id": "property_accessor"
                },
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                },
                {
                    "type": "service",
                    "id": "api_platform.serializer.mapping.class_metadata_factory"
                },
                null,
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.security.resource_access_checker"
                },
                [],
                null
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "priority": -895
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -895
                    }
                }
            ],
            "usages": [
                ".50_TraceableNormalizer~4VeSJ51",
                "api_platform.problem.normalizer.validation_exception",
                ".debug.serializer.normalizer.api_platform.serializer.normalizer.item"
            ]
        },
        "api_platform.serializer.property_filter": {
            "class": "ApiPlatform\\Serializer\\Filter\\PropertyFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The property filter adds the possibility to select the properties to serialize (sparse fieldsets).",
            "arguments": [
                "properties",
                false,
                null,
                {
                    "type": "service",
                    "id": "api_platform.hydra.name_converter.hydra_prefix"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "ApiPlatform\\Serializer\\Filter\\PropertyFilter"
            ]
        },
        "api_platform.serializer.property_metadata_loader": {
            "class": "ApiPlatform\\Serializer\\Mapping\\Loader\\PropertyMetadataLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Loader for PHP attributes using ApiProperty.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.name_collection_factory.cached"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "api_platform.serializer_locator": {
            "class": "Symfony\\Component\\DependencyInjection\\ServiceLocator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "serializer": {
                        "type": "service",
                        "id": "debug.serializer"
                    }
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.service_locator",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.9LJrHhf",
                ".service_locator.apyOYg0"
            ]
        },
        "api_platform.state.error_provider": {
            "class": "ApiPlatform\\State\\ErrorProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                true,
                {
                    "type": "service",
                    "id": "api_platform.resource_class_resolver"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.state_provider",
                    "parameters": {
                        "key": "api_platform.state.error_provider"
                    }
                }
            ],
            "usages": [
                ".service_locator.FwcobOi"
            ]
        },
        "api_platform.state_processor.add_link_header": {
            "class": "ApiPlatform\\State\\Processor\\AddLinkHeaderProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.hydra.processor.link"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.http_cache.processor.add_headers.inner",
                "api_platform.http_cache.processor.add_headers"
            ]
        },
        "api_platform.state_processor.locator": {
            "class": "ApiPlatform\\State\\CallableProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.B8Wul0F"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.state_processor.write"
            ]
        },
        "api_platform.state_processor.serialize": {
            "class": "ApiPlatform\\State\\Processor\\SerializeProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Serializes data.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.http_cache.processor.add_headers"
                },
                {
                    "type": "service",
                    "id": "debug.serializer"
                },
                {
                    "type": "service",
                    "id": "api_platform.openapi.serializer_context_builder"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.state_processor.write.inner",
                "api_platform.state_processor.write"
            ]
        },
        "api_platform.state_processor.write": {
            "class": "ApiPlatform\\State\\Processor\\WriteProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Bridges persistence and the API system.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.state_processor.serialize"
                },
                {
                    "type": "service",
                    "id": "api_platform.state_processor.locator"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.state_processor.main",
                "api_platform.symfony.main_controller",
                "api_platform.action.entrypoint",
                "api_platform.action.documentation",
                "api_platform.jsonld.action.context"
            ]
        },
        "api_platform.state_provider.access_checker.post_deserialize": {
            "class": "ApiPlatform\\Symfony\\Security\\State\\AccessCheckerProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Allows access based on the ApiPlatform\\Metadata\\ResourceAccessCheckerInterface. This implementation covers GraphQl and HTTP.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.state_provider.access_checker.post_deserialize.inner"
                },
                {
                    "type": "service",
                    "id": "api_platform.security.resource_access_checker"
                },
                "post_denormalize"
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.decorator",
                    "parameters": {
                        "id": "api_platform.state_provider.deserialize",
                        "inner": "api_platform.state_provider.access_checker.post_deserialize.inner"
                    }
                }
            ],
            "usages": [
                "api_platform.state_provider.validate.inner",
                "api_platform.state_provider.deserialize",
                "api_platform.state_provider.access_checker.post_validate.inner"
            ]
        },
        "api_platform.state_provider.access_checker.post_deserialize.inner": {
            "class": "ApiPlatform\\State\\Provider\\DeserializeProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.state_provider.security_parameter"
                },
                {
                    "type": "service",
                    "id": "debug.serializer"
                },
                {
                    "type": "service",
                    "id": "api_platform.openapi.serializer_context_builder"
                },
                null
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.state_provider.access_checker.post_deserialize"
            ]
        },
        "api_platform.state_provider.access_checker.post_validate": {
            "class": "ApiPlatform\\Symfony\\Security\\State\\AccessCheckerProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Allows access based on the ApiPlatform\\Metadata\\ResourceAccessCheckerInterface. This implementation covers GraphQl and HTTP.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.state_provider.access_checker.post_validate.inner"
                },
                {
                    "type": "service",
                    "id": "api_platform.security.resource_access_checker"
                },
                "post_validate"
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.decorator",
                    "parameters": {
                        "id": "api_platform.state_provider.validate",
                        "inner": "api_platform.state_provider.access_checker.post_validate.inner"
                    }
                }
            ],
            "usages": [
                "api_platform.state_provider.parameter_validator.inner",
                "api_platform.state_provider.validate",
                "api_platform.state_provider.parameter_validator"
            ]
        },
        "api_platform.state_provider.access_checker.post_validate.inner": {
            "class": "ApiPlatform\\Symfony\\Validator\\State\\ValidateProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Validates data on an HTTP or GraphQl operation.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.state_provider.access_checker.post_deserialize"
                },
                {
                    "type": "service",
                    "id": "api_platform.validator"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.state_provider.access_checker.post_validate"
            ]
        },
        "api_platform.state_provider.backed_enum": {
            "class": "ApiPlatform\\State\\Provider\\BackedEnumProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.state_provider",
                    "parameters": {
                        "key": "ApiPlatform\\State\\Provider\\BackedEnumProvider"
                    }
                },
                {
                    "name": "api_platform.state_provider",
                    "parameters": {
                        "key": "api_platform.state_provider.backed_enum"
                    }
                }
            ],
            "usages": [
                ".service_locator.FwcobOi"
            ]
        },
        "api_platform.state_provider.content_negotiation": {
            "class": "ApiPlatform\\State\\Provider\\ContentNegotiationProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.state_provider.parameter"
                },
                {
                    "type": "service",
                    "id": "api_platform.negotiator"
                },
                "%api_platform.formats%",
                "%api_platform.error_formats%"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.state_provider.main",
                "api_platform.symfony.main_controller",
                "api_platform.action.entrypoint",
                "api_platform.action.documentation",
                "api_platform.jsonld.action.context"
            ]
        },
        "api_platform.state_provider.create": {
            "class": "ApiPlatform\\State\\CreateProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An ItemProvider for POST operations on generated subresources.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.state_provider.locator"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.state_provider",
                    "parameters": {
                        "key": "ApiPlatform\\State\\CreateProvider"
                    }
                },
                {
                    "name": "api_platform.state_provider",
                    "parameters": {
                        "key": "api_platform.state_provider.create"
                    }
                }
            ],
            "usages": [
                "ApiPlatform\\State\\CreateProvider",
                ".service_locator.FwcobOi"
            ]
        },
        "api_platform.state_provider.locator": {
            "class": "ApiPlatform\\State\\CallableProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.FwcobOi"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.state_provider",
                "api_platform.state_provider.read.inner",
                "api_platform.state_provider.create",
                "api_platform.symfony.iri_converter",
                "api_platform.swagger_ui.provider.inner"
            ]
        },
        "api_platform.state_provider.object": {
            "class": "ApiPlatform\\State\\ObjectProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An ItemProvider that just creates a new object.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.state_provider",
                    "parameters": {
                        "key": "ApiPlatform\\State\\ObjectProvider"
                    }
                },
                {
                    "name": "api_platform.state_provider",
                    "parameters": {
                        "key": "api_platform.state_provider.object"
                    }
                }
            ],
            "usages": [
                "ApiPlatform\\State\\ObjectProvider",
                ".service_locator.FwcobOi"
            ]
        },
        "api_platform.state_provider.parameter": {
            "class": "ApiPlatform\\State\\Provider\\ParameterProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Loops over parameters to: - compute its values set as extra properties from the Parameter object (`_api_values`) - call the Parameter::provider if any and updates the Operation",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.state_provider.parameter_validator"
                },
                {
                    "type": "service",
                    "id": ".service_locator.WQt9XZi"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.state_provider.content_negotiation.inner",
                "api_platform.state_provider.content_negotiation"
            ]
        },
        "api_platform.state_provider.parameter.iri_converter": {
            "class": "ApiPlatform\\State\\ParameterProvider\\IriConverterParameterProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.symfony.iri_converter"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.parameter_provider",
                    "parameters": {
                        "key": "ApiPlatform\\State\\ParameterProvider\\IriConverterParameterProvider",
                        "priority": -895
                    }
                }
            ],
            "usages": [
                ".service_locator.WQt9XZi"
            ]
        },
        "api_platform.state_provider.parameter_validator": {
            "class": "ApiPlatform\\Symfony\\Validator\\State\\ParameterValidatorProvider",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Validates parameters using the Symfony validator.",
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.validator"
                },
                {
                    "type": "service",
                    "id": "api_platform.state_provider.access_checker.post_validate"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.state_provider.parameter.inner",
                "api_platform.state_provider.parameter"
            ]
        },
        "api_platform.state_provider.security_parameter": {
            "class": "ApiPlatform\\State\\Provider\\SecurityParameterProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Loops over parameters to check parameter security. Throws an exception if security is not granted.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.state_provider.security_parameter.inner"
                },
                {
                    "type": "service",
                    "id": "api_platform.security.resource_access_checker"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.decorator",
                    "parameters": {
                        "id": "api_platform.state_provider.access_checker",
                        "inner": "api_platform.state_provider.security_parameter.inner"
                    }
                }
            ],
            "usages": [
                "api_platform.state_provider.deserialize.inner",
                "api_platform.state_provider.read",
                "api_platform.state_provider.access_checker",
                "api_platform.state_provider.access_checker.post_deserialize.inner"
            ]
        },
        "api_platform.state_provider.security_parameter.inner": {
            "class": "ApiPlatform\\Symfony\\Security\\State\\AccessCheckerProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Allows access based on the ApiPlatform\\Metadata\\ResourceAccessCheckerInterface. This implementation covers GraphQl and HTTP.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.swagger_ui.provider"
                },
                {
                    "type": "service",
                    "id": "api_platform.security.resource_access_checker"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.decorator",
                    "parameters": {
                        "id": "api_platform.state_provider.read",
                        "inner": "api_platform.swagger_ui.provider.inner"
                    }
                }
            ],
            "usages": [
                "api_platform.state_provider.security_parameter"
            ]
        },
        "api_platform.swagger_ui.context": {
            "class": "ApiPlatform\\Symfony\\Bundle\\SwaggerUi\\SwaggerUiContext",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                true,
                true,
                true,
                false,
                false,
                null,
                []
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.swagger_ui.processor"
            ]
        },
        "api_platform.swagger_ui.processor": {
            "class": "ApiPlatform\\Symfony\\Bundle\\SwaggerUi\\SwaggerUiProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "twig"
                },
                {
                    "type": "service",
                    "id": "router.default"
                },
                {
                    "type": "service",
                    "id": "debug.serializer"
                },
                {
                    "type": "service",
                    "id": "api_platform.openapi.options"
                },
                {
                    "type": "service",
                    "id": "api_platform.swagger_ui.context"
                },
                "%api_platform.docs_formats%",
                "",
                "",
                false
            ],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.state_processor",
                    "parameters": {
                        "priority": -100,
                        "key": "api_platform.swagger_ui.processor"
                    }
                }
            ],
            "usages": [
                ".service_locator.B8Wul0F"
            ]
        },
        "api_platform.swagger_ui.provider": {
            "class": "ApiPlatform\\Symfony\\Bundle\\SwaggerUi\\SwaggerUiProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "When an HTML request is sent we provide a swagger ui documentation.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.swagger_ui.provider.inner"
                },
                {
                    "type": "service",
                    "id": "api_platform.openapi.factory"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.state_provider.access_checker.inner",
                "api_platform.state_provider.security_parameter.inner"
            ]
        },
        "api_platform.swagger_ui.provider.inner": {
            "class": "ApiPlatform\\State\\Provider\\ReadProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Retrieves data from the applicable data provider, based on the current IRI, and sets it as a request parameter called data.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.state_provider.locator"
                },
                {
                    "type": "service",
                    "id": "api_platform.openapi.serializer_context_builder"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.swagger_ui.provider"
            ]
        },
        "api_platform.symfony.iri_converter": {
            "class": "ApiPlatform\\Symfony\\Routing\\IriConverter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "{@inheritdoc}",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.state_provider.locator"
                },
                {
                    "type": "service",
                    "id": "api_platform.router"
                },
                {
                    "type": "service",
                    "id": "api_platform.api.identifiers_extractor"
                },
                {
                    "type": "service",
                    "id": "api_platform.resource_class_resolver"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.uri_variables.converter"
                },
                {
                    "type": "service",
                    "id": "api_platform.symfony.iri_converter.skolem"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.operation.metadata_factory"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.iri_converter",
                "ApiPlatform\\Metadata\\IriConverterInterface",
                "api_platform.serializer.normalizer.item",
                "api_platform.state_provider.parameter.iri_converter",
                "api_platform.jsonld.normalizer.item",
                "api_platform.jsonld.normalizer.object",
                "api_platform.hydra.normalizer.entrypoint",
                "api_platform.doctrine.orm.search_filter.instance",
                "annotated_app_entity_carousel_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_city_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_fias_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_option_value_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_order_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_product_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_product_to_category_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_pvz_points_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_pvz_price_api_platform_doctrine_orm_filter_search_filter",
                "api_platform.hydra.processor.link.inner",
                "api_platform.hydra.normalizer.partial_collection_view.inner"
            ]
        },
        "api_platform.symfony.iri_converter.skolem": {
            "class": "ApiPlatform\\Symfony\\Routing\\SkolemIriConverter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "{@inheritdoc}",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.router"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.symfony.iri_converter",
                "api_platform.jsonld.context_builder"
            ]
        },
        "api_platform.symfony.main_controller": {
            "class": "ApiPlatform\\Symfony\\Controller\\MainController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.state_provider.content_negotiation"
                },
                {
                    "type": "service",
                    "id": "api_platform.state_processor.write"
                },
                {
                    "type": "service",
                    "id": "api_platform.uri_variables.converter"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "api_platform.symfony.uri_variables.transformer.ulid": {
            "class": "ApiPlatform\\Symfony\\UriVariableTransformer\\UlidUriVariableTransformer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Transforms an ULID string to an instance of Symfony\\Component\\Uid\\Ulid.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.uri_variables.transformer",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "api_platform.symfony.uri_variables.transformer.uuid": {
            "class": "ApiPlatform\\Symfony\\UriVariableTransformer\\UuidUriVariableTransformer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Transforms an UUID string to an instance of Symfony\\Component\\Uid\\Uuid.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.uri_variables.transformer",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "api_platform.uri_variables.converter": {
            "class": "ApiPlatform\\Metadata\\UriVariablesConverter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "UriVariables converter that chains uri variables transformers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.property.metadata_factory.cached"
                },
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                []
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.symfony.iri_converter",
                "api_platform.symfony.main_controller"
            ]
        },
        "api_platform.uri_variables.transformer.date_time": {
            "class": "ApiPlatform\\Metadata\\UriVariableTransformer\\DateTimeUriVariableTransformer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.uri_variables.transformer",
                    "parameters": {
                        "priority": -100
                    }
                }
            ],
            "usages": []
        },
        "api_platform.uri_variables.transformer.integer": {
            "class": "ApiPlatform\\Metadata\\UriVariableTransformer\\IntegerUriVariableTransformer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.uri_variables.transformer",
                    "parameters": {
                        "priority": -100
                    }
                }
            ],
            "usages": []
        },
        "api_platform.validator": {
            "class": "ApiPlatform\\Symfony\\Validator\\Validator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Validates an item using the Symfony validator component.",
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.validator"
                },
                {
                    "type": "service",
                    "id": ".service_locator.GIuJv7e"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "ApiPlatform\\Validator\\ValidatorInterface",
                "api_platform.state_provider.access_checker.post_validate.inner"
            ]
        },
        "api_platform.validator.metadata.resource.metadata_collection_factory.parameter": {
            "class": "ApiPlatform\\Validator\\Metadata\\Resource\\Factory\\ParameterValidationResourceMetadataCollectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.parameter"
                },
                {
                    "type": "service",
                    "id": "api_platform.filter_locator"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.metadata.resource.metadata_collection_factory.xml.inner",
                "api_platform.metadata.resource.metadata_collection_factory.xml"
            ]
        },
        "api_platform.validator.state.error_provider": {
            "class": "ApiPlatform\\Symfony\\Validator\\State\\ErrorProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "api_platform.state_provider",
                    "parameters": {
                        "key": "api_platform.validator.state.error_provider"
                    }
                }
            ],
            "usages": [
                ".service_locator.FwcobOi"
            ]
        },
        "api_platform.yamlopenapi.encoder": {
            "class": "ApiPlatform\\Serializer\\YamlEncoder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A YAML encoder with appropriate default options to embed the generated document into HTML.",
            "arguments": [
                "yamlopenapi",
                {
                    "type": "service",
                    "id": "serializer.encoder.yaml"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.encoder",
                    "parameters": []
                },
                {
                    "name": "serializer.encoder.default",
                    "parameters": []
                }
            ],
            "usages": [
                ".70_TraceableEncoder~4VeSJ51",
                ".debug.serializer.encoder.api_platform.yamlopenapi.encoder"
            ]
        },
        "argument_metadata_factory": {
            "class": "Symfony\\Component\\HttpKernel\\ControllerMetadata\\ArgumentMetadataFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Builds {@see ArgumentMetadata} objects based on the given Controller.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "debug.argument_resolver.inner"
            ]
        },
        "argument_resolver.backed_enum_resolver": {
            "class": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\BackedEnumValueResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Attempt to resolve backed enum cases from request attributes, for a route path parameter, leading to a 404 Not Found if the attribute value isn't a valid backing value for the enum type.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "controller.argument_value_resolver",
                    "parameters": {
                        "priority": 100,
                        "name": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\BackedEnumValueResolver"
                    }
                }
            ],
            "usages": [
                ".debug.value_resolver.argument_resolver.backed_enum_resolver"
            ]
        },
        "argument_resolver.datetime": {
            "class": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\DateTimeValueResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Convert DateTime instances from request attribute variable.",
            "arguments": [
                {
                    "type": "service",
                    "id": "clock"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "controller.argument_value_resolver",
                    "parameters": {
                        "priority": 100,
                        "name": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\DateTimeValueResolver"
                    }
                }
            ],
            "usages": [
                ".debug.value_resolver.argument_resolver.datetime"
            ]
        },
        "argument_resolver.default": {
            "class": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\DefaultValueResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Yields the default value defined in the action signature when no value has been given.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "controller.argument_value_resolver",
                    "parameters": {
                        "priority": -100,
                        "name": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\DefaultValueResolver"
                    }
                }
            ],
            "usages": [
                ".debug.value_resolver.argument_resolver.default"
            ]
        },
        "argument_resolver.not_tagged_controller": {
            "class": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\NotTaggedControllerValueResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Provides an intuitive error message when controller fails because it is not registered as a service.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.GyxOlJL"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "controller.argument_value_resolver",
                    "parameters": {
                        "priority": -200
                    }
                }
            ],
            "usages": [
                ".debug.value_resolver.argument_resolver.not_tagged_controller"
            ]
        },
        "argument_resolver.query_parameter_value_resolver": {
            "class": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\QueryParameterValueResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Resolve arguments of type: array, string, int, float, bool, \\BackedEnum from query parameters.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "controller.targeted_value_resolver",
                    "parameters": {
                        "name": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\QueryParameterValueResolver"
                    }
                }
            ],
            "usages": [
                ".debug.value_resolver.argument_resolver.query_parameter_value_resolver"
            ]
        },
        "argument_resolver.request": {
            "class": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\RequestValueResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Yields the same instance as the request object passed along.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "controller.argument_value_resolver",
                    "parameters": {
                        "priority": 50,
                        "name": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\RequestValueResolver"
                    }
                }
            ],
            "usages": [
                ".debug.value_resolver.argument_resolver.request"
            ]
        },
        "argument_resolver.request_attribute": {
            "class": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\RequestAttributeValueResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Yields a non-variadic argument's value from the request attributes.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "controller.argument_value_resolver",
                    "parameters": {
                        "priority": 100,
                        "name": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\RequestAttributeValueResolver"
                    }
                }
            ],
            "usages": [
                ".debug.value_resolver.argument_resolver.request_attribute"
            ]
        },
        "argument_resolver.request_payload": {
            "class": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\RequestPayloadValueResolver",
            "public": false,
            "synthetic": false,
            "lazy": true,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.serializer"
                },
                {
                    "type": "service",
                    "id": "debug.validator"
                },
                null,
                "validators"
            ],
            "file": null,
            "tags": [
                {
                    "name": "controller.targeted_value_resolver",
                    "parameters": {
                        "name": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\RequestPayloadValueResolver"
                    }
                },
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher",
                ".debug.value_resolver.argument_resolver.request_payload"
            ]
        },
        "argument_resolver.service": {
            "class": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\ServiceValueResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Yields a service keyed by _controller and argument name.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.GyxOlJL"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "controller.argument_value_resolver",
                    "parameters": {
                        "priority": -50,
                        "name": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\ServiceValueResolver"
                    }
                }
            ],
            "usages": [
                ".debug.value_resolver.argument_resolver.service"
            ]
        },
        "argument_resolver.session": {
            "class": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\SessionValueResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Yields the Session.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "controller.argument_value_resolver",
                    "parameters": {
                        "priority": 50,
                        "name": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\SessionValueResolver"
                    }
                }
            ],
            "usages": [
                ".debug.value_resolver.argument_resolver.session"
            ]
        },
        "argument_resolver.uid": {
            "class": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\UidValueResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "controller.argument_value_resolver",
                    "parameters": {
                        "priority": 100,
                        "name": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\UidValueResolver"
                    }
                }
            ],
            "usages": [
                ".debug.value_resolver.argument_resolver.uid"
            ]
        },
        "argument_resolver.variadic": {
            "class": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\VariadicValueResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Yields a variadic argument's values from the request attributes.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "controller.argument_value_resolver",
                    "parameters": {
                        "priority": -150,
                        "name": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver\\VariadicValueResolver"
                    }
                }
            ],
            "usages": [
                ".debug.value_resolver.argument_resolver.variadic"
            ]
        },
        "assets._default_package": {
            "class": "Symfony\\Component\\Asset\\PathPackage",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Package that adds a base path to asset URLs in addition to a version.",
            "arguments": [
                "",
                {
                    "type": "service",
                    "id": "assets._version__default"
                },
                {
                    "type": "service",
                    "id": "assets.context"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "assets.packages"
            ]
        },
        "assets._version__default": {
            "class": "Symfony\\Component\\Asset\\VersionStrategy\\JsonManifestVersionStrategy",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Reads the versioned path of an asset from a JSON manifest file.",
            "arguments": [
                "J:\\laragon\\www\\new3\/public\/build\/manifest.json",
                null,
                false
            ],
            "file": null,
            "tags": [],
            "usages": [
                "assets._default_package"
            ]
        },
        "assets.context": {
            "class": "Symfony\\Component\\Asset\\Context\\RequestStackContext",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Uses a RequestStack to populate the context.",
            "arguments": [
                {
                    "type": "service",
                    "id": "request_stack"
                },
                {
                    "type": "service",
                    "id": ".3_string~4VeSJ51"
                },
                {
                    "type": "service",
                    "id": ".4_bool~4VeSJ51"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "assets._default_package"
            ]
        },
        "assets.empty_package": {
            "class": "Symfony\\Component\\Asset\\Package",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Basic package that adds a version to asset URLs.",
            "arguments": [
                {
                    "type": "service",
                    "id": "assets.empty_version_strategy"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "assets.empty_version_strategy": {
            "class": "Symfony\\Component\\Asset\\VersionStrategy\\EmptyVersionStrategy",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Disable version for all assets.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "assets.empty_package"
            ]
        },
        "assets.json_manifest_version_strategy": {
            "class": "Symfony\\Component\\Asset\\VersionStrategy\\JsonManifestVersionStrategy",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Reads the versioned path of an asset from a JSON manifest file.",
            "arguments": [
                {
                    "type": "abstract",
                    "text": "manifest path"
                },
                {
                    "type": "service",
                    "id": "http_client"
                },
                false
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "assets.packages": {
            "class": "Symfony\\Component\\Asset\\Packages",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Helps manage asset URLs.",
            "arguments": [
                {
                    "type": "service",
                    "id": "assets._default_package"
                },
                []
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\Asset\\Packages",
                "webpack_encore.tag_renderer",
                "twig.extension.assets"
            ]
        },
        "assets.path_package": {
            "class": "Symfony\\Component\\Asset\\PathPackage",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Package that adds a base path to asset URLs in addition to a version.",
            "arguments": [
                {
                    "type": "abstract",
                    "text": "base path"
                },
                {
                    "type": "abstract",
                    "text": "version strategy"
                },
                {
                    "type": "service",
                    "id": "assets.context"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "assets.static_version_strategy": {
            "class": "Symfony\\Component\\Asset\\VersionStrategy\\StaticVersionStrategy",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Returns the same version for all assets.",
            "arguments": [
                {
                    "type": "abstract",
                    "text": "version"
                },
                {
                    "type": "abstract",
                    "text": "format"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "assets.url_package": {
            "class": "Symfony\\Component\\Asset\\UrlPackage",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Package that adds a base URL to asset URLs in addition to a version.",
            "arguments": [
                {
                    "type": "abstract",
                    "text": "base URLs"
                },
                {
                    "type": "abstract",
                    "text": "version strategy"
                },
                {
                    "type": "service",
                    "id": "assets.context"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "cache.adapter.apcu": {
            "class": "Symfony\\Component\\Cache\\Adapter\\ApcuAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "",
                0,
                "%container.build_id%"
            ],
            "file": null,
            "calls": [
                "setLogger"
            ],
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": {
                        "clearer": "cache.default_clearer",
                        "reset": "reset"
                    }
                },
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "cache"
                    }
                }
            ],
            "usages": []
        },
        "cache.adapter.array": {
            "class": "Symfony\\Component\\Cache\\Adapter\\ArrayAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An in-memory cache storage.",
            "arguments": [
                0
            ],
            "file": null,
            "calls": [
                "setLogger"
            ],
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": {
                        "clearer": "cache.default_clearer",
                        "reset": "reset"
                    }
                },
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "cache"
                    }
                }
            ],
            "usages": []
        },
        "cache.adapter.doctrine_dbal": {
            "class": "Symfony\\Component\\Cache\\Adapter\\DoctrineDbalAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "abstract",
                    "text": "DBAL connection service"
                },
                "",
                0,
                [],
                {
                    "type": "service",
                    "id": "cache.default_marshaller"
                }
            ],
            "file": null,
            "calls": [
                "setLogger"
            ],
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": {
                        "provider": "cache.default_doctrine_dbal_provider",
                        "clearer": "cache.default_clearer",
                        "reset": "reset"
                    }
                },
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "cache"
                    }
                }
            ],
            "usages": []
        },
        "cache.adapter.filesystem": {
            "class": "Symfony\\Component\\Cache\\Adapter\\FilesystemAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "",
                0,
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/pools\/app",
                {
                    "type": "service",
                    "id": "cache.default_marshaller"
                }
            ],
            "file": null,
            "calls": [
                "setLogger"
            ],
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": {
                        "clearer": "cache.default_clearer",
                        "reset": "reset"
                    }
                },
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "cache"
                    }
                }
            ],
            "usages": []
        },
        "cache.adapter.memcached": {
            "class": "Symfony\\Component\\Cache\\Adapter\\MemcachedAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "abstract",
                    "text": "Memcached connection service"
                },
                "",
                0,
                {
                    "type": "service",
                    "id": "cache.default_marshaller"
                }
            ],
            "file": null,
            "calls": [
                "setLogger"
            ],
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": {
                        "provider": "cache.default_memcached_provider",
                        "clearer": "cache.default_clearer",
                        "reset": "reset"
                    }
                },
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "cache"
                    }
                }
            ],
            "usages": []
        },
        "cache.adapter.pdo": {
            "class": "Symfony\\Component\\Cache\\Adapter\\PdoAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "abstract",
                    "text": "PDO connection service"
                },
                "",
                0,
                [],
                {
                    "type": "service",
                    "id": "cache.default_marshaller"
                }
            ],
            "file": null,
            "calls": [
                "setLogger"
            ],
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": {
                        "provider": "cache.default_pdo_provider",
                        "clearer": "cache.default_clearer",
                        "reset": "reset"
                    }
                },
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "cache"
                    }
                }
            ],
            "usages": []
        },
        "cache.adapter.psr6": {
            "class": "Symfony\\Component\\Cache\\Adapter\\ProxyAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "abstract",
                    "text": "PSR-6 provider service"
                },
                "",
                0
            ],
            "file": null,
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": {
                        "provider": "cache.default_psr6_provider",
                        "clearer": "cache.default_clearer",
                        "reset": "reset"
                    }
                }
            ],
            "usages": []
        },
        "cache.adapter.redis": {
            "class": "Symfony\\Component\\Cache\\Adapter\\RedisAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "abstract",
                    "text": "Redis connection service"
                },
                "",
                0,
                {
                    "type": "service",
                    "id": "cache.default_marshaller"
                }
            ],
            "file": null,
            "calls": [
                "setLogger"
            ],
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": {
                        "provider": "cache.default_redis_provider",
                        "clearer": "cache.default_clearer",
                        "reset": "reset"
                    }
                },
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "cache"
                    }
                }
            ],
            "usages": [
                "cache.adapter.valkey"
            ]
        },
        "cache.adapter.redis_tag_aware": {
            "class": "Symfony\\Component\\Cache\\Adapter\\RedisTagAwareAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Stores tag id <> cache id relationship as a Redis Set.",
            "arguments": [
                {
                    "type": "abstract",
                    "text": "Redis connection service"
                },
                "",
                0,
                {
                    "type": "service",
                    "id": "cache.default_marshaller"
                }
            ],
            "file": null,
            "calls": [
                "setLogger"
            ],
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": {
                        "provider": "cache.default_redis_provider",
                        "clearer": "cache.default_clearer",
                        "reset": "reset"
                    }
                },
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "cache"
                    }
                }
            ],
            "usages": [
                "cache.adapter.valkey_tag_aware"
            ]
        },
        "cache.adapter.system": {
            "class": "Symfony\\Component\\Cache\\Adapter\\AdapterInterface",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Interface for adapters managing instances of Symfony's CacheItem.",
            "arguments": [
                "",
                0,
                "%container.build_id%",
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/pools\/system",
                {
                    "type": "service",
                    "id": "monolog.logger.cache"
                }
            ],
            "file": null,
            "factory_class": "Symfony\\Component\\Cache\\Adapter\\AbstractAdapter",
            "factory_method": "createSystemCache",
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": {
                        "clearer": "cache.system_clearer",
                        "reset": "reset"
                    }
                },
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "cache"
                    }
                }
            ],
            "usages": []
        },
        "cache.app": {
            "class": "Symfony\\Component\\Cache\\Adapter\\TraceableAdapter",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An adapter that collects data about all cache calls.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache.app.recorder_inner"
                },
                {
                    "type": "service",
                    "id": "profiler.is_disabled_state_checker"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": []
                },
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "Psr\\Cache\\CacheItemPoolInterface",
                "Symfony\\Contracts\\Cache\\CacheInterface",
                "Symfony\\Contracts\\Cache\\NamespacedPoolInterface",
                "App\\Controller\\Api\\DeliveryPublicController",
                "App\\Service\\BreadcrumbBuilder",
                "App\\Service\\Delivery\\DeliveryService",
                "App\\Service\\InventoryService",
                "App\\Service\\ProductVariantService",
                "services_resetter",
                "cache.app.taggable",
                "cache.default_clearer",
                "cache.global_clearer",
                "data_collector.cache"
            ]
        },
        "cache.app.recorder_inner": {
            "class": "Symfony\\Component\\Cache\\Adapter\\FilesystemAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "FPeWhgGXxC",
                0,
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/pools\/app",
                {
                    "type": "service",
                    "id": "cache.default_marshaller"
                }
            ],
            "file": null,
            "calls": [
                "setLogger"
            ],
            "tags": [],
            "usages": [
                "cache.app"
            ]
        },
        "cache.app.taggable": {
            "class": "Symfony\\Component\\Cache\\Adapter\\TagAwareAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Implements simple and robust tag-based invalidation suitable for use with volatile caches.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache.app"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "cache.taggable",
                    "parameters": {
                        "pool": "cache.app"
                    }
                }
            ],
            "usages": [
                "Symfony\\Contracts\\Cache\\TagAwareCacheInterface",
                ".service_locator.DOrA4Nm"
            ]
        },
        "cache.default_clearer": {
            "class": "Symfony\\Component\\HttpKernel\\CacheClearer\\Psr6CacheClearer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "cache.app": {
                        "type": "service",
                        "id": "cache.app"
                    }
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "cache.pool.clearer",
                    "parameters": []
                }
            ],
            "usages": [
                "cache.app_clearer"
            ]
        },
        "cache.default_marshaller": {
            "class": "Symfony\\Component\\Cache\\Marshaller\\DefaultMarshaller",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Serializes\/unserializes values using igbinary_serialize() if available, serialize() otherwise.",
            "arguments": [
                null,
                true
            ],
            "file": null,
            "tags": [],
            "usages": [
                "cache.app.recorder_inner"
            ]
        },
        "cache.doctrine.orm.default.metadata": {
            "class": "Symfony\\Component\\Cache\\Adapter\\ArrayAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An in-memory cache storage.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "doctrine.orm.default_metadata_cache",
                "doctrine.orm.default_configuration"
            ]
        },
        "cache.doctrine.orm.default.query": {
            "class": "Symfony\\Component\\Cache\\Adapter\\TraceableAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An adapter that collects data about all cache calls.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache.doctrine.orm.default.query.recorder_inner"
                },
                {
                    "type": "service",
                    "id": "profiler.is_disabled_state_checker"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": []
                }
            ],
            "usages": [
                "doctrine.orm.default_query_cache",
                "cache.global_clearer",
                "data_collector.cache",
                "doctrine.orm.default_configuration"
            ]
        },
        "cache.doctrine.orm.default.query.recorder_inner": {
            "class": "Symfony\\Component\\Cache\\Adapter\\ArrayAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An in-memory cache storage.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "cache.doctrine.orm.default.query"
            ]
        },
        "cache.doctrine.orm.default.result": {
            "class": "Symfony\\Component\\Cache\\Adapter\\TraceableAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An adapter that collects data about all cache calls.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache.doctrine.orm.default.result.recorder_inner"
                },
                {
                    "type": "service",
                    "id": "profiler.is_disabled_state_checker"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": []
                }
            ],
            "usages": [
                "doctrine.orm.default_result_cache",
                "cache.global_clearer",
                "data_collector.cache",
                "doctrine.orm.default_configuration"
            ]
        },
        "cache.doctrine.orm.default.result.recorder_inner": {
            "class": "Symfony\\Component\\Cache\\Adapter\\ArrayAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An in-memory cache storage.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "cache.doctrine.orm.default.result"
            ]
        },
        "cache.global_clearer": {
            "class": "Symfony\\Component\\HttpKernel\\CacheClearer\\Psr6CacheClearer",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "cache.app": {
                        "type": "service",
                        "id": "cache.app"
                    },
                    "cache.system": {
                        "type": "service",
                        "id": "cache.system"
                    },
                    "cache.validator": {
                        "type": "service",
                        "id": "cache.validator"
                    },
                    "cache.serializer": {
                        "type": "service",
                        "id": "cache.serializer"
                    },
                    "cache.property_info": {
                        "type": "service",
                        "id": "cache.property_info"
                    },
                    "cache.validator_expression_language": {
                        "type": "service",
                        "id": "cache.validator_expression_language"
                    },
                    "cache.webpack_encore": {
                        "type": "service",
                        "id": "cache.webpack_encore"
                    },
                    "cache.security_expression_language": {
                        "type": "service",
                        "id": "cache.security_expression_language"
                    },
                    "cache.security_is_granted_attribute_expression_language": {
                        "type": "service",
                        "id": "cache.security_is_granted_attribute_expression_language"
                    },
                    "cache.security_is_csrf_token_valid_attribute_expression_language": {
                        "type": "service",
                        "id": "cache.security_is_csrf_token_valid_attribute_expression_language"
                    },
                    "cache.doctrine.orm.default.result": {
                        "type": "service",
                        "id": "cache.doctrine.orm.default.result"
                    },
                    "cache.doctrine.orm.default.query": {
                        "type": "service",
                        "id": "cache.doctrine.orm.default.query"
                    },
                    "api_platform.cache.route_name_resolver": {
                        "type": "service",
                        "id": "api_platform.cache.route_name_resolver"
                    },
                    "api_platform.cache.metadata.resource": {
                        "type": "service",
                        "id": "api_platform.cache.metadata.resource"
                    },
                    "api_platform.cache.metadata.property": {
                        "type": "service",
                        "id": "api_platform.cache.metadata.property"
                    },
                    "api_platform.cache.metadata.resource_collection": {
                        "type": "service",
                        "id": "api_platform.cache.metadata.resource_collection"
                    },
                    "api_platform.cache.openapi": {
                        "type": "service",
                        "id": "api_platform.cache.openapi"
                    },
                    "cache.ux.twig_component": {
                        "type": "service",
                        "id": "cache.ux.twig_component"
                    }
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "cache.pool.clearer",
                    "parameters": []
                }
            ],
            "usages": [
                "console.command.cache_pool_clear",
                "console.command.cache_pool_delete"
            ]
        },
        "cache.property_access": {
            "class": "Symfony\\Component\\Cache\\Adapter\\ArrayAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An in-memory cache storage.",
            "arguments": [
                0,
                false
            ],
            "file": null,
            "tags": [],
            "usages": [
                "property_accessor"
            ]
        },
        "cache.property_info": {
            "class": "Symfony\\Component\\Cache\\Adapter\\TraceableAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An adapter that collects data about all cache calls.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache.property_info.recorder_inner"
                },
                {
                    "type": "service",
                    "id": "profiler.is_disabled_state_checker"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": []
                },
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "cache.system_clearer",
                "cache.global_clearer",
                "data_collector.cache"
            ]
        },
        "cache.property_info.recorder_inner": {
            "class": "Symfony\\Component\\Cache\\Adapter\\AdapterInterface",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Interface for adapters managing instances of Symfony's CacheItem.",
            "arguments": [
                "UZlGEu9EX4",
                0,
                "%container.build_id%",
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/pools\/system",
                {
                    "type": "service",
                    "id": "monolog.logger.cache"
                }
            ],
            "file": null,
            "factory_class": "Symfony\\Component\\Cache\\Adapter\\AbstractAdapter",
            "factory_method": "createSystemCache",
            "tags": [],
            "usages": [
                "cache.property_info"
            ]
        },
        "cache.security_expression_language": {
            "class": "Symfony\\Component\\Cache\\Adapter\\TraceableAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An adapter that collects data about all cache calls.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache.security_expression_language.recorder_inner"
                },
                {
                    "type": "service",
                    "id": "profiler.is_disabled_state_checker"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": []
                },
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "cache.system_clearer",
                "cache.global_clearer",
                "data_collector.cache",
                "security.expression_language"
            ]
        },
        "cache.security_expression_language.recorder_inner": {
            "class": "Symfony\\Component\\Cache\\Adapter\\AdapterInterface",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Interface for adapters managing instances of Symfony's CacheItem.",
            "arguments": [
                "pr3upQU+nL",
                0,
                "%container.build_id%",
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/pools\/system",
                {
                    "type": "service",
                    "id": "monolog.logger.cache"
                }
            ],
            "file": null,
            "factory_class": "Symfony\\Component\\Cache\\Adapter\\AbstractAdapter",
            "factory_method": "createSystemCache",
            "tags": [],
            "usages": [
                "cache.security_expression_language"
            ]
        },
        "cache.security_is_csrf_token_valid_attribute_expression_language": {
            "class": "Symfony\\Component\\Cache\\Adapter\\TraceableAdapter",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An adapter that collects data about all cache calls.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache.security_is_csrf_token_valid_attribute_expression_language.recorder_inner"
                },
                {
                    "type": "service",
                    "id": "profiler.is_disabled_state_checker"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": []
                },
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "cache.system_clearer",
                "cache.global_clearer",
                "data_collector.cache",
                "security.is_csrf_token_valid_attribute_expression_language"
            ]
        },
        "cache.security_is_csrf_token_valid_attribute_expression_language.recorder_inner": {
            "class": "Symfony\\Component\\Cache\\Adapter\\AdapterInterface",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Interface for adapters managing instances of Symfony's CacheItem.",
            "arguments": [
                "aCsPbIAP6Q",
                0,
                "%container.build_id%",
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/pools\/system",
                {
                    "type": "service",
                    "id": "monolog.logger.cache"
                }
            ],
            "file": null,
            "factory_class": "Symfony\\Component\\Cache\\Adapter\\AbstractAdapter",
            "factory_method": "createSystemCache",
            "tags": [],
            "usages": [
                "cache.security_is_csrf_token_valid_attribute_expression_language"
            ]
        },
        "cache.security_is_granted_attribute_expression_language": {
            "class": "Symfony\\Component\\Cache\\Adapter\\TraceableAdapter",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An adapter that collects data about all cache calls.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache.security_is_granted_attribute_expression_language.recorder_inner"
                },
                {
                    "type": "service",
                    "id": "profiler.is_disabled_state_checker"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": []
                },
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "cache.system_clearer",
                "cache.global_clearer",
                "data_collector.cache",
                "security.is_granted_attribute_expression_language"
            ]
        },
        "cache.security_is_granted_attribute_expression_language.recorder_inner": {
            "class": "Symfony\\Component\\Cache\\Adapter\\AdapterInterface",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Interface for adapters managing instances of Symfony's CacheItem.",
            "arguments": [
                "5BdfEi+H5Z",
                0,
                "%container.build_id%",
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/pools\/system",
                {
                    "type": "service",
                    "id": "monolog.logger.cache"
                }
            ],
            "file": null,
            "factory_class": "Symfony\\Component\\Cache\\Adapter\\AbstractAdapter",
            "factory_method": "createSystemCache",
            "tags": [],
            "usages": [
                "cache.security_is_granted_attribute_expression_language"
            ]
        },
        "cache.serializer": {
            "class": "Symfony\\Component\\Cache\\Adapter\\TraceableAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An adapter that collects data about all cache calls.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache.serializer.recorder_inner"
                },
                {
                    "type": "service",
                    "id": "profiler.is_disabled_state_checker"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": []
                },
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "cache.system_clearer",
                "cache.global_clearer",
                "serializer.mapping.cache.symfony",
                "data_collector.cache"
            ]
        },
        "cache.serializer.recorder_inner": {
            "class": "Symfony\\Component\\Cache\\Adapter\\AdapterInterface",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Interface for adapters managing instances of Symfony's CacheItem.",
            "arguments": [
                "KdHasjYX9K",
                0,
                "%container.build_id%",
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/pools\/system",
                {
                    "type": "service",
                    "id": "monolog.logger.cache"
                }
            ],
            "file": null,
            "factory_class": "Symfony\\Component\\Cache\\Adapter\\AbstractAdapter",
            "factory_method": "createSystemCache",
            "tags": [],
            "usages": [
                "cache.serializer"
            ]
        },
        "cache.system": {
            "class": "Symfony\\Component\\Cache\\Adapter\\TraceableAdapter",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An adapter that collects data about all cache calls.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache.system.recorder_inner"
                },
                {
                    "type": "service",
                    "id": "profiler.is_disabled_state_checker"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": []
                },
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "cache.system_clearer",
                "cache.global_clearer",
                "data_collector.cache"
            ]
        },
        "cache.system.recorder_inner": {
            "class": "Symfony\\Component\\Cache\\Adapter\\AdapterInterface",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Interface for adapters managing instances of Symfony's CacheItem.",
            "arguments": [
                "mlWT-dGQGC",
                0,
                "%container.build_id%",
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/pools\/system",
                {
                    "type": "service",
                    "id": "monolog.logger.cache"
                }
            ],
            "file": null,
            "factory_class": "Symfony\\Component\\Cache\\Adapter\\AbstractAdapter",
            "factory_method": "createSystemCache",
            "tags": [],
            "usages": [
                "cache.system"
            ]
        },
        "cache.system_clearer": {
            "class": "Symfony\\Component\\HttpKernel\\CacheClearer\\Psr6CacheClearer",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "cache.system": {
                        "type": "service",
                        "id": "cache.system"
                    },
                    "cache.validator": {
                        "type": "service",
                        "id": "cache.validator"
                    },
                    "cache.serializer": {
                        "type": "service",
                        "id": "cache.serializer"
                    },
                    "cache.property_info": {
                        "type": "service",
                        "id": "cache.property_info"
                    },
                    "cache.validator_expression_language": {
                        "type": "service",
                        "id": "cache.validator_expression_language"
                    },
                    "cache.webpack_encore": {
                        "type": "service",
                        "id": "cache.webpack_encore"
                    },
                    "cache.security_expression_language": {
                        "type": "service",
                        "id": "cache.security_expression_language"
                    },
                    "cache.security_is_granted_attribute_expression_language": {
                        "type": "service",
                        "id": "cache.security_is_granted_attribute_expression_language"
                    },
                    "cache.security_is_csrf_token_valid_attribute_expression_language": {
                        "type": "service",
                        "id": "cache.security_is_csrf_token_valid_attribute_expression_language"
                    },
                    "api_platform.cache.route_name_resolver": {
                        "type": "service",
                        "id": "api_platform.cache.route_name_resolver"
                    },
                    "api_platform.cache.metadata.resource": {
                        "type": "service",
                        "id": "api_platform.cache.metadata.resource"
                    },
                    "api_platform.cache.metadata.property": {
                        "type": "service",
                        "id": "api_platform.cache.metadata.property"
                    },
                    "api_platform.cache.metadata.resource_collection": {
                        "type": "service",
                        "id": "api_platform.cache.metadata.resource_collection"
                    },
                    "api_platform.cache.openapi": {
                        "type": "service",
                        "id": "api_platform.cache.openapi"
                    },
                    "cache.ux.twig_component": {
                        "type": "service",
                        "id": "cache.ux.twig_component"
                    }
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "cache.pool.clearer",
                    "parameters": []
                }
            ],
            "usages": [
                "cache_pool_clearer.cache_warmer",
                "api_platform.cache_warmer.cache_pool_clearer"
            ]
        },
        "cache.ux.twig_component": {
            "class": "Symfony\\Component\\Cache\\Adapter\\TraceableAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An adapter that collects data about all cache calls.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache.ux.twig_component.recorder_inner"
                },
                {
                    "type": "service",
                    "id": "profiler.is_disabled_state_checker"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": []
                },
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "cache.system_clearer",
                "cache.global_clearer",
                "data_collector.cache",
                "ux.twig_component.component_properties"
            ]
        },
        "cache.ux.twig_component.recorder_inner": {
            "class": "Symfony\\Component\\Cache\\Adapter\\AdapterInterface",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Interface for adapters managing instances of Symfony's CacheItem.",
            "arguments": [
                "LgV1WECdYF",
                0,
                "%container.build_id%",
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/pools\/system",
                {
                    "type": "service",
                    "id": "monolog.logger.cache"
                }
            ],
            "file": null,
            "factory_class": "Symfony\\Component\\Cache\\Adapter\\AbstractAdapter",
            "factory_method": "createSystemCache",
            "tags": [],
            "usages": [
                "cache.ux.twig_component"
            ]
        },
        "cache.validator": {
            "class": "Symfony\\Component\\Cache\\Adapter\\TraceableAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An adapter that collects data about all cache calls.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache.validator.recorder_inner"
                },
                {
                    "type": "service",
                    "id": "profiler.is_disabled_state_checker"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": []
                },
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "cache.system_clearer",
                "cache.global_clearer",
                "validator.mapping.cache.adapter",
                "data_collector.cache"
            ]
        },
        "cache.validator.recorder_inner": {
            "class": "Symfony\\Component\\Cache\\Adapter\\AdapterInterface",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Interface for adapters managing instances of Symfony's CacheItem.",
            "arguments": [
                "7uBxFfSrsM",
                0,
                "%container.build_id%",
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/pools\/system",
                {
                    "type": "service",
                    "id": "monolog.logger.cache"
                }
            ],
            "file": null,
            "factory_class": "Symfony\\Component\\Cache\\Adapter\\AbstractAdapter",
            "factory_method": "createSystemCache",
            "tags": [],
            "usages": [
                "cache.validator"
            ]
        },
        "cache.validator_expression_language": {
            "class": "Symfony\\Component\\Cache\\Adapter\\TraceableAdapter",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An adapter that collects data about all cache calls.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache.validator_expression_language.recorder_inner"
                },
                {
                    "type": "service",
                    "id": "profiler.is_disabled_state_checker"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": []
                },
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "cache.system_clearer",
                "cache.global_clearer",
                "validator.expression_language",
                "data_collector.cache"
            ]
        },
        "cache.validator_expression_language.recorder_inner": {
            "class": "Symfony\\Component\\Cache\\Adapter\\AdapterInterface",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Interface for adapters managing instances of Symfony's CacheItem.",
            "arguments": [
                "f33TnGxpkl",
                0,
                "%container.build_id%",
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/pools\/system",
                {
                    "type": "service",
                    "id": "monolog.logger.cache"
                }
            ],
            "file": null,
            "factory_class": "Symfony\\Component\\Cache\\Adapter\\AbstractAdapter",
            "factory_method": "createSystemCache",
            "tags": [],
            "usages": [
                "cache.validator_expression_language"
            ]
        },
        "cache.webpack_encore": {
            "class": "Symfony\\Component\\Cache\\Adapter\\TraceableAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "An adapter that collects data about all cache calls.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache.webpack_encore.recorder_inner"
                },
                {
                    "type": "service",
                    "id": "profiler.is_disabled_state_checker"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "cache.pool",
                    "parameters": []
                },
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "cache.system_clearer",
                "cache.global_clearer",
                "data_collector.cache",
                "webpack_encore.cache"
            ]
        },
        "cache.webpack_encore.recorder_inner": {
            "class": "Symfony\\Component\\Cache\\Adapter\\AdapterInterface",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Interface for adapters managing instances of Symfony's CacheItem.",
            "arguments": [
                "ihG9FZ0e5c",
                0,
                "%container.build_id%",
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/pools\/system",
                {
                    "type": "service",
                    "id": "monolog.logger.cache"
                }
            ],
            "file": null,
            "factory_class": "Symfony\\Component\\Cache\\Adapter\\AbstractAdapter",
            "factory_method": "createSystemCache",
            "tags": [],
            "usages": [
                "cache.webpack_encore"
            ]
        },
        "cache_clearer": {
            "class": "Symfony\\Component\\HttpKernel\\CacheClearer\\ChainCacheClearer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "ChainCacheClearer.",
            "arguments": [
                []
            ],
            "file": null,
            "tags": [],
            "usages": [
                "console.command.cache_clear"
            ]
        },
        "cache_pool_clearer.cache_warmer": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\CacheWarmer\\CachePoolClearerCacheWarmer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Clears the cache pools when warming up the cache.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache.system_clearer"
                },
                [
                    "cache.validator",
                    "cache.serializer"
                ]
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.cache_warmer",
                    "parameters": {
                        "priority": 64
                    }
                }
            ],
            "usages": []
        },
        "cache_warmer": {
            "class": "Symfony\\Component\\HttpKernel\\CacheWarmer\\CacheWarmerAggregate",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Aggregates several cache warmers into a single one.",
            "arguments": [
                [],
                true,
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/App_KernelDevDebugContainerDeprecations.log"
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                "console.command.cache_warmup"
            ]
        },
        "clock": {
            "class": "Symfony\\Component\\Clock\\Clock",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A global clock.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\Clock\\ClockInterface",
                "Psr\\Clock\\ClockInterface",
                "argument_resolver.datetime",
                "uri_signer"
            ]
        },
        "config.resource.self_checking_resource_checker": {
            "class": "Symfony\\Component\\Config\\Resource\\SelfCheckingResourceChecker",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Resource checker for instances of SelfCheckingResourceInterface.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "config_cache.resource_checker",
                    "parameters": {
                        "priority": -990
                    }
                }
            ],
            "usages": []
        },
        "config_builder.warmer": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\CacheWarmer\\ConfigBuilderCacheWarmer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Generate all config builders.",
            "arguments": [
                {
                    "type": "service",
                    "id": "kernel"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.cache_warmer",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "config_cache_factory": {
            "class": "Symfony\\Component\\Config\\ResourceCheckerConfigCacheFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A ConfigCacheFactory implementation that validates the cache with an arbitrary set of ResourceCheckers.",
            "arguments": [
                []
            ],
            "file": null,
            "tags": [],
            "usages": [
                "router.default"
            ]
        },
        "console.command.about": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\AboutCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A console command to display information about the current installation.",
            "arguments": [],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.about.lazy"
            ]
        },
        "console.command.assets_install": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\AssetsInstallCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Command that places bundle web assets into a given directory.",
            "arguments": [
                {
                    "type": "service",
                    "id": "filesystem"
                },
                "J:\\laragon\\www\\new3"
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.assets_install.lazy"
            ]
        },
        "console.command.cache_clear": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\CacheClearCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Clear and Warmup the cache.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache_clearer"
                },
                {
                    "type": "service",
                    "id": "filesystem"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.cache_clear.lazy"
            ]
        },
        "console.command.cache_pool_clear": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\CachePoolClearCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Clear cache pools.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache.global_clearer"
                },
                [
                    "cache.app",
                    "cache.system",
                    "cache.validator",
                    "cache.serializer",
                    "cache.property_info",
                    "cache.validator_expression_language",
                    "cache.webpack_encore",
                    "cache.security_expression_language",
                    "cache.security_is_granted_attribute_expression_language",
                    "cache.security_is_csrf_token_valid_attribute_expression_language",
                    "cache.doctrine.orm.default.result",
                    "cache.doctrine.orm.default.query",
                    "api_platform.cache.route_name_resolver",
                    "api_platform.cache.metadata.resource",
                    "api_platform.cache.metadata.property",
                    "api_platform.cache.metadata.resource_collection",
                    "api_platform.cache.openapi",
                    "cache.ux.twig_component"
                ]
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.cache_pool_clear.lazy"
            ]
        },
        "console.command.cache_pool_delete": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\CachePoolDeleteCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Delete an item from a cache pool.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache.global_clearer"
                },
                [
                    "cache.app",
                    "cache.system",
                    "cache.validator",
                    "cache.serializer",
                    "cache.property_info",
                    "cache.validator_expression_language",
                    "cache.webpack_encore",
                    "cache.security_expression_language",
                    "cache.security_is_granted_attribute_expression_language",
                    "cache.security_is_csrf_token_valid_attribute_expression_language",
                    "cache.doctrine.orm.default.result",
                    "cache.doctrine.orm.default.query",
                    "api_platform.cache.route_name_resolver",
                    "api_platform.cache.metadata.resource",
                    "api_platform.cache.metadata.property",
                    "api_platform.cache.metadata.resource_collection",
                    "api_platform.cache.openapi",
                    "cache.ux.twig_component"
                ]
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.cache_pool_delete.lazy"
            ]
        },
        "console.command.cache_pool_invalidate_tags": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\CachePoolInvalidateTagsCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.DOrA4Nm"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.cache_pool_invalidate_tags.lazy"
            ]
        },
        "console.command.cache_pool_list": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\CachePoolListCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "List available cache pools.",
            "arguments": [
                [
                    "cache.app",
                    "cache.system",
                    "cache.validator",
                    "cache.serializer",
                    "cache.property_info",
                    "cache.validator_expression_language",
                    "cache.webpack_encore",
                    "cache.security_expression_language",
                    "cache.security_is_granted_attribute_expression_language",
                    "cache.security_is_csrf_token_valid_attribute_expression_language",
                    "cache.doctrine.orm.default.result",
                    "cache.doctrine.orm.default.query",
                    "api_platform.cache.route_name_resolver",
                    "api_platform.cache.metadata.resource",
                    "api_platform.cache.metadata.property",
                    "api_platform.cache.metadata.resource_collection",
                    "api_platform.cache.openapi",
                    "cache.ux.twig_component"
                ]
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.cache_pool_list.lazy"
            ]
        },
        "console.command.cache_pool_prune": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\CachePoolPruneCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Cache pool pruner command.",
            "arguments": [
                []
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.cache_pool_prune.lazy"
            ]
        },
        "console.command.cache_warmup": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\CacheWarmupCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Warmup the cache.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache_warmer"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.cache_warmup.lazy"
            ]
        },
        "console.command.config_debug": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\ConfigDebugCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A console command for dumping available configuration reference.",
            "arguments": [],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.config_debug.lazy"
            ]
        },
        "console.command.config_dump_reference": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\ConfigDumpReferenceCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A console command for dumping available configuration reference.",
            "arguments": [],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.config_dump_reference.lazy"
            ]
        },
        "console.command.container_debug": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\ContainerDebugCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A console command for retrieving information about services.",
            "arguments": [],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.container_debug.lazy"
            ]
        },
        "console.command.container_lint": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\ContainerLintCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.container_lint.lazy"
            ]
        },
        "console.command.debug_autowiring": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\DebugAutowiringCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A console command for autowiring information.",
            "arguments": [
                null,
                {
                    "type": "service",
                    "id": "debug.file_link_formatter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.debug_autowiring.lazy"
            ]
        },
        "console.command.dotenv_debug": {
            "class": "Symfony\\Component\\Dotenv\\Command\\DebugCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A console command to debug current dotenv files with variables and values.",
            "arguments": [
                "dev",
                "J:\\laragon\\www\\new3"
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.dotenv_debug.lazy"
            ]
        },
        "console.command.error_dumper": {
            "class": "Symfony\\Component\\ErrorHandler\\Command\\ErrorDumpCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Dump error pages to plain HTML files that can be directly served by a web server.",
            "arguments": [
                {
                    "type": "service",
                    "id": "filesystem"
                },
                {
                    "type": "service",
                    "id": "twig.error_renderer.html"
                },
                {
                    "type": "service",
                    "id": "webpack_encore.entrypoint_lookup[_default]"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.error_dumper.lazy"
            ]
        },
        "console.command.event_dispatcher_debug": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\EventDispatcherDebugCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A console command for retrieving information about event dispatcher.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.xRvtKlk"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.event_dispatcher_debug.lazy"
            ]
        },
        "console.command.router_debug": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\RouterDebugCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A console command for retrieving information about routes.",
            "arguments": [
                {
                    "type": "service",
                    "id": "router.default"
                },
                {
                    "type": "service",
                    "id": "debug.file_link_formatter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.router_debug.lazy"
            ]
        },
        "console.command.router_match": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\RouterMatchCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A console command to test route matching.",
            "arguments": [
                {
                    "type": "service",
                    "id": "router.default"
                },
                []
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.router_match.lazy"
            ]
        },
        "console.command.secrets_decrypt_to_local": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\SecretsDecryptToLocalCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "secrets.vault"
                },
                {
                    "type": "service",
                    "id": "secrets.local_vault"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.secrets_decrypt_to_local.lazy"
            ]
        },
        "console.command.secrets_encrypt_from_local": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\SecretsEncryptFromLocalCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "secrets.vault"
                },
                {
                    "type": "service",
                    "id": "secrets.local_vault"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.secrets_encrypt_from_local.lazy"
            ]
        },
        "console.command.secrets_generate_key": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\SecretsGenerateKeysCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "secrets.vault"
                },
                {
                    "type": "service",
                    "id": "secrets.local_vault"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.secrets_generate_key.lazy"
            ]
        },
        "console.command.secrets_list": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\SecretsListCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "secrets.vault"
                },
                {
                    "type": "service",
                    "id": "secrets.local_vault"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.secrets_list.lazy"
            ]
        },
        "console.command.secrets_remove": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\SecretsRemoveCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "secrets.vault"
                },
                {
                    "type": "service",
                    "id": "secrets.local_vault"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.secrets_remove.lazy"
            ]
        },
        "console.command.secrets_reveal": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\SecretsRevealCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "secrets.vault"
                },
                {
                    "type": "service",
                    "id": "secrets.local_vault"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.secrets_reveal.lazy"
            ]
        },
        "console.command.secrets_set": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\SecretsSetCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "secrets.vault"
                },
                {
                    "type": "service",
                    "id": "secrets.local_vault"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.secrets_set.lazy"
            ]
        },
        "console.command.serializer_debug": {
            "class": "Symfony\\Component\\Serializer\\Command\\DebugCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A console command to debug Serializer information.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.serializer.mapping.class_metadata_factory"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.serializer_debug.lazy"
            ]
        },
        "console.command.validator_debug": {
            "class": "Symfony\\Component\\Validator\\Command\\DebugCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A console command to debug Validators information.",
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.validator"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.validator_debug.lazy"
            ]
        },
        "console.command.yaml_lint": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Command\\YamlLintCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Validates YAML files syntax and outputs encountered errors.",
            "arguments": [],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".console.command.yaml_lint.lazy"
            ]
        },
        "console.command_loader": {
            "class": "Symfony\\Component\\Console\\CommandLoader\\ContainerCommandLoader",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Loads commands from a PSR-11 container.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.B3te99C"
                },
                {
                    "cart:purge-expired": "App\\Command\\CartPurgeExpiredCommand",
                    "app:carts:cleanup": "App\\Command\\CartsCleanupCommand",
                    "app:cleanup-idempotency-keys": "App\\Command\\CleanupIdempotencyKeysCommand",
                    "app:images:cache:warmup": "App\\Command\\ImagesCacheWarmupCommand",
                    "app:session:clear": "App\\Command\\SessionClearCommand",
                    "app:test-cart-hash": "App\\Command\\TestCartHashCommand",
                    "test:idempotency": "App\\Command\\TestIdempotencyCommand",
                    "app:test-logging": "App\\Command\\TestLoggingCommand",
                    "app:test-remove-direct": "App\\Command\\TestRemoveDirectCommand",
                    "app:test-remove-item": "App\\Command\\TestRemoveItemCommand",
                    "app:user:create": "App\\Command\\UserCreateCommand",
                    "about": "console.command.about",
                    "assets:install": "console.command.assets_install",
                    "cache:clear": "console.command.cache_clear",
                    "cache:pool:clear": "console.command.cache_pool_clear",
                    "cache:pool:prune": "console.command.cache_pool_prune",
                    "cache:pool:invalidate-tags": "console.command.cache_pool_invalidate_tags",
                    "cache:pool:delete": "console.command.cache_pool_delete",
                    "cache:pool:list": "console.command.cache_pool_list",
                    "cache:warmup": "console.command.cache_warmup",
                    "debug:config": "console.command.config_debug",
                    "config:dump-reference": "console.command.config_dump_reference",
                    "debug:container": "console.command.container_debug",
                    "lint:container": "console.command.container_lint",
                    "debug:autowiring": "console.command.debug_autowiring",
                    "debug:dotenv": "console.command.dotenv_debug",
                    "debug:event-dispatcher": "console.command.event_dispatcher_debug",
                    "debug:router": "console.command.router_debug",
                    "router:match": "console.command.router_match",
                    "debug:serializer": "console.command.serializer_debug",
                    "debug:validator": "console.command.validator_debug",
                    "lint:yaml": "console.command.yaml_lint",
                    "secrets:set": "console.command.secrets_set",
                    "secrets:remove": "console.command.secrets_remove",
                    "secrets:generate-keys": "console.command.secrets_generate_key",
                    "secrets:list": "console.command.secrets_list",
                    "secrets:reveal": "console.command.secrets_reveal",
                    "secrets:decrypt-to-local": "console.command.secrets_decrypt_to_local",
                    "secrets:encrypt-from-local": "console.command.secrets_encrypt_from_local",
                    "error:dump": "console.command.error_dumper",
                    "debug:twig": "twig.command.debug",
                    "lint:twig": "twig.command.lint",
                    "debug:firewall": "security.command.debug_firewall",
                    "security:hash-password": "security.command.user_password_hash",
                    "doctrine:database:create": "doctrine.database_create_command",
                    "doctrine:database:drop": "doctrine.database_drop_command",
                    "doctrine:query:sql": "doctrine.query_sql_command",
                    "dbal:run-sql": "Doctrine\\DBAL\\Tools\\Console\\Command\\RunSqlCommand",
                    "doctrine:cache:clear-metadata": "doctrine.cache_clear_metadata_command",
                    "doctrine:cache:clear-query": "doctrine.cache_clear_query_cache_command",
                    "doctrine:cache:clear-result": "doctrine.cache_clear_result_command",
                    "doctrine:cache:clear-collection-region": "doctrine.cache_collection_region_command",
                    "doctrine:schema:create": "doctrine.schema_create_command",
                    "doctrine:schema:drop": "doctrine.schema_drop_command",
                    "doctrine:cache:clear-entity-region": "doctrine.clear_entity_region_command",
                    "doctrine:mapping:info": "doctrine.mapping_info_command",
                    "doctrine:mapping:describe": "doctrine.mapping_describe_command",
                    "doctrine:cache:clear-query-region": "doctrine.clear_query_region_command",
                    "doctrine:query:dql": "doctrine.query_dql_command",
                    "doctrine:schema:update": "doctrine.schema_update_command",
                    "doctrine:schema:validate": "doctrine.schema_validate_command",
                    "doctrine:migrations:diff": "doctrine_migrations.diff_command",
                    "doctrine:migrations:sync-metadata-storage": "doctrine_migrations.sync_metadata_command",
                    "doctrine:migrations:list": "doctrine_migrations.versions_command",
                    "doctrine:migrations:current": "doctrine_migrations.current_command",
                    "doctrine:migrations:dump-schema": "doctrine_migrations.dump_schema_command",
                    "doctrine:migrations:execute": "doctrine_migrations.execute_command",
                    "doctrine:migrations:generate": "doctrine_migrations.generate_command",
                    "doctrine:migrations:latest": "doctrine_migrations.latest_command",
                    "doctrine:migrations:migrate": "doctrine_migrations.migrate_command",
                    "doctrine:migrations:rollup": "doctrine_migrations.rollup_command",
                    "doctrine:migrations:status": "doctrine_migrations.status_command",
                    "doctrine:migrations:up-to-date": "doctrine_migrations.up_to_date_command",
                    "doctrine:migrations:version": "doctrine_migrations.version_command",
                    "api:json-schema:generate": "api_platform.json_schema.json_schema_generate_command",
                    "api:openapi:export": "api_platform.openapi.command",
                    "debug:api-resource": "debug.api_platform.debug_resource.command",
                    "lexik:jwt:check-config": "lexik_jwt_authentication.check_config_command",
                    "lexik:jwt:migrate-config": "lexik_jwt_authentication.migrate_config_command",
                    "lexik:jwt:enable-encryption": "lexik_jwt_authentication.enable_encryption_config_command",
                    "lexik:jwt:generate-token": "lexik_jwt_authentication.generate_token_command",
                    "lexik:jwt:generate-keypair": "lexik_jwt_authentication.generate_keypair_command",
                    "liip:imagine:cache:remove": "liip_imagine.command.cache_remove",
                    "liip:imagine:cache:resolve": "liip_imagine.command.cache_resolve",
                    "server:dump": "var_dumper.command.server_dump",
                    "server:log": "monolog.command.server_log",
                    "debug:twig-component": "ux.twig_component.command.debug",
                    "make:auth": "maker.auto_command.make_auth",
                    "make:command": "maker.auto_command.make_command",
                    "make:twig-component": "maker.auto_command.make_twig_component",
                    "make:controller": "maker.auto_command.make_controller",
                    "make:crud": "maker.auto_command.make_crud",
                    "make:docker:database": "maker.auto_command.make_docker_database",
                    "make:entity": "maker.auto_command.make_entity",
                    "make:fixtures": "maker.auto_command.make_fixtures",
                    "make:form": "maker.auto_command.make_form",
                    "make:listener": "maker.auto_command.make_listener",
                    "make:subscriber": "maker.auto_command.make_listener",
                    "make:message": "maker.auto_command.make_message",
                    "make:messenger-middleware": "maker.auto_command.make_messenger_middleware",
                    "make:registration-form": "maker.auto_command.make_registration_form",
                    "make:reset-password": "maker.auto_command.make_reset_password",
                    "make:schedule": "maker.auto_command.make_schedule",
                    "make:serializer:encoder": "maker.auto_command.make_serializer_encoder",
                    "make:serializer:normalizer": "maker.auto_command.make_serializer_normalizer",
                    "make:twig-extension": "maker.auto_command.make_twig_extension",
                    "make:test": "maker.auto_command.make_test",
                    "make:unit-test": "maker.auto_command.make_test",
                    "make:functional-test": "maker.auto_command.make_test",
                    "make:validator": "maker.auto_command.make_validator",
                    "make:voter": "maker.auto_command.make_voter",
                    "make:user": "maker.auto_command.make_user",
                    "make:migration": "maker.auto_command.make_migration",
                    "make:stimulus-controller": "maker.auto_command.make_stimulus_controller",
                    "make:security:form-login": "maker.auto_command.make_security_form_login",
                    "make:security:custom": "maker.auto_command.make_security_custom",
                    "make:webhook": "maker.auto_command.make_webhook",
                    "make:state-processor": "maker.auto_command.make_state_processor",
                    "make:state-provider": "maker.auto_command.make_state_provider"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "console.error_listener": {
            "class": "Symfony\\Component\\Console\\EventListener\\ErrorListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "monolog.logger.console"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "console"
                    }
                },
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "console.messenger.application": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Console\\Application",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": false,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "kernel"
                }
            ],
            "file": null,
            "calls": [
                "setAutoExit"
            ],
            "tags": [],
            "usages": [
                "console.messenger.execute_command_handler"
            ]
        },
        "console.messenger.execute_command_handler": {
            "class": "Symfony\\Component\\Console\\Messenger\\RunCommandMessageHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "console.messenger.application"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "messenger.message_handler",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "console.suggest_missing_package_subscriber": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\EventListener\\SuggestMissingPackageSubscriber",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Suggests a package, that should be installed (via composer), if the package is missing, and the input command namespace can be mapped to a Symfony bundle.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "console_profiler_listener": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\EventListener\\ConsoleProfilerListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": ".lazy_profiler"
                },
                {
                    "type": "service",
                    "id": ".virtual_request_stack"
                },
                {
                    "type": "service",
                    "id": "debug.stopwatch"
                },
                "%env(not:default:kernel.runtime_mode.web:)%",
                {
                    "type": "service",
                    "id": "router.default"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "container.env": {
            "class": "Symfony\\Component\\String\\LazyString",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A string whose value is computed lazily by a callback.",
            "arguments": [
                {
                    "type": "service",
                    "id": "container.getenv"
                }
            ],
            "file": null,
            "factory_class": null,
            "factory_method": "fromCallable",
            "tags": [],
            "usages": []
        },
        "container.env_var_processor": {
            "class": "Symfony\\Component\\DependencyInjection\\EnvVarProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "service_container"
                },
                []
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.env_var_processor",
                    "parameters": []
                },
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                ".service_locator.pRu6x_4"
            ]
        },
        "container.get_routing_condition_service": {
            "class": "Closure",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                [
                    {
                        "type": "service",
                        "id": ".service_locator.GIuJv7e"
                    },
                    "get"
                ]
            ],
            "file": null,
            "factory_class": "Closure",
            "factory_method": "fromCallable",
            "tags": [
                {
                    "name": "routing.expression_language_function",
                    "parameters": {
                        "function": "service"
                    }
                }
            ],
            "usages": [
                ".service_locator.u.4FiKa"
            ]
        },
        "container.getenv": {
            "class": "Closure",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                [
                    {
                        "type": "service",
                        "id": "service_container"
                    },
                    "getEnv"
                ]
            ],
            "file": null,
            "factory_class": "Closure",
            "factory_method": "fromCallable",
            "tags": [
                {
                    "name": "routing.expression_language_function",
                    "parameters": {
                        "function": "env"
                    }
                }
            ],
            "usages": [
                "secrets.decryption_key",
                ".service_locator.u.4FiKa"
            ]
        },
        "controller.cache_attribute_listener": {
            "class": "Symfony\\Component\\HttpKernel\\EventListener\\CacheAttributeListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Handles HTTP cache headers configured via the Cache attribute.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "controller.is_csrf_token_valid_attribute_listener": {
            "class": "Symfony\\Component\\Security\\Http\\EventListener\\IsCsrfTokenValidAttributeListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Handles the IsCsrfTokenValid attribute on controllers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.csrf.token_manager"
                },
                {
                    "type": "service",
                    "id": "security.is_csrf_token_valid_attribute_expression_language"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "controller.is_granted_attribute_listener": {
            "class": "Symfony\\Component\\Security\\Http\\EventListener\\IsGrantedAttributeListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Handles the IsGranted attribute on controllers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.authorization_checker"
                },
                {
                    "type": "service",
                    "id": "security.is_granted_attribute_expression_language"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "controller.template_attribute_listener": {
            "class": "Symfony\\Bridge\\Twig\\EventListener\\TemplateAttributeListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "twig"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "data_collector.ajax": {
            "class": "Symfony\\Component\\HttpKernel\\DataCollector\\AjaxDataCollector",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "data_collector",
                    "parameters": {
                        "template": "@WebProfiler\/Collector\/ajax.html.twig",
                        "id": "ajax",
                        "priority": 315
                    }
                }
            ],
            "usages": [
                "profiler"
            ]
        },
        "data_collector.cache": {
            "class": "Symfony\\Component\\Cache\\DataCollector\\CacheDataCollector",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "calls": [
                "addInstance",
                "addInstance",
                "addInstance",
                "addInstance",
                "addInstance",
                "addInstance",
                "addInstance",
                "addInstance",
                "addInstance",
                "addInstance",
                "addInstance",
                "addInstance",
                "addInstance",
                "addInstance",
                "addInstance",
                "addInstance",
                "addInstance",
                "addInstance"
            ],
            "tags": [
                {
                    "name": "data_collector",
                    "parameters": {
                        "template": "@WebProfiler\/Collector\/cache.html.twig",
                        "id": "cache",
                        "priority": 275
                    }
                }
            ],
            "usages": [
                "profiler"
            ]
        },
        "data_collector.config": {
            "class": "Symfony\\Component\\HttpKernel\\DataCollector\\ConfigDataCollector",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "calls": [
                "setKernel"
            ],
            "tags": [
                {
                    "name": "data_collector",
                    "parameters": {
                        "template": "@WebProfiler\/Collector\/config.html.twig",
                        "id": "config",
                        "priority": -255
                    }
                }
            ],
            "usages": [
                "profiler"
            ]
        },
        "data_collector.doctrine": {
            "class": "Doctrine\\Bundle\\DoctrineBundle\\DataCollector\\DoctrineDataCollector",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                true,
                {
                    "type": "service",
                    "id": "doctrine.debug_data_holder"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "data_collector",
                    "parameters": {
                        "template": "@Doctrine\/Collector\/db.html.twig",
                        "id": "db",
                        "priority": 250
                    }
                }
            ],
            "usages": [
                "profiler"
            ]
        },
        "data_collector.dump": {
            "class": "Symfony\\Component\\HttpKernel\\DataCollector\\DumpDataCollector",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.stopwatch"
                },
                {
                    "type": "service",
                    "id": "debug.file_link_formatter"
                },
                "UTF-8",
                {
                    "type": "service",
                    "id": ".virtual_request_stack"
                },
                {
                    "type": "service",
                    "id": "var_dumper.server_connection"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "data_collector",
                    "parameters": {
                        "id": "dump",
                        "template": "@Debug\/Profiler\/dump.html.twig",
                        "priority": 240
                    }
                }
            ],
            "usages": [
                "profiler",
                "web_profiler.debug_toolbar"
            ]
        },
        "data_collector.events": {
            "class": "Symfony\\Component\\HttpKernel\\DataCollector\\EventDataCollector",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                [],
                {
                    "type": "service",
                    "id": ".virtual_request_stack"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "data_collector",
                    "parameters": {
                        "template": "@WebProfiler\/Collector\/events.html.twig",
                        "id": "events",
                        "priority": 290
                    }
                }
            ],
            "usages": [
                "profiler"
            ]
        },
        "data_collector.exception": {
            "class": "Symfony\\Component\\HttpKernel\\DataCollector\\ExceptionDataCollector",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "data_collector",
                    "parameters": {
                        "template": "@WebProfiler\/Collector\/exception.html.twig",
                        "id": "exception",
                        "priority": 305
                    }
                }
            ],
            "usages": [
                "profiler"
            ]
        },
        "data_collector.logger": {
            "class": "Symfony\\Component\\HttpKernel\\DataCollector\\LoggerDataCollector",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "monolog.logger.profiler"
                },
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/App_KernelDevDebugContainer",
                {
                    "type": "service",
                    "id": ".virtual_request_stack"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "profiler"
                    }
                },
                {
                    "name": "data_collector",
                    "parameters": {
                        "template": "@WebProfiler\/Collector\/logger.html.twig",
                        "id": "logger",
                        "priority": 300
                    }
                }
            ],
            "usages": [
                "profiler"
            ]
        },
        "data_collector.memory": {
            "class": "Symfony\\Component\\HttpKernel\\DataCollector\\MemoryDataCollector",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "data_collector",
                    "parameters": {
                        "template": "@WebProfiler\/Collector\/memory.html.twig",
                        "id": "memory",
                        "priority": 325
                    }
                }
            ],
            "usages": [
                "profiler"
            ]
        },
        "data_collector.request": {
            "class": "Symfony\\Component\\HttpKernel\\DataCollector\\RequestDataCollector",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": ".virtual_request_stack"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "data_collector",
                    "parameters": {
                        "template": "@WebProfiler\/Collector\/request.html.twig",
                        "id": "request",
                        "priority": 335
                    }
                },
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher",
                "profiler",
                "data_collector.request.session_collector"
            ]
        },
        "data_collector.request.session_collector": {
            "class": "Closure",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                [
                    {
                        "type": "service",
                        "id": "data_collector.request"
                    },
                    "collectSessionUsage"
                ]
            ],
            "file": null,
            "factory_class": "Closure",
            "factory_method": "fromCallable",
            "tags": [],
            "usages": [
                ".service_locator.ECaP3MA"
            ]
        },
        "data_collector.router": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\DataCollector\\RouterDataCollector",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "data_collector",
                    "parameters": {
                        "template": "@WebProfiler\/Collector\/router.html.twig",
                        "id": "router",
                        "priority": 285
                    }
                },
                {
                    "name": "kernel.event_listener",
                    "parameters": {
                        "event": "kernel.controller",
                        "method": "onKernelController"
                    }
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher",
                "profiler"
            ]
        },
        "data_collector.security": {
            "class": "Symfony\\Bundle\\SecurityBundle\\DataCollector\\SecurityDataCollector",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "security.untracked_token_storage"
                },
                {
                    "type": "service",
                    "id": "security.role_hierarchy"
                },
                {
                    "type": "service",
                    "id": "security.logout_url_generator"
                },
                {
                    "type": "service",
                    "id": "debug.security.access.decision_manager"
                },
                {
                    "type": "service",
                    "id": "security.firewall.map"
                },
                {
                    "type": "service",
                    "id": "debug.security.firewall"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "data_collector",
                    "parameters": {
                        "template": "@Security\/Collector\/security.html.twig",
                        "id": "security",
                        "priority": 270
                    }
                }
            ],
            "usages": [
                "profiler"
            ]
        },
        "data_collector.time": {
            "class": "Symfony\\Component\\HttpKernel\\DataCollector\\TimeDataCollector",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "kernel"
                },
                {
                    "type": "service",
                    "id": "debug.stopwatch"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "data_collector",
                    "parameters": {
                        "template": "@WebProfiler\/Collector\/time.html.twig",
                        "id": "time",
                        "priority": 330
                    }
                }
            ],
            "usages": [
                "profiler"
            ]
        },
        "data_collector.twig": {
            "class": "Symfony\\Bridge\\Twig\\DataCollector\\TwigDataCollector",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "twig.profile"
                },
                {
                    "type": "service",
                    "id": "twig"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "data_collector",
                    "parameters": {
                        "template": "@WebProfiler\/Collector\/twig.html.twig",
                        "id": "twig",
                        "priority": 257
                    }
                }
            ],
            "usages": [
                "profiler"
            ]
        },
        "data_collector.validator": {
            "class": "Symfony\\Component\\Validator\\DataCollector\\ValidatorDataCollector",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.validator"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "data_collector",
                    "parameters": {
                        "template": "@WebProfiler\/Collector\/validator.html.twig",
                        "id": "validator",
                        "priority": 320
                    }
                }
            ],
            "usages": [
                "profiler"
            ]
        },
        "debug.api_platform.debug_resource.command": {
            "class": "ApiPlatform\\Symfony\\Bundle\\Command\\DebugResourceCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.metadata.resource.metadata_collection_factory.cached"
                },
                {
                    "type": "service",
                    "id": "debug.var_dumper.cloner"
                },
                {
                    "type": "service",
                    "id": "debug.var_dumper.cli_dumper"
                }
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "debug.argument_resolver": {
            "class": "Symfony\\Component\\HttpKernel\\Controller\\TraceableArgumentResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.argument_resolver.inner"
                },
                {
                    "type": "service",
                    "id": "debug.stopwatch"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.decorator",
                    "parameters": {
                        "id": "argument_resolver",
                        "inner": "debug.argument_resolver.inner"
                    }
                }
            ],
            "usages": [
                "argument_resolver",
                "http_kernel"
            ]
        },
        "debug.argument_resolver.inner": {
            "class": "Symfony\\Component\\HttpKernel\\Controller\\ArgumentResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Responsible for resolving the arguments passed to an action.",
            "arguments": [
                {
                    "type": "service",
                    "id": "argument_metadata_factory"
                },
                [
                    {
                        "type": "service",
                        "id": ".debug.value_resolver.security.user_value_resolver"
                    },
                    {
                        "type": "service",
                        "id": ".debug.value_resolver.security.security_token_value_resolver"
                    },
                    {
                        "type": "service",
                        "id": ".debug.value_resolver.doctrine.orm.entity_value_resolver"
                    },
                    {
                        "type": "service",
                        "id": ".debug.value_resolver.argument_resolver.backed_enum_resolver"
                    },
                    {
                        "type": "service",
                        "id": ".debug.value_resolver.argument_resolver.uid"
                    },
                    {
                        "type": "service",
                        "id": ".debug.value_resolver.argument_resolver.datetime"
                    },
                    {
                        "type": "service",
                        "id": ".debug.value_resolver.argument_resolver.request_attribute"
                    },
                    {
                        "type": "service",
                        "id": ".debug.value_resolver.argument_resolver.request"
                    },
                    {
                        "type": "service",
                        "id": ".debug.value_resolver.argument_resolver.session"
                    },
                    {
                        "type": "service",
                        "id": ".debug.value_resolver.api_platform.argument_resolver.payload"
                    },
                    {
                        "type": "service",
                        "id": ".debug.value_resolver.argument_resolver.service"
                    },
                    {
                        "type": "service",
                        "id": ".debug.value_resolver.argument_resolver.default"
                    },
                    {
                        "type": "service",
                        "id": ".debug.value_resolver.argument_resolver.variadic"
                    },
                    {
                        "type": "service",
                        "id": ".debug.value_resolver.argument_resolver.not_tagged_controller"
                    }
                ],
                {
                    "type": "service",
                    "id": ".service_locator.vsAfDr."
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "debug.argument_resolver"
            ]
        },
        "debug.controller_resolver": {
            "class": "Symfony\\Component\\HttpKernel\\Controller\\TraceableControllerResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.controller_resolver.inner"
                },
                {
                    "type": "service",
                    "id": "debug.stopwatch"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "request"
                    }
                },
                {
                    "name": "container.decorator",
                    "parameters": {
                        "id": "controller_resolver",
                        "inner": "debug.controller_resolver.inner"
                    }
                }
            ],
            "usages": [
                "controller_resolver",
                "http_kernel"
            ]
        },
        "debug.controller_resolver.inner": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Controller\\ControllerResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "service_container"
                },
                {
                    "type": "service",
                    "id": "monolog.logger.request"
                }
            ],
            "file": null,
            "calls": [
                "allowControllers",
                "allowControllers"
            ],
            "tags": [],
            "usages": [
                "debug.controller_resolver"
            ]
        },
        "debug.debug_handlers_listener": {
            "class": "Symfony\\Component\\HttpKernel\\EventListener\\DebugHandlersListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Sets an exception handler.",
            "arguments": [
                null,
                "%env(bool:default::key:web:default:kernel.runtime_mode:)%"
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "debug.debug_logger_configurator": {
            "class": "Symfony\\Component\\HttpKernel\\Log\\DebugLoggerConfigurator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.log_processor"
                },
                "%env(bool:default::key:web:default:kernel.runtime_mode:)%"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "monolog.logger.idempotency",
                "monolog.logger",
                "monolog.logger.request",
                "monolog.logger.console",
                "monolog.logger.cache",
                "monolog.logger.php",
                "monolog.logger.event",
                "monolog.logger.router",
                "monolog.logger.lock",
                "monolog.logger.profiler",
                "monolog.logger.security",
                "monolog.logger.doctrine",
                "monolog.logger.debug",
                "monolog.logger.deprecation"
            ]
        },
        "debug.dump_listener": {
            "class": "Symfony\\Component\\HttpKernel\\EventListener\\DumpListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Configures dump() handler.",
            "arguments": [
                {
                    "type": "service",
                    "id": "var_dumper.cloner"
                },
                {
                    "type": "service",
                    "id": "var_dumper.contextualized_cli_dumper"
                },
                {
                    "type": "service",
                    "id": "var_dumper.server_connection"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "debug.error_handler_configurator": {
            "class": "Symfony\\Component\\HttpKernel\\Debug\\ErrorHandlerConfigurator",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Configures the error handler.",
            "arguments": [
                {
                    "type": "service",
                    "id": "monolog.logger.php"
                },
                null,
                -1,
                true,
                true,
                {
                    "type": "service",
                    "id": "monolog.logger.deprecation"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "php"
                    }
                }
            ],
            "usages": []
        },
        "debug.event_dispatcher": {
            "class": "Symfony\\Component\\HttpKernel\\Debug\\TraceableEventDispatcher",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Collects some data about event listeners.",
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.event_dispatcher.inner"
                },
                {
                    "type": "service",
                    "id": "debug.stopwatch"
                },
                {
                    "type": "service",
                    "id": "monolog.logger.event"
                },
                {
                    "type": "service",
                    "id": ".virtual_request_stack"
                },
                {
                    "type": "service",
                    "id": "profiler.is_disabled_state_checker"
                }
            ],
            "file": null,
            "calls": [
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener"
            ],
            "tags": [
                {
                    "name": "container.hot_path",
                    "parameters": []
                },
                {
                    "name": "event_dispatcher.dispatcher",
                    "parameters": {
                        "name": "event_dispatcher"
                    }
                },
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "event"
                    }
                },
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                },
                {
                    "name": "container.decorator",
                    "parameters": {
                        "id": "event_dispatcher",
                        "inner": "debug.event_dispatcher.inner"
                    }
                }
            ],
            "usages": [
                "Symfony\\Component\\EventDispatcher\\EventDispatcherInterface",
                "Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface",
                "Psr\\EventDispatcher\\EventDispatcherInterface",
                "event_dispatcher",
                "App\\Service\\CartManager",
                "http_kernel",
                "services_resetter",
                "fragment.renderer.inline",
                "webpack_encore.tag_renderer",
                "security.context_listener",
                "debug.security.firewall",
                "maker.event_registry",
                "lexik_jwt_authentication.jwt_manager",
                "lexik_jwt_authentication.handler.authentication_success",
                "lexik_jwt_authentication.handler.authentication_failure",
                "liip_imagine.cache.manager",
                "ux.twig_component.component_factory",
                "ux.twig_component.component_renderer",
                ".debug.security.voter.security.access.authenticated_voter",
                ".debug.security.voter.security.access.simple_role_voter",
                ".debug.security.voter.security.access.expression_voter",
                ".debug.security.voter.security.access.closure_voter",
                ".service_locator.xRvtKlk"
            ]
        },
        "debug.event_dispatcher.inner": {
            "class": "Symfony\\Component\\EventDispatcher\\EventDispatcher",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The EventDispatcherInterface is the central point of Symfony's event listener system.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "debug.file_link_formatter": {
            "class": "Symfony\\Component\\ErrorHandler\\ErrorRenderer\\FileLinkFormatter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Formats debug file links.",
            "arguments": [
                "%env(default::SYMFONY_IDE)%",
                {
                    "type": "service",
                    "id": "request_stack"
                },
                "J:\\laragon\\www\\new3",
                {
                    "type": "service",
                    "id": "debug.file_link_formatter.url_format"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\ErrorHandler\\ErrorRenderer\\FileLinkFormatter",
                ".31_SourceContextProvider~4VeSJ51",
                ".30_SourceContextProvider~4VeSJ51",
                ".24_HtmlDumper~4VeSJ51",
                "error_handler.error_renderer.html",
                "console.command.debug_autowiring",
                "console.command.router_debug",
                "twig.command.debug",
                "maker.file_link_formatter",
                "twig.extension.code",
                "data_collector.dump",
                "var_dumper.html_dumper",
                "var_dumper.contextualized_cli_dumper.inner"
            ]
        },
        "debug.file_link_formatter.url_format": {
            "class": "string",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "router.default"
                },
                "_profiler_open_file",
                "?file=%%f&line=%%l#line%%l"
            ],
            "file": null,
            "factory_class": "Symfony\\Component\\ErrorHandler\\ErrorRenderer\\FileLinkFormatter",
            "factory_method": "generateUrlFormat",
            "tags": [],
            "usages": [
                "debug.file_link_formatter"
            ]
        },
        "debug.log_processor": {
            "class": "Symfony\\Bridge\\Monolog\\Processor\\DebugProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": ".virtual_request_stack"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "debug.debug_logger_configurator"
            ]
        },
        "debug.security.access.decision_manager": {
            "class": "Symfony\\Component\\Security\\Core\\Authorization\\TraceableAccessDecisionManager",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Decorates the original AccessDecisionManager class to log information about the security voters and the decisions made by them.",
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.security.access.decision_manager.inner"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset",
                        "on_invalid": "ignore"
                    }
                },
                {
                    "name": "container.decorator",
                    "parameters": {
                        "id": "security.access.decision_manager",
                        "inner": "debug.security.access.decision_manager.inner"
                    }
                }
            ],
            "usages": [
                "Symfony\\Component\\Security\\Core\\Authorization\\AccessDecisionManagerInterface",
                "security.access.decision_manager",
                "services_resetter",
                "security.authorization_checker",
                "security.access_listener",
                "data_collector.security",
                "debug.security.voter.vote_listener"
            ]
        },
        "debug.security.access.decision_manager.inner": {
            "class": "Symfony\\Component\\Security\\Core\\Authorization\\AccessDecisionManager",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "AccessDecisionManager is the base class for all access decision managers that use decision voters.",
            "arguments": [
                [
                    {
                        "type": "service",
                        "id": ".debug.security.voter.security.access.authenticated_voter"
                    },
                    {
                        "type": "service",
                        "id": ".debug.security.voter.security.access.simple_role_voter"
                    },
                    {
                        "type": "service",
                        "id": ".debug.security.voter.security.access.expression_voter"
                    },
                    {
                        "type": "service",
                        "id": ".debug.security.voter.security.access.closure_voter"
                    }
                ],
                {
                    "type": "service",
                    "id": ".73_AffirmativeStrategy~4VeSJ51"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "debug.security.access.decision_manager"
            ]
        },
        "debug.security.authenticator.form_login.main": {
            "class": "Symfony\\Component\\Security\\Http\\Authenticator\\Debug\\TraceableAuthenticator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Collects info about an authenticator for debugging purposes.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.authenticator.form_login.main"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "security.command.debug_firewall",
                "security.authenticator.manager.main"
            ]
        },
        "debug.security.event_dispatcher.main": {
            "class": "Symfony\\Component\\EventDispatcher\\Debug\\TraceableEventDispatcher",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Collects some data about event listeners.",
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.security.event_dispatcher.main.inner"
                },
                {
                    "type": "service",
                    "id": "debug.stopwatch"
                },
                {
                    "type": "service",
                    "id": "monolog.logger.event"
                },
                {
                    "type": "service",
                    "id": "request_stack"
                }
            ],
            "file": null,
            "calls": [
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener",
                "addListener"
            ],
            "tags": [
                {
                    "name": "event_dispatcher.dispatcher",
                    "parameters": {
                        "name": "security.event_dispatcher.main"
                    }
                },
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "event"
                    }
                },
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                },
                {
                    "name": "container.decorator",
                    "parameters": {
                        "id": "security.event_dispatcher.main",
                        "inner": "debug.security.event_dispatcher.main.inner"
                    }
                }
            ],
            "usages": [
                "security.event_dispatcher.main",
                "services_resetter",
                "security.firewall.event_dispatcher_locator",
                "security.context_listener.0",
                "security.logout_listener.main",
                "security.authenticator.manager.main",
                ".service_locator.xRvtKlk"
            ]
        },
        "debug.security.event_dispatcher.main.inner": {
            "class": "Symfony\\Component\\EventDispatcher\\EventDispatcher",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The EventDispatcherInterface is the central point of Symfony's event listener system.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "debug.security.event_dispatcher.main"
            ]
        },
        "debug.security.firewall": {
            "class": "Symfony\\Bundle\\SecurityBundle\\Debug\\TraceableFirewallListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Firewall collecting called security listeners and authenticators.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.firewall.map"
                },
                {
                    "type": "service",
                    "id": "debug.event_dispatcher"
                },
                {
                    "type": "service",
                    "id": "security.logout_url_generator"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                },
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "Symfony\\Component\\Security\\Http\\Firewall",
                "security.firewall",
                "services_resetter",
                "debug.event_dispatcher",
                "data_collector.security"
            ]
        },
        "debug.security.firewall.authenticator.main": {
            "class": "Symfony\\Component\\Security\\Http\\Authenticator\\Debug\\TraceableAuthenticatorManagerListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Decorates the AuthenticatorManagerListener to collect information about security authenticators.",
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.security.firewall.authenticator.main.inner"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                },
                {
                    "name": "container.decorator",
                    "parameters": {
                        "id": "security.firewall.authenticator.main",
                        "inner": "debug.security.firewall.authenticator.main.inner"
                    }
                }
            ],
            "usages": [
                "security.firewall.authenticator.main",
                "services_resetter",
                "security.firewall.map.context.main"
            ]
        },
        "debug.security.firewall.authenticator.main.inner": {
            "class": "Symfony\\Component\\Security\\Http\\Firewall\\AuthenticatorManagerListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Firewall authentication listener that delegates to the authenticator system.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.authenticator.manager.main"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "debug.security.firewall.authenticator.main"
            ]
        },
        "debug.security.voter.vote_listener": {
            "class": "Symfony\\Bundle\\SecurityBundle\\EventListener\\VoteListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Listen to vote events from traceable voters.",
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.security.access.decision_manager"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "debug.serializer": {
            "class": "Symfony\\Component\\Serializer\\Debug\\TraceableSerializer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Collects some data about serialization.",
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.serializer.inner"
                },
                {
                    "type": "service",
                    "id": "serializer.data_collector"
                },
                "default"
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.decorator",
                    "parameters": {
                        "id": "serializer",
                        "inner": "debug.serializer.inner"
                    }
                }
            ],
            "usages": [
                "Symfony\\Component\\Serializer\\SerializerInterface",
                "Symfony\\Component\\Serializer\\Normalizer\\NormalizerInterface",
                "Symfony\\Component\\Serializer\\Normalizer\\DenormalizerInterface",
                "Symfony\\Component\\Serializer\\Encoder\\EncoderInterface",
                "Symfony\\Component\\Serializer\\Encoder\\DecoderInterface",
                "api_platform.serializer",
                "serializer",
                "argument_resolver.request_payload",
                "error_handler.error_renderer.serializer",
                "twig.runtime.serializer",
                "api_platform.serializer_locator",
                "api_platform.state_processor.serialize",
                "api_platform.openapi.command",
                "api_platform.swagger_ui.processor",
                "api_platform.jsonld.action.context",
                "ux.live_component.component_hydrator",
                ".service_locator.ZyP9f7K",
                "api_platform.state_provider.access_checker.post_deserialize.inner"
            ]
        },
        "debug.serializer.inner": {
            "class": "Symfony\\Component\\Serializer\\Serializer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Serializer serializes and deserializes data.",
            "arguments": [
                [
                    {
                        "type": "service",
                        "id": ".36_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".37_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".38_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".39_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".40_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".41_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".42_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".43_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".44_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".45_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".46_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".47_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".48_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".49_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".50_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".51_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".52_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".53_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".54_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".55_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".56_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".57_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".58_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".59_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".60_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".61_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".62_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".63_TraceableNormalizer~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".64_TraceableNormalizer~4VeSJ51"
                    }
                ],
                [
                    {
                        "type": "service",
                        "id": ".65_TraceableEncoder~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".66_TraceableEncoder~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".67_TraceableEncoder~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".68_TraceableEncoder~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".69_TraceableEncoder~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".70_TraceableEncoder~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".71_TraceableEncoder~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".72_TraceableEncoder~4VeSJ51"
                    }
                ],
                {
                    "hydra_prefix": false
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "debug.serializer"
            ]
        },
        "debug.stopwatch": {
            "class": "Symfony\\Component\\Stopwatch\\Stopwatch",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Stopwatch provides a way to profile code.",
            "arguments": [
                true
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "Symfony\\Component\\Stopwatch\\Stopwatch",
                "services_resetter",
                "debug.event_dispatcher",
                "debug.controller_resolver",
                "debug.argument_resolver",
                "console_profiler_listener",
                "data_collector.time",
                "twig.extension.profiler",
                "twig.extension.debug.stopwatch",
                "data_collector.dump",
                "debug.security.event_dispatcher.main",
                ".debug.value_resolver.security.user_value_resolver",
                ".debug.value_resolver.security.security_token_value_resolver",
                ".debug.value_resolver.doctrine.orm.entity_value_resolver",
                ".debug.value_resolver.argument_resolver.backed_enum_resolver",
                ".debug.value_resolver.argument_resolver.uid",
                ".debug.value_resolver.argument_resolver.datetime",
                ".debug.value_resolver.argument_resolver.request_attribute",
                ".debug.value_resolver.argument_resolver.request",
                ".debug.value_resolver.argument_resolver.session",
                ".debug.value_resolver.api_platform.argument_resolver.payload",
                ".debug.value_resolver.argument_resolver.service",
                ".debug.value_resolver.argument_resolver.default",
                ".debug.value_resolver.argument_resolver.variadic",
                ".debug.value_resolver.argument_resolver.not_tagged_controller",
                ".debug.value_resolver.argument_resolver.request_payload",
                ".debug.value_resolver.argument_resolver.query_parameter_value_resolver",
                "doctrine.dbal.debug_middleware.default"
            ]
        },
        "debug.validator": {
            "class": "Symfony\\Component\\Validator\\Validator\\TraceableValidator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Collects some data about validator calls.",
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.validator.inner"
                },
                {
                    "type": "service",
                    "id": "profiler.is_disabled_state_checker"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                },
                {
                    "name": "container.decorator",
                    "parameters": {
                        "id": "validator",
                        "inner": "debug.validator.inner"
                    }
                }
            ],
            "usages": [
                "Symfony\\Component\\Validator\\Validator\\ValidatorInterface",
                "validator.mapping.class_metadata_factory",
                "validator",
                "argument_resolver.request_payload",
                "services_resetter",
                "console.command.validator_debug",
                "data_collector.validator",
                "api_platform.metadata.property.metadata_factory.validator",
                "api_platform.validator",
                "api_platform.state_provider.parameter_validator",
                ".service_locator.lZH22eH"
            ]
        },
        "debug.validator.inner": {
            "class": "Symfony\\Component\\Validator\\Validator\\ValidatorInterface",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Validates PHP values against constraints.",
            "arguments": [],
            "file": null,
            "factory_service": "validator.builder",
            "factory_method": "getValidator",
            "tags": [],
            "usages": [
                "debug.validator"
            ]
        },
        "debug.var_dumper.cli_dumper": {
            "class": "Symfony\\Component\\VarDumper\\Dumper\\CliDumper",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "CliDumper dumps variables for command line output.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "debug.api_platform.debug_resource.command"
            ]
        },
        "debug.var_dumper.cloner": {
            "class": "Symfony\\Component\\VarDumper\\Cloner\\VarCloner",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "debug.api_platform.debug_resource.command"
            ]
        },
        "dependency_injection.config.container_parameters_resource_checker": {
            "class": "Symfony\\Component\\DependencyInjection\\Config\\ContainerParametersResourceChecker",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "service_container"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "config_cache.resource_checker",
                    "parameters": {
                        "priority": -980
                    }
                }
            ],
            "usages": []
        },
        "disallow_search_engine_index_response_listener": {
            "class": "Symfony\\Component\\HttpKernel\\EventListener\\DisallowRobotsIndexingListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Ensures that the application is not indexed by search engines.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "doctrine": {
            "class": "Doctrine\\Bundle\\DoctrineBundle\\Registry",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "References all Doctrine connections and entity managers in a given Container.",
            "arguments": [
                {
                    "type": "service",
                    "id": "service_container"
                },
                "%doctrine.connections%",
                "%doctrine.entity_managers%",
                "default",
                "default"
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "Doctrine\\Persistence\\ManagerRegistry",
                "Doctrine\\Common\\Persistence\\ManagerRegistry",
                "App\\Controller\\Catalog\\DeliveryPageController",
                "App\\Repository\\AttributeGroupRepository",
                "App\\Repository\\AttributeRepository",
                "App\\Repository\\CarouselRepository",
                "App\\Repository\\CartIdempotencyRepository",
                "App\\Repository\\CartItemRepository",
                "App\\Repository\\CartRepository",
                "App\\Repository\\CategoryRepository",
                "App\\Repository\\CityModalRepository",
                "App\\Repository\\DeliveryTypeRepository",
                "App\\Repository\\FiasRepository",
                "App\\Repository\\ManufacturerRepository",
                "App\\Repository\\OptionRepository",
                "App\\Repository\\OptionValueRepository",
                "App\\Repository\\OrderCustomerRepository",
                "App\\Repository\\OrderDeliveryRepository",
                "App\\Repository\\OrderProductOptionsRepository",
                "App\\Repository\\OrderProductsRepository",
                "App\\Repository\\OrderRepository",
                "App\\Repository\\OrderStatusRepository",
                "App\\Repository\\ProductAttributeAssignmentRepository",
                "App\\Repository\\ProductImageRepository",
                "App\\Repository\\ProductOptionValueAssignmentRepository",
                "App\\Repository\\ProductRepository",
                "App\\Repository\\ProductSeoRepository",
                "App\\Repository\\ProductToCategoryRepository",
                "App\\Repository\\PvzPriceRepository",
                "App\\Repository\\SettingsRepository",
                "App\\Repository\\UserRepository",
                "services_resetter",
                "security.user.provider.concrete.app_user_provider",
                "data_collector.doctrine",
                "doctrine.database_create_command",
                "doctrine.database_drop_command",
                "Doctrine\\Bundle\\DoctrineBundle\\Controller\\ProfilerController",
                "doctrine.orm.proxy_cache_warmer",
                "form.type_guesser.doctrine",
                "form.type.entity",
                "doctrine.orm.validator.unique",
                "doctrine.orm.validator_initializer",
                "doctrine.orm.command.entity_manager_provider",
                "doctrine.orm.entity_value_resolver",
                "doctrine.migrations.entity_manager_registry_loader",
                "doctrine.migrations.connection_registry_loader",
                "maker.doctrine_helper",
                "api_platform.doctrine.orm.state.remove_processor",
                "api_platform.doctrine.orm.state.persist_processor",
                "api_platform.doctrine.orm.order_filter.instance",
                "api_platform.doctrine.orm.range_filter.instance",
                "api_platform.doctrine.orm.date_filter.instance",
                "api_platform.doctrine.orm.backed_enum_filter.instance",
                "api_platform.doctrine.orm.boolean_filter.instance",
                "api_platform.doctrine.orm.numeric_filter.instance",
                "api_platform.doctrine.orm.exists_filter.instance",
                "api_platform.doctrine.orm.query_extension.pagination",
                "api_platform.doctrine.orm.extension.parameter_extension",
                "api_platform.doctrine.orm.metadata.property.metadata_factory",
                "api_platform.doctrine.orm.state.collection_provider",
                "api_platform.doctrine.orm.state.item_provider",
                "api_platform.doctrine.orm.search_filter.instance",
                "api_platform.doctrine.orm.metadata.resource.metadata_collection_factory",
                "api_platform.doctrine.orm.metadata.resource.link_factory",
                "api_platform.doctrine.orm.links_handler",
                "turbo.id_accessor",
                "annotated_app_entity_carousel_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_city_api_platform_doctrine_orm_filter_order_filter",
                "annotated_app_entity_city_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_fias_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_option_value_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_order_api_platform_doctrine_orm_filter_order_filter",
                "annotated_app_entity_order_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_product_api_platform_doctrine_orm_filter_order_filter",
                "annotated_app_entity_product_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_product_api_platform_doctrine_orm_filter_boolean_filter",
                "annotated_app_entity_product_api_platform_doctrine_orm_filter_range_filter",
                "annotated_app_entity_product_to_category_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_pvz_points_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_pvz_price_api_platform_doctrine_orm_filter_search_filter",
                "ux.live_component.doctrine_entity_hydration_extension",
                ".service_locator.LO52hLF"
            ]
        },
        "doctrine.cache_clear_metadata_command": {
            "class": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\MetadataCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Command to clear the metadata cache of the various cache drivers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.command.entity_manager_provider"
                }
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:cache:clear-metadata"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "doctrine.cache_clear_query_cache_command": {
            "class": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\QueryCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Command to clear the query cache of the various cache drivers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.command.entity_manager_provider"
                }
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:cache:clear-query"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "doctrine.cache_clear_result_command": {
            "class": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\ResultCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Command to clear the result cache of the various cache drivers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.command.entity_manager_provider"
                }
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:cache:clear-result"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "doctrine.cache_collection_region_command": {
            "class": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\CollectionRegionCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Command to clear a collection cache region.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.command.entity_manager_provider"
                }
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:cache:clear-collection-region"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "doctrine.clear_entity_region_command": {
            "class": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\EntityRegionCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Command to clear a entity cache region.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.command.entity_manager_provider"
                }
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:cache:clear-entity-region"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "doctrine.clear_query_region_command": {
            "class": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\QueryRegionCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Command to clear a query cache region.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.command.entity_manager_provider"
                }
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:cache:clear-query-region"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "doctrine.database_create_command": {
            "class": "Doctrine\\Bundle\\DoctrineBundle\\Command\\CreateDatabaseDoctrineCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Database tool allows you to easily create your configured databases.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:database:create"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "doctrine.database_drop_command": {
            "class": "Doctrine\\Bundle\\DoctrineBundle\\Command\\DropDatabaseDoctrineCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Database tool allows you to easily drop your configured databases.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:database:drop"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "doctrine.dbal.connection": {
            "class": "Doctrine\\DBAL\\Connection",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A database abstraction-level connection that implements features like events, transaction isolation levels, configuration, emulated transaction nesting, lazy connecting and more.",
            "arguments": [],
            "file": null,
            "factory_service": "doctrine.dbal.connection_factory",
            "factory_method": "createConnection",
            "tags": [],
            "usages": []
        },
        "doctrine.dbal.connection.configuration": {
            "class": "Doctrine\\DBAL\\Configuration",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Configuration container for the Doctrine DBAL.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "doctrine.dbal.connection.event_manager": {
            "class": "Symfony\\Bridge\\Doctrine\\ContainerAwareEventManager",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Allows lazy loading of listener and subscriber services.",
            "arguments": [
                {
                    "type": "service",
                    "id": "service_container"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "doctrine.dbal.connection_expiries": {
            "class": "ArrayObject",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "doctrine.dbal.idle_connection_listener",
                "doctrine.dbal.idle_connection_middleware.default"
            ]
        },
        "doctrine.dbal.connection_factory": {
            "class": "Doctrine\\Bundle\\DoctrineBundle\\ConnectionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "@phpstan-import-type Params from DriverManager",
            "arguments": [
                "%doctrine.dbal.connection_factory.types%",
                {
                    "type": "service",
                    "id": "doctrine.dbal.connection_factory.dsn_parser"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "doctrine.dbal.default_connection"
            ]
        },
        "doctrine.dbal.connection_factory.dsn_parser": {
            "class": "Doctrine\\DBAL\\Tools\\DsnParser",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "@phpstan-import-type Params from DriverManager",
            "arguments": [
                {
                    "db2": "ibm_db2",
                    "mssql": "pdo_sqlsrv",
                    "mysql": "pdo_mysql",
                    "mysql2": "pdo_mysql",
                    "postgres": "pdo_pgsql",
                    "postgresql": "pdo_pgsql",
                    "pgsql": "pdo_pgsql",
                    "sqlite": "pdo_sqlite",
                    "sqlite3": "pdo_sqlite"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "doctrine.dbal.connection_factory"
            ]
        },
        "doctrine.dbal.debug_middleware": {
            "class": "Doctrine\\Bundle\\DoctrineBundle\\Middleware\\DebugMiddleware",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.debug_data_holder"
                },
                {
                    "type": "service",
                    "id": "debug.stopwatch"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.middleware",
                    "parameters": {
                        "connection": "default",
                        "priority": 10
                    }
                }
            ],
            "usages": []
        },
        "doctrine.dbal.debug_middleware.default": {
            "class": "Doctrine\\Bundle\\DoctrineBundle\\Middleware\\DebugMiddleware",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.debug_data_holder"
                },
                {
                    "type": "service",
                    "id": "debug.stopwatch"
                }
            ],
            "file": null,
            "calls": [
                "setConnectionName"
            ],
            "tags": [],
            "usages": [
                "doctrine.dbal.default_connection.configuration"
            ]
        },
        "doctrine.dbal.default_connection": {
            "class": "Doctrine\\DBAL\\Connection",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A database abstraction-level connection that implements features like events, transaction isolation levels, configuration, emulated transaction nesting, lazy connecting and more.",
            "arguments": [
                {
                    "url": "%env(resolve:DATABASE_URL)%",
                    "use_savepoints": true,
                    "driver": "pdo_mysql",
                    "idle_connection_ttl": 600,
                    "host": "localhost",
                    "port": null,
                    "user": "root",
                    "password": null,
                    "driverOptions": {
                        "1002": "SET time_zone = '+00:00'"
                    },
                    "defaultTableOptions": []
                },
                {
                    "type": "service",
                    "id": "doctrine.dbal.default_connection.configuration"
                },
                {
                    "type": "service",
                    "id": "doctrine.dbal.default_connection.event_manager"
                },
                []
            ],
            "file": null,
            "factory_service": "doctrine.dbal.connection_factory",
            "factory_method": "createConnection",
            "calls": [
                "setNestTransactionsWithSavepoints"
            ],
            "tags": [],
            "usages": [
                "cache.default_doctrine_dbal_provider",
                "Doctrine\\DBAL\\Connection",
                "database_connection",
                ".Doctrine\\DBAL\\Connection $default.connection",
                "Doctrine\\DBAL\\Connection $defaultConnection",
                "App\\Command\\CleanupIdempotencyKeysCommand",
                "doctrine.orm.default_entity_manager"
            ]
        },
        "doctrine.dbal.default_connection.configuration": {
            "class": "Doctrine\\DBAL\\Configuration",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Configuration container for the Doctrine DBAL.",
            "arguments": [],
            "file": null,
            "calls": [
                "setSchemaManagerFactory",
                "setSchemaAssetsFilter",
                "setMiddlewares"
            ],
            "tags": [],
            "usages": [
                "doctrine.dbal.default_connection"
            ]
        },
        "doctrine.dbal.default_connection.event_manager": {
            "class": "Symfony\\Bridge\\Doctrine\\ContainerAwareEventManager",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Allows lazy loading of listener and subscriber services.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.q6F1VxP"
                },
                [
                    [
                        [
                            "prePersist"
                        ],
                        "App\\Doctrine\\Listener\\ProductImageListener"
                    ],
                    [
                        [
                            "preUpdate"
                        ],
                        "App\\Doctrine\\Listener\\ProductImageListener"
                    ],
                    [
                        [
                            "prePersist"
                        ],
                        "App\\Doctrine\\Listener\\ProductToCategoryListener"
                    ],
                    [
                        [
                            "preUpdate"
                        ],
                        "App\\Doctrine\\Listener\\ProductToCategoryListener"
                    ],
                    [
                        [
                            "postGenerateSchema"
                        ],
                        "doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener"
                    ],
                    [
                        [
                            "postGenerateSchema"
                        ],
                        "doctrine.orm.listeners.doctrine_token_provider_schema_listener"
                    ],
                    [
                        [
                            "postGenerateSchema"
                        ],
                        "doctrine.orm.listeners.pdo_session_handler_schema_listener"
                    ],
                    [
                        [
                            "postGenerateSchema"
                        ],
                        "doctrine.orm.listeners.lock_store_schema_listener"
                    ],
                    [
                        [
                            "loadClassMetadata"
                        ],
                        "doctrine.orm.default_listeners.attach_entity_listeners"
                    ],
                    [
                        [
                            "onFlush"
                        ],
                        "turbo.doctrine.event_listener"
                    ],
                    [
                        [
                            "postFlush"
                        ],
                        "turbo.doctrine.event_listener"
                    ]
                ]
            ],
            "file": null,
            "tags": [],
            "usages": [
                "doctrine.dbal.event_manager",
                "doctrine.orm.default_entity_manager.event_manager",
                "doctrine.dbal.default_connection",
                "doctrine.orm.default_entity_manager"
            ]
        },
        "doctrine.dbal.default_schema_asset_filter_manager": {
            "class": "Doctrine\\Bundle\\DoctrineBundle\\Dbal\\SchemaAssetsFilterManager",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Manages schema filters passed to Connection::setSchemaAssetsFilter()",
            "arguments": [
                [
                    {
                        "type": "service",
                        "id": "doctrine_migrations.schema_filter_listener"
                    }
                ]
            ],
            "file": null,
            "tags": [],
            "usages": [
                "doctrine.dbal.default_connection.configuration"
            ]
        },
        "doctrine.dbal.default_schema_manager_factory": {
            "class": "Doctrine\\DBAL\\Schema\\DefaultSchemaManagerFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A schema manager factory that returns the default schema manager for the given platform.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "doctrine.dbal.idle_connection_listener": {
            "class": "Symfony\\Bridge\\Doctrine\\Middleware\\IdleConnection\\Listener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.dbal.connection_expiries"
                },
                {
                    "type": "service",
                    "id": "service_container"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "doctrine.dbal.idle_connection_middleware": {
            "class": "Doctrine\\Bundle\\DoctrineBundle\\Middleware\\IdleConnectionMiddleware",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.dbal.connection_expiries"
                },
                {
                    "default": 600
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.middleware",
                    "parameters": {
                        "connection": "default",
                        "priority": 10
                    }
                }
            ],
            "usages": []
        },
        "doctrine.dbal.idle_connection_middleware.default": {
            "class": "Doctrine\\Bundle\\DoctrineBundle\\Middleware\\IdleConnectionMiddleware",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.dbal.connection_expiries"
                },
                {
                    "default": 600
                }
            ],
            "file": null,
            "calls": [
                "setConnectionName"
            ],
            "tags": [],
            "usages": [
                "doctrine.dbal.default_connection.configuration"
            ]
        },
        "doctrine.dbal.legacy_schema_manager_factory": {
            "class": "Doctrine\\DBAL\\Schema\\LegacySchemaManagerFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "@internal Will be removed in 4.0.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "doctrine.dbal.default_connection.configuration"
            ]
        },
        "doctrine.dbal.logging_middleware": {
            "class": "Doctrine\\DBAL\\Logging\\Middleware",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "monolog.logger.doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "doctrine"
                    }
                },
                {
                    "name": "doctrine.middleware",
                    "parameters": {
                        "connection": "default",
                        "priority": 10
                    }
                }
            ],
            "usages": []
        },
        "doctrine.dbal.logging_middleware.default": {
            "class": "Doctrine\\DBAL\\Logging\\Middleware",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "monolog.logger.doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "doctrine"
                    }
                }
            ],
            "usages": [
                "doctrine.dbal.default_connection.configuration"
            ]
        },
        "doctrine.dbal.schema_asset_filter_manager": {
            "class": "Doctrine\\Bundle\\DoctrineBundle\\Dbal\\SchemaAssetsFilterManager",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Manages schema filters passed to Connection::setSchemaAssetsFilter()",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "doctrine.dbal.well_known_schema_asset_filter": {
            "class": "Doctrine\\Bundle\\DoctrineBundle\\Dbal\\BlacklistSchemaAssetFilter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "@deprecated Implement your own include\/exclude mechanism",
            "arguments": [
                []
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "doctrine.debug_data_holder": {
            "class": "Doctrine\\Bundle\\DoctrineBundle\\Middleware\\BacktraceDebugDataHolder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                [
                    "default"
                ]
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "data_collector.doctrine",
                "doctrine.dbal.debug_middleware.default"
            ]
        },
        "doctrine.mapping_describe_command": {
            "class": "Doctrine\\ORM\\Tools\\Console\\Command\\MappingDescribeCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Show information about mapped entities.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.command.entity_manager_provider"
                }
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:mapping:describe"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "doctrine.mapping_info_command": {
            "class": "Doctrine\\ORM\\Tools\\Console\\Command\\InfoCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Show information about mapped entities.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.command.entity_manager_provider"
                }
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:mapping:info"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "doctrine.migrations.configuration": {
            "class": "Doctrine\\Migrations\\Configuration\\Configuration",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The Configuration class is responsible for defining migration configuration information.",
            "arguments": [],
            "file": null,
            "calls": [
                "addMigrationsDirectory",
                "setAllOrNothing",
                "setCheckDatabasePlatform",
                "setTransactional",
                "setMetadataStorageConfiguration"
            ],
            "tags": [],
            "usages": [
                "doctrine.migrations.configuration_loader"
            ]
        },
        "doctrine.migrations.configuration_loader": {
            "class": "Doctrine\\Migrations\\Configuration\\Migration\\ExistingConfiguration",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.migrations.configuration"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "doctrine.migrations.dependency_factory"
            ]
        },
        "doctrine.migrations.connection_loader": {
            "class": "Doctrine\\Migrations\\Configuration\\Connection\\ExistingConnection",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "doctrine.migrations.connection_registry_loader": {
            "class": "Doctrine\\Migrations\\Configuration\\Connection\\ConnectionRegistryConnection",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "factory_class": null,
            "factory_method": "withSimpleDefault",
            "tags": [],
            "usages": []
        },
        "doctrine.migrations.dependency_factory": {
            "class": "Doctrine\\Migrations\\DependencyFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The DependencyFactory is responsible for wiring up and managing internal class dependencies.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.migrations.configuration_loader"
                },
                {
                    "type": "service",
                    "id": "doctrine.migrations.entity_manager_registry_loader"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                }
            ],
            "file": null,
            "factory_class": null,
            "factory_method": "fromEntityManager",
            "calls": [
                "setDefinition"
            ],
            "tags": [],
            "usages": [
                "doctrine.migrations.migrations_factory",
                "doctrine_migrations.diff_command",
                "doctrine_migrations.sync_metadata_command",
                "doctrine_migrations.versions_command",
                "doctrine_migrations.current_command",
                "doctrine_migrations.dump_schema_command",
                "doctrine_migrations.execute_command",
                "doctrine_migrations.generate_command",
                "doctrine_migrations.latest_command",
                "doctrine_migrations.migrate_command",
                "doctrine_migrations.rollup_command",
                "doctrine_migrations.status_command",
                "doctrine_migrations.up_to_date_command",
                "doctrine_migrations.version_command"
            ]
        },
        "doctrine.migrations.em_loader": {
            "class": "Doctrine\\Migrations\\Configuration\\EntityManager\\ExistingEntityManager",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "doctrine.migrations.entity_manager_registry_loader": {
            "class": "Doctrine\\Migrations\\Configuration\\EntityManager\\ManagerRegistryEntityManager",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "factory_class": null,
            "factory_method": "withSimpleDefault",
            "tags": [],
            "usages": [
                "doctrine.migrations.dependency_factory"
            ]
        },
        "doctrine.migrations.migrations_factory": {
            "class": "Doctrine\\Migrations\\Version\\MigrationFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The MigrationFactory is responsible for creating instances of the migration class name.",
            "arguments": [],
            "file": null,
            "factory_service": "doctrine.migrations.dependency_factory",
            "factory_method": "getMigrationFactory",
            "tags": [],
            "usages": [
                "doctrine.migrations.dependency_factory"
            ]
        },
        "doctrine.migrations.storage.table_storage": {
            "class": "Doctrine\\Migrations\\Metadata\\Storage\\TableMetadataStorageConfiguration",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "doctrine.migrations.metadata_storage",
                "doctrine.migrations.configuration"
            ]
        },
        "doctrine.orm.command.entity_manager_provider": {
            "class": "Doctrine\\Bundle\\DoctrineBundle\\Orm\\ManagerRegistryAwareEntityManagerProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "doctrine.cache_clear_metadata_command",
                "doctrine.cache_clear_query_cache_command",
                "doctrine.cache_clear_result_command",
                "doctrine.cache_collection_region_command",
                "doctrine.schema_create_command",
                "doctrine.schema_drop_command",
                "doctrine.clear_entity_region_command",
                "doctrine.mapping_info_command",
                "doctrine.mapping_describe_command",
                "doctrine.clear_query_region_command",
                "doctrine.query_dql_command",
                "doctrine.schema_update_command",
                "doctrine.schema_validate_command"
            ]
        },
        "doctrine.orm.configuration": {
            "class": "Doctrine\\ORM\\Configuration",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Configuration container for all configuration options of Doctrine. It combines all configuration options from DBAL & ORM.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "doctrine.orm.container_repository_factory": {
            "class": "Doctrine\\Bundle\\DoctrineBundle\\Repository\\ContainerRepositoryFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Fetches repositories from the container or falls back to normal creation.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.fbEHMRD"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "doctrine.orm.default_configuration"
            ]
        },
        "doctrine.orm.default_attribute_metadata_driver": {
            "class": "Doctrine\\ORM\\Mapping\\Driver\\AttributeDriver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                [
                    "J:\\laragon\\www\\new3\\src\\Entity"
                ],
                true
            ],
            "file": null,
            "tags": [],
            "usages": [
                "maker.doctrine_helper",
                ".doctrine.orm.default_metadata_driver.inner"
            ]
        },
        "doctrine.orm.default_configuration": {
            "class": "Doctrine\\ORM\\Configuration",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Configuration container for all configuration options of Doctrine. It combines all configuration options from DBAL & ORM.",
            "arguments": [],
            "file": null,
            "calls": [
                "setEntityNamespaces",
                "setMetadataCache",
                "setQueryCache",
                "setResultCache",
                "setMetadataDriverImpl",
                "setProxyDir",
                "setProxyNamespace",
                "setAutoGenerateProxyClasses",
                "setSchemaIgnoreClasses",
                "setClassMetadataFactoryName",
                "setDefaultRepositoryClassName",
                "setNamingStrategy",
                "setQuoteStrategy",
                "setTypedFieldMapper",
                "setEntityListenerResolver",
                "setLazyGhostObjectEnabled",
                "setIdentityGenerationPreferences",
                "setRepositoryFactory"
            ],
            "tags": [
                {
                    "name": "doctrine.orm.configuration",
                    "parameters": []
                }
            ],
            "usages": [
                "doctrine.orm.default_entity_manager"
            ]
        },
        "doctrine.orm.default_entity_listener_resolver": {
            "class": "Doctrine\\Bundle\\DoctrineBundle\\Mapping\\ContainerEntityListenerResolver",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "@final",
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.JE6U0mX"
                }
            ],
            "file": null,
            "calls": [
                "registerService",
                "registerService",
                "registerService",
                "registerService",
                "registerService",
                "registerService",
                "registerService",
                "registerService",
                "registerService"
            ],
            "tags": [],
            "usages": [
                "doctrine.orm.default_configuration"
            ]
        },
        "doctrine.orm.default_entity_manager": {
            "class": "Doctrine\\ORM\\EntityManager",
            "public": true,
            "synthetic": false,
            "lazy": true,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The EntityManager is the central access point to ORM functionality.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.dbal.default_connection"
                },
                {
                    "type": "service",
                    "id": "doctrine.orm.default_configuration"
                },
                {
                    "type": "service",
                    "id": "doctrine.dbal.default_connection.event_manager"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.preload",
                    "parameters": {
                        "class": "Doctrine\\ORM\\Proxy\\Autoloader"
                    }
                }
            ],
            "usages": [
                "Doctrine\\ORM\\EntityManagerInterface",
                "doctrine.orm.entity_manager",
                ".Doctrine\\ORM\\EntityManagerInterface $default.entity_manager",
                "Doctrine\\ORM\\EntityManagerInterface $defaultEntityManager",
                "App\\State\\UserPasswordProcessor",
                "App\\Api\\Processor\\DeleteAttributeGroupRestrictProcessor",
                "App\\Api\\Processor\\DeleteAttributeRestrictProcessor",
                "App\\Api\\Processor\\DeleteOptionRestrictProcessor",
                "App\\Api\\Processor\\DeleteOptionValueRestrictProcessor",
                "App\\Api\\Processor\\DeliveryTypeProcessor",
                "App\\Command\\CartPurgeExpiredCommand",
                "App\\Command\\CartsCleanupCommand",
                "App\\Command\\TestRemoveDirectCommand",
                "App\\Command\\UserCreateCommand",
                "App\\Controller\\Admin\\MediaAdminController",
                "App\\Controller\\Api\\CartApiController",
                "App\\Controller\\Api\\DeliveryApiController",
                "App\\Controller\\Api\\DeliveryPublicController",
                "App\\EventSubscriber\\CartLoginSubscriber",
                "App\\Service\\CartContext",
                "App\\Service\\CartManager",
                "App\\Service\\Idempotency\\IdempotencyService",
                "App\\Service\\InventoryService",
                "App\\Service\\ProductCopyService",
                "App\\Service\\ProductLifecycleService",
                "App\\Service\\ProductVariantService",
                "App\\State\\ProductStateProcessor",
                "App\\Twig\\ContactsExtension",
                "doctrine.orm.default_entity_manager.property_info_extractor",
                "doctrine.orm.default_entity_manager.validator_loader",
                "api_platform.doctrine.metadata_factory",
                ".service_locator.H0xKdxO",
                ".service_locator.lQAlGdR"
            ]
        },
        "doctrine.orm.default_entity_manager.property_info_extractor": {
            "class": "Symfony\\Bridge\\Doctrine\\PropertyInfo\\DoctrineExtractor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Extracts data using Doctrine ORM and ODM metadata.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "property_info.list_extractor",
                    "parameters": {
                        "priority": -1001
                    }
                },
                {
                    "name": "property_info.type_extractor",
                    "parameters": {
                        "priority": -999
                    }
                },
                {
                    "name": "property_info.access_extractor",
                    "parameters": {
                        "priority": -999
                    }
                }
            ],
            "usages": [
                "property_info"
            ]
        },
        "doctrine.orm.default_entity_manager.validator_loader": {
            "class": "Symfony\\Bridge\\Doctrine\\Validator\\DoctrineLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Guesses and loads the appropriate constraints using Doctrine's metadata.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.default_entity_manager"
                },
                null
            ],
            "file": null,
            "tags": [
                {
                    "name": "validator.auto_mapper",
                    "parameters": {
                        "priority": -100
                    }
                }
            ],
            "usages": [
                "validator.builder"
            ]
        },
        "doctrine.orm.default_listeners.attach_entity_listeners": {
            "class": "Doctrine\\ORM\\Tools\\AttachEntityListenersListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Mechanism to programmatically attach entity listeners.",
            "arguments": [],
            "file": null,
            "calls": [
                "addEntityListener",
                "addEntityListener",
                "addEntityListener",
                "addEntityListener",
                "addEntityListener",
                "addEntityListener",
                "addEntityListener",
                "addEntityListener",
                "addEntityListener"
            ],
            "tags": [
                {
                    "name": "doctrine.event_listener",
                    "parameters": {
                        "event": "loadClassMetadata"
                    }
                }
            ],
            "usages": [
                ".service_locator.q6F1VxP"
            ]
        },
        "doctrine.orm.default_manager_configurator": {
            "class": "Doctrine\\Bundle\\DoctrineBundle\\ManagerConfigurator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Configurator for an EntityManager",
            "arguments": [
                [],
                []
            ],
            "file": null,
            "tags": [],
            "usages": [
                "doctrine.orm.default_entity_manager"
            ]
        },
        "doctrine.orm.entity_manager.abstract": {
            "class": "Doctrine\\ORM\\EntityManager",
            "public": false,
            "synthetic": false,
            "lazy": true,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The EntityManager is the central access point to ORM functionality.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "doctrine.orm.entity_value_resolver": {
            "class": "Symfony\\Bridge\\Doctrine\\ArgumentResolver\\EntityValueResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Yields the entity matching the criteria provided in the route.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "type": "service",
                    "id": "doctrine.orm.entity_value_resolver.expression_language"
                },
                {
                    "type": "service",
                    "id": ".22_MapEntity~4VeSJ51"
                },
                []
            ],
            "file": null,
            "tags": [
                {
                    "name": "controller.argument_value_resolver",
                    "parameters": {
                        "priority": 110,
                        "name": "Symfony\\Bridge\\Doctrine\\ArgumentResolver\\EntityValueResolver"
                    }
                }
            ],
            "usages": [
                ".debug.value_resolver.doctrine.orm.entity_value_resolver"
            ]
        },
        "doctrine.orm.entity_value_resolver.expression_language": {
            "class": "Symfony\\Component\\ExpressionLanguage\\ExpressionLanguage",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Allows to compile and evaluate expressions written in your own DSL.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "doctrine.orm.entity_value_resolver"
            ]
        },
        "doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_listener": {
            "class": "Symfony\\Bridge\\Doctrine\\SchemaListener\\DoctrineDbalCacheAdapterSchemaListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Automatically adds the cache table needed for the DoctrineDbalAdapter of the Cache component.",
            "arguments": [
                []
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.event_listener",
                    "parameters": {
                        "event": "postGenerateSchema"
                    }
                }
            ],
            "usages": [
                ".service_locator.q6F1VxP"
            ]
        },
        "doctrine.orm.listeners.doctrine_token_provider_schema_listener": {
            "class": "Symfony\\Bridge\\Doctrine\\SchemaListener\\RememberMeTokenProviderDoctrineSchemaListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Automatically adds the rememberme table needed for the {@see DoctrineTokenProvider}.",
            "arguments": [
                []
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.event_listener",
                    "parameters": {
                        "event": "postGenerateSchema"
                    }
                }
            ],
            "usages": [
                ".service_locator.q6F1VxP"
            ]
        },
        "doctrine.orm.listeners.lock_store_schema_listener": {
            "class": "Symfony\\Bridge\\Doctrine\\SchemaListener\\LockStoreSchemaListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                []
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.event_listener",
                    "parameters": {
                        "event": "postGenerateSchema"
                    }
                }
            ],
            "usages": [
                ".service_locator.q6F1VxP"
            ]
        },
        "doctrine.orm.listeners.pdo_session_handler_schema_listener": {
            "class": "Symfony\\Bridge\\Doctrine\\SchemaListener\\PdoSessionHandlerSchemaListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "session.handler.native"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.event_listener",
                    "parameters": {
                        "event": "postGenerateSchema"
                    }
                }
            ],
            "usages": [
                ".service_locator.q6F1VxP"
            ]
        },
        "doctrine.orm.listeners.resolve_target_entity": {
            "class": "Doctrine\\ORM\\Tools\\ResolveTargetEntityListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "ResolveTargetEntityListener",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "doctrine.orm.manager_configurator.abstract": {
            "class": "Doctrine\\Bundle\\DoctrineBundle\\ManagerConfigurator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Configurator for an EntityManager",
            "arguments": [
                [],
                []
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "doctrine.orm.naming_strategy.default": {
            "class": "Doctrine\\ORM\\Mapping\\DefaultNamingStrategy",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The default NamingStrategy",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "doctrine.orm.naming_strategy.underscore": {
            "class": "Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Naming strategy implementing the underscore naming convention. Converts 'MyEntity' to 'my_entity' or 'MY_ENTITY'.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "doctrine.orm.naming_strategy.underscore_number_aware": {
            "class": "Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Naming strategy implementing the underscore naming convention. Converts 'MyEntity' to 'my_entity' or 'MY_ENTITY'.",
            "arguments": [
                0,
                true
            ],
            "file": null,
            "tags": [],
            "usages": [
                "doctrine.orm.default_configuration"
            ]
        },
        "doctrine.orm.proxy_cache_warmer": {
            "class": "Symfony\\Bridge\\Doctrine\\CacheWarmer\\ProxyCacheWarmer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The proxy generator cache warmer generates all entity proxies.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.cache_warmer",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "doctrine.orm.quote_strategy.ansi": {
            "class": "Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "ANSI compliant quote strategy, this strategy does not apply any quote. To use this strategy all mapped tables and columns should be ANSI compliant.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "doctrine.orm.quote_strategy.default": {
            "class": "Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A set of rules for determining the physical column, alias and table quotes",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "doctrine.orm.default_configuration"
            ]
        },
        "doctrine.orm.security.user.provider": {
            "class": "Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Wrapper around a Doctrine ObjectManager.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "doctrine.orm.typed_field_mapper.default": {
            "class": "Doctrine\\ORM\\Mapping\\DefaultTypedFieldMapper",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "@phpstan-type ScalarName = 'array'|'bool'|'float'|'int'|'string'",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "doctrine.orm.default_configuration"
            ]
        },
        "doctrine.orm.validator.unique": {
            "class": "Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Unique Entity Validator checks if one or a set of fields contain unique values.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "validator.constraint_validator",
                    "parameters": {
                        "alias": "doctrine.orm.validator.unique"
                    }
                }
            ],
            "usages": [
                ".service_locator.kCsWobb"
            ]
        },
        "doctrine.orm.validator_initializer": {
            "class": "Symfony\\Bridge\\Doctrine\\Validator\\DoctrineInitializer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Automatically loads proxy object before validation.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "validator.initializer",
                    "parameters": []
                }
            ],
            "usages": [
                "validator.builder"
            ]
        },
        "doctrine.query_dql_command": {
            "class": "Doctrine\\ORM\\Tools\\Console\\Command\\RunDqlCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Command to execute DQL queries in a given EntityManager.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.command.entity_manager_provider"
                }
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:query:dql"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "doctrine.query_sql_command": {
            "class": "Doctrine\\Bundle\\DoctrineBundle\\Command\\Proxy\\RunSqlDoctrineCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Execute a SQL query and output the results.",
            "arguments": [
                {
                    "type": "service",
                    "id": "Doctrine\\Bundle\\DoctrineBundle\\Dbal\\ManagerRegistryAwareConnectionProvider"
                }
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:query:sql"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "doctrine.schema_create_command": {
            "class": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\CreateCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Command to create the database schema for a set of classes based on their mappings.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.command.entity_manager_provider"
                }
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:schema:create"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "doctrine.schema_drop_command": {
            "class": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\DropCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Command to drop the database schema for a set of classes based on their mappings.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.command.entity_manager_provider"
                }
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:schema:drop"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "doctrine.schema_update_command": {
            "class": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\UpdateCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Command to generate the SQL needed to update the database schema to match the current mapping information.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.command.entity_manager_provider"
                }
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:schema:update"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "doctrine.schema_validate_command": {
            "class": "Doctrine\\ORM\\Tools\\Console\\Command\\ValidateSchemaCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Command to validate that the current mapping is valid.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.orm.command.entity_manager_provider"
                }
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:schema:validate"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "doctrine.twig.doctrine_extension": {
            "class": "Doctrine\\Bundle\\DoctrineBundle\\Twig\\DoctrineExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "This class contains the needed functions in order to do the query highlighting",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "doctrine.ulid_generator": {
            "class": "Symfony\\Bridge\\Doctrine\\IdGenerator\\UlidGenerator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "ulid.factory"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.id_generator",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.BxSdgVt"
            ]
        },
        "doctrine.uuid_generator": {
            "class": "Symfony\\Bridge\\Doctrine\\IdGenerator\\UuidGenerator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "uuid.factory"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.id_generator",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.BxSdgVt"
            ]
        },
        "doctrine_migrations.current_command": {
            "class": "Doctrine\\Migrations\\Tools\\Console\\Command\\CurrentCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The CurrentCommand class is responsible for outputting what your current version is.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.migrations.dependency_factory"
                },
                "doctrine:migrations:current"
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:migrations:current"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".doctrine_migrations.current_command.lazy"
            ]
        },
        "doctrine_migrations.diff_command": {
            "class": "Doctrine\\Migrations\\Tools\\Console\\Command\\DiffCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The DiffCommand class is responsible for generating a migration by comparing your current database schema to your mapping information.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.migrations.dependency_factory"
                },
                "doctrine:migrations:diff"
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:migrations:diff"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".doctrine_migrations.diff_command.lazy"
            ]
        },
        "doctrine_migrations.dump_schema_command": {
            "class": "Doctrine\\Migrations\\Tools\\Console\\Command\\DumpSchemaCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The DumpSchemaCommand class is responsible for dumping your current database schema to a migration class. This is intended to be used in conjunction with the RollupCommand.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.migrations.dependency_factory"
                },
                "doctrine:migrations:dump-schema"
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:migrations:dump-schema"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".doctrine_migrations.dump_schema_command.lazy"
            ]
        },
        "doctrine_migrations.execute_command": {
            "class": "Doctrine\\Migrations\\Tools\\Console\\Command\\ExecuteCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The ExecuteCommand class is responsible for executing migration versions up or down manually.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.migrations.dependency_factory"
                },
                "doctrine:migrations:execute"
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:migrations:execute"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".doctrine_migrations.execute_command.lazy"
            ]
        },
        "doctrine_migrations.generate_command": {
            "class": "Doctrine\\Migrations\\Tools\\Console\\Command\\GenerateCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The GenerateCommand class is responsible for generating a blank migration class for you to modify to your needs.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.migrations.dependency_factory"
                },
                "doctrine:migrations:generate"
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:migrations:generate"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".doctrine_migrations.generate_command.lazy"
            ]
        },
        "doctrine_migrations.latest_command": {
            "class": "Doctrine\\Migrations\\Tools\\Console\\Command\\LatestCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The LatestCommand class is responsible for outputting what your latest version is.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.migrations.dependency_factory"
                },
                "doctrine:migrations:latest"
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:migrations:latest"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".doctrine_migrations.latest_command.lazy"
            ]
        },
        "doctrine_migrations.migrate_command": {
            "class": "Doctrine\\Migrations\\Tools\\Console\\Command\\MigrateCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The MigrateCommand class is responsible for executing a migration from the current version to another version up or down. It will calculate all the migration versions that need to be executed and execute them.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.migrations.dependency_factory"
                },
                "doctrine:migrations:migrate"
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:migrations:migrate"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".doctrine_migrations.migrate_command.lazy"
            ]
        },
        "doctrine_migrations.rollup_command": {
            "class": "Doctrine\\Migrations\\Tools\\Console\\Command\\RollupCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The RollupCommand class is responsible for deleting all previously executed migrations from the versions table and marking the freshly dumped schema migration (that was created with DumpSchemaCommand) as migrated.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.migrations.dependency_factory"
                },
                "doctrine:migrations:rollup"
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:migrations:rollup"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".doctrine_migrations.rollup_command.lazy"
            ]
        },
        "doctrine_migrations.schema_filter_listener": {
            "class": "Doctrine\\Bundle\\MigrationsBundle\\EventListener\\SchemaFilterListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Acts as a schema filter that hides the migration metadata table except when the execution context is that of command inside the migrations namespace.",
            "arguments": [
                "doctrine_migration_versions"
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.dbal.schema_filter",
                    "parameters": {
                        "connection": "default"
                    }
                },
                {
                    "name": "kernel.event_listener",
                    "parameters": {
                        "event": "console.command",
                        "method": "onConsoleCommand"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher",
                "doctrine.dbal.default_schema_asset_filter_manager"
            ]
        },
        "doctrine_migrations.status_command": {
            "class": "Doctrine\\Migrations\\Tools\\Console\\Command\\StatusCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The StatusCommand class is responsible for outputting what the current state is of all your migrations. It shows what your current version is, how many new versions you have to execute, etc. and details about each of your migrations.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.migrations.dependency_factory"
                },
                "doctrine:migrations:status"
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:migrations:status"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".doctrine_migrations.status_command.lazy"
            ]
        },
        "doctrine_migrations.sync_metadata_command": {
            "class": "Doctrine\\Migrations\\Tools\\Console\\Command\\SyncMetadataCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.migrations.dependency_factory"
                },
                "doctrine:migrations:sync-metadata-storage"
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:migrations:sync-metadata-storage"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".doctrine_migrations.sync_metadata_command.lazy"
            ]
        },
        "doctrine_migrations.up_to_date_command": {
            "class": "Doctrine\\Migrations\\Tools\\Console\\Command\\UpToDateCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The UpToDateCommand class outputs if your database is up to date or if there are new migrations that need to be executed.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.migrations.dependency_factory"
                },
                "doctrine:migrations:up-to-date"
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:migrations:up-to-date"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".doctrine_migrations.up_to_date_command.lazy"
            ]
        },
        "doctrine_migrations.version_command": {
            "class": "Doctrine\\Migrations\\Tools\\Console\\Command\\VersionCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The VersionCommand class is responsible for manually adding and deleting migration versions from the tracking table.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.migrations.dependency_factory"
                },
                "doctrine:migrations:version"
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:migrations:version"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".doctrine_migrations.version_command.lazy"
            ]
        },
        "doctrine_migrations.versions_command": {
            "class": "Doctrine\\Migrations\\Tools\\Console\\Command\\ListCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The ListCommand class is responsible for outputting a list of all available migrations and their status.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine.migrations.dependency_factory"
                },
                "doctrine:migrations:versions"
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "doctrine:migrations:list"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".doctrine_migrations.versions_command.lazy"
            ]
        },
        "error_controller": {
            "class": "Symfony\\Component\\HttpKernel\\Controller\\ErrorController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Renders error or exception pages from a given FlattenException.",
            "arguments": [
                {
                    "type": "service",
                    "id": "http_kernel"
                },
                "error_controller",
                {
                    "type": "service",
                    "id": "error_handler.error_renderer.serializer"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "error_handler.error_renderer.html": {
            "class": "Symfony\\Component\\ErrorHandler\\ErrorRenderer\\HtmlErrorRenderer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": ".1_~4VeSJ51"
                },
                "UTF-8",
                {
                    "type": "service",
                    "id": "debug.file_link_formatter"
                },
                "J:\\laragon\\www\\new3",
                {
                    "type": "service",
                    "id": ".2_~4VeSJ51"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "twig.error_renderer.html.inner",
                "twig.error_renderer.html",
                "web_profiler.controller.exception_panel"
            ]
        },
        "error_handler.error_renderer.serializer": {
            "class": "Symfony\\Component\\ErrorHandler\\ErrorRenderer\\SerializerErrorRenderer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Formats an exception using Serializer for rendering.",
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.serializer"
                },
                {
                    "type": "service",
                    "id": ".10_~4VeSJ51"
                },
                {
                    "type": "service",
                    "id": "twig.error_renderer.html"
                },
                {
                    "type": "service",
                    "id": ".11_~4VeSJ51"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "error_renderer",
                "error_renderer.serializer",
                "error_controller"
            ]
        },
        "exception_listener": {
            "class": "Symfony\\Component\\HttpKernel\\EventListener\\ErrorListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "error_controller",
                {
                    "type": "service",
                    "id": "monolog.logger.request"
                },
                true,
                [],
                []
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "request"
                    }
                },
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "file_locator": {
            "class": "Symfony\\Component\\HttpKernel\\Config\\FileLocator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "FileLocator uses the KernelInterface to locate resources in bundles.",
            "arguments": [
                {
                    "type": "service",
                    "id": "kernel"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\HttpKernel\\Config\\FileLocator",
                "routing.loader.xml",
                "routing.loader.yml",
                "routing.loader.php",
                "routing.loader.glob",
                "routing.loader.directory",
                "routing.loader.attribute.directory",
                "routing.loader.attribute.file",
                "routing.loader.psr4"
            ]
        },
        "filesystem": {
            "class": "Symfony\\Component\\Filesystem\\Filesystem",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Provides basic utility to manipulate the file system.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\Filesystem\\Filesystem",
                "App\\Command\\SessionClearCommand",
                "console.command.assets_install",
                "console.command.cache_clear",
                "console.command.error_dumper",
                "maker.file_manager",
                "lexik_jwt_authentication.generate_keypair_command",
                "liip_imagine.cache.resolver.default"
            ]
        },
        "form.live_collection": {
            "class": "Symfony\\UX\\LiveComponent\\Form\\Type\\LiveCollectionType",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "form.type",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "form.type.entity": {
            "class": "Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "form.type",
                    "parameters": {
                        "alias": "entity"
                    }
                }
            ],
            "usages": []
        },
        "form.type_guesser.doctrine": {
            "class": "Symfony\\Bridge\\Doctrine\\Form\\DoctrineOrmTypeGuesser",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "form.type_guesser",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "fragment.handler": {
            "class": "Symfony\\Component\\HttpKernel\\DependencyInjection\\LazyLoadingFragmentHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Lazily loads fragment renderers from the dependency injection container.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.va_rxC4"
                },
                {
                    "type": "service",
                    "id": "request_stack"
                },
                true
            ],
            "file": null,
            "tags": [],
            "usages": [
                "twig.runtime.httpkernel"
            ]
        },
        "fragment.renderer.inline": {
            "class": "Symfony\\Component\\HttpKernel\\Fragment\\InlineFragmentRenderer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Implements the inline rendering strategy where the Request is rendered by the current HTTP kernel.",
            "arguments": [
                {
                    "type": "service",
                    "id": "http_kernel"
                },
                {
                    "type": "service",
                    "id": "debug.event_dispatcher"
                }
            ],
            "file": null,
            "calls": [
                "setFragmentPath"
            ],
            "tags": [
                {
                    "name": "kernel.fragment_renderer",
                    "parameters": {
                        "alias": "inline"
                    }
                }
            ],
            "usages": [
                ".service_locator.va_rxC4"
            ]
        },
        "fragment.uri_generator": {
            "class": "Symfony\\Component\\HttpKernel\\Fragment\\FragmentUriGenerator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Generates a fragment URI.",
            "arguments": [
                "\/_fragment",
                {
                    "type": "service",
                    "id": "uri_signer"
                },
                {
                    "type": "service",
                    "id": "request_stack"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\HttpKernel\\Fragment\\FragmentUriGeneratorInterface",
                "twig.runtime.httpkernel"
            ]
        },
        "http_cache": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\HttpCache\\HttpCache",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Manages HTTP cache objects in a Container.",
            "arguments": [
                {
                    "type": "service",
                    "id": "kernel"
                },
                {
                    "type": "service",
                    "id": "http_cache.store"
                },
                null,
                {
                    "debug": true
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "http_cache.store": {
            "class": "Symfony\\Component\\HttpKernel\\HttpCache\\Store",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Store implements all the logic for storing cache metadata (Request and Response headers).",
            "arguments": [
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/http_cache"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\HttpKernel\\HttpCache\\StoreInterface",
                "http_cache"
            ]
        },
        "http_kernel": {
            "class": "Symfony\\Component\\HttpKernel\\HttpKernel",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "HttpKernel notifies events to convert a Request object to a Response one.",
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.event_dispatcher"
                },
                {
                    "type": "service",
                    "id": "debug.controller_resolver"
                },
                {
                    "type": "service",
                    "id": "request_stack"
                },
                {
                    "type": "service",
                    "id": "debug.argument_resolver"
                },
                true
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.hot_path",
                    "parameters": []
                },
                {
                    "name": "container.preload",
                    "parameters": {
                        "class": "Symfony\\Component\\Runtime\\Runner\\Symfony\\HttpKernelRunner"
                    }
                },
                {
                    "name": "container.preload",
                    "parameters": {
                        "class": "Symfony\\Component\\Runtime\\Runner\\Symfony\\ResponseRunner"
                    }
                },
                {
                    "name": "container.preload",
                    "parameters": {
                        "class": "Symfony\\Component\\Runtime\\SymfonyRuntime"
                    }
                }
            ],
            "usages": [
                "Symfony\\Component\\HttpKernel\\HttpKernelInterface",
                "error_controller",
                "fragment.renderer.inline",
                "security.authentication.failure_handler.main.form_login",
                "ux.live_component.batch_action_controller",
                ".service_locator.ZyP9f7K"
            ]
        },
        "kernel": {
            "class": "App\\Kernel",
            "public": true,
            "synthetic": true,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": true,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "controller.service_arguments",
                    "parameters": []
                },
                {
                    "name": "routing.route_loader",
                    "parameters": []
                }
            ],
            "usages": [
                "App\\Kernel",
                "Symfony\\Component\\HttpKernel\\KernelInterface",
                "http_cache",
                "file_locator",
                "config_builder.warmer",
                "console.messenger.application",
                "data_collector.config",
                "data_collector.time",
                "twig.template_iterator",
                "api_platform.route_loader",
                ".service_locator.rhF__EI"
            ]
        },
        "lexik_jwt_authentication.check_config_command": {
            "class": "Lexik\\Bundle\\JWTAuthenticationBundle\\Command\\CheckConfigCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "lexik_jwt_authentication.key_loader.raw"
                },
                "HS256"
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "lexik:jwt:check-config"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".lexik_jwt_authentication.check_config_command.lazy"
            ]
        },
        "lexik_jwt_authentication.enable_encryption_config_command": {
            "class": "Lexik\\Bundle\\JWTAuthenticationBundle\\Command\\EnableEncryptionConfigCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                null
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "lexik:jwt:enable-encryption"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".lexik_jwt_authentication.enable_encryption_config_command.lazy"
            ]
        },
        "lexik_jwt_authentication.encoder.lcobucci": {
            "class": "Lexik\\Bundle\\JWTAuthenticationBundle\\Encoder\\LcobucciJWTEncoder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Json Web Token encoder\/decoder based on the lcobucci\/jwt library.",
            "arguments": [
                {
                    "type": "service",
                    "id": "lexik_jwt_authentication.jws_provider.lcobucci"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "lexik_jwt_authentication.encoder",
                "Lexik\\Bundle\\JWTAuthenticationBundle\\Encoder\\JWTEncoderInterface",
                "lexik_jwt_authentication.jwt_manager"
            ]
        },
        "lexik_jwt_authentication.extractor.authorization_header_extractor": {
            "class": "Lexik\\Bundle\\JWTAuthenticationBundle\\TokenExtractor\\AuthorizationHeaderTokenExtractor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "AuthorizationHeaderTokenExtractor.",
            "arguments": [
                "Bearer",
                "Authorization"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "lexik_jwt_authentication.extractor.chain_extractor"
            ]
        },
        "lexik_jwt_authentication.extractor.chain_extractor": {
            "class": "Lexik\\Bundle\\JWTAuthenticationBundle\\TokenExtractor\\ChainTokenExtractor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "ChainTokenExtractor is the class responsible of extracting a JWT token from a {@link Request} object using all mapped token extractors.",
            "arguments": [
                [
                    {
                        "type": "service",
                        "id": "lexik_jwt_authentication.extractor.authorization_header_extractor"
                    }
                ]
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Lexik\\Bundle\\JWTAuthenticationBundle\\TokenExtractor\\TokenExtractorInterface"
            ]
        },
        "lexik_jwt_authentication.extractor.cookie_extractor": {
            "class": "Lexik\\Bundle\\JWTAuthenticationBundle\\TokenExtractor\\CookieTokenExtractor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "CookieTokenExtractor.",
            "arguments": [
                ""
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "lexik_jwt_authentication.extractor.query_parameter_extractor": {
            "class": "Lexik\\Bundle\\JWTAuthenticationBundle\\TokenExtractor\\QueryParameterTokenExtractor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "QueryParameterTokenExtractor.",
            "arguments": [
                ""
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "lexik_jwt_authentication.extractor.split_cookie_extractor": {
            "class": "Lexik\\Bundle\\JWTAuthenticationBundle\\TokenExtractor\\SplitCookieExtractor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "SplitCookieExtractor.",
            "arguments": [
                ""
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "lexik_jwt_authentication.generate_keypair_command": {
            "class": "Lexik\\Bundle\\JWTAuthenticationBundle\\Command\\GenerateKeyPairCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "filesystem"
                },
                "%env(string:JWT_SECRET)%",
                null,
                "",
                "HS256"
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "lexik:jwt:generate-keypair"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".lexik_jwt_authentication.generate_keypair_command.lazy"
            ]
        },
        "lexik_jwt_authentication.generate_token_command": {
            "class": "Lexik\\Bundle\\JWTAuthenticationBundle\\Command\\GenerateTokenCommand",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "GenerateTokenCommand.",
            "arguments": [
                {
                    "type": "service",
                    "id": "lexik_jwt_authentication.jwt_manager"
                },
                [
                    {
                        "type": "service",
                        "id": "security.user.provider.concrete.app_user_provider"
                    }
                ]
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "lexik:jwt:generate-token"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".lexik_jwt_authentication.generate_token_command.lazy"
            ]
        },
        "lexik_jwt_authentication.handler.authentication_failure": {
            "class": "Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Http\\Authentication\\AuthenticationFailureHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "AuthenticationFailureHandler.",
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.event_dispatcher"
                },
                null
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "security"
                    }
                }
            ],
            "usages": [
                "Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Http\\Authentication\\AuthenticationFailureHandler"
            ]
        },
        "lexik_jwt_authentication.handler.authentication_success": {
            "class": "Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Http\\Authentication\\AuthenticationSuccessHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "AuthenticationSuccessHandler.",
            "arguments": [
                {
                    "type": "service",
                    "id": "lexik_jwt_authentication.jwt_manager"
                },
                {
                    "type": "service",
                    "id": "debug.event_dispatcher"
                },
                [],
                true
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "security"
                    }
                }
            ],
            "usages": [
                "Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Http\\Authentication\\AuthenticationSuccessHandler"
            ]
        },
        "lexik_jwt_authentication.jws_provider.lcobucci": {
            "class": "Lexik\\Bundle\\JWTAuthenticationBundle\\Services\\JWSProvider\\LcobucciJWSProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "lexik_jwt_authentication.key_loader.raw"
                },
                "HS256",
                604800,
                0,
                false
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Lexik\\Bundle\\JWTAuthenticationBundle\\Services\\JWSProvider\\JWSProviderInterface",
                "lexik_jwt_authentication.encoder.lcobucci"
            ]
        },
        "lexik_jwt_authentication.jwt_manager": {
            "class": "Lexik\\Bundle\\JWTAuthenticationBundle\\Services\\JWTManager",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Provides convenient methods to manage JWT creation\/verification.",
            "arguments": [
                {
                    "type": "service",
                    "id": "lexik_jwt_authentication.encoder.lcobucci"
                },
                {
                    "type": "service",
                    "id": "debug.event_dispatcher"
                },
                "username",
                {
                    "type": "service",
                    "id": "lexik_jwt_authentication.payload_enrichment"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Lexik\\Bundle\\JWTAuthenticationBundle\\Services\\JWTTokenManagerInterface",
                "lexik_jwt_authentication.handler.authentication_success",
                "lexik_jwt_authentication.generate_token_command"
            ]
        },
        "lexik_jwt_authentication.key_loader.abstract": {
            "class": "",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "",
                "",
                "",
                []
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "lexik_jwt_authentication.key_loader.raw": {
            "class": "Lexik\\Bundle\\JWTAuthenticationBundle\\Services\\KeyLoader\\RawKeyLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Reads crypto keys.",
            "arguments": [
                "%env(string:JWT_SECRET)%",
                null,
                "",
                []
            ],
            "file": null,
            "tags": [],
            "usages": [
                "lexik_jwt_authentication.key_loader",
                "lexik_jwt_authentication.jws_provider.lcobucci",
                "lexik_jwt_authentication.check_config_command",
                "lexik_jwt_authentication.migrate_config_command"
            ]
        },
        "lexik_jwt_authentication.migrate_config_command": {
            "class": "Lexik\\Bundle\\JWTAuthenticationBundle\\Command\\MigrateConfigCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "lexik_jwt_authentication.key_loader.raw"
                },
                "",
                "HS256"
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "lexik:jwt:migrate-config"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".lexik_jwt_authentication.migrate_config_command.lazy"
            ]
        },
        "lexik_jwt_authentication.payload_enrichment": {
            "class": "Lexik\\Bundle\\JWTAuthenticationBundle\\Services\\PayloadEnrichment\\ChainEnrichment",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                []
            ],
            "file": null,
            "tags": [],
            "usages": [
                "lexik_jwt_authentication.jwt_manager"
            ]
        },
        "lexik_jwt_authentication.payload_enrichment.random_jti_enrichment": {
            "class": "Lexik\\Bundle\\JWTAuthenticationBundle\\Services\\PayloadEnrichment\\RandomJtiEnrichment",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "lexik_jwt_authentication.security.jwt_authenticator": {
            "class": "Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "lexik_jwt_authentication.jwt_manager"
                },
                {
                    "type": "service",
                    "id": "debug.event_dispatcher"
                },
                {
                    "type": "service",
                    "id": "lexik_jwt_authentication.extractor.chain_extractor"
                },
                "",
                {
                    "type": "service",
                    "id": "translator"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "lexik_jwt_authentication.security.jwt_user_provider": {
            "class": "Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\User\\JWTUserProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "JWT User provider.",
            "arguments": [
                ""
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "liip_imagine.binary.loader.default": {
            "class": "Liip\\ImagineBundle\\Binary\\Loader\\FileSystemLoader",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": ".25_MimeTypes~4VeSJ51"
                },
                {
                    "type": "service",
                    "id": ".26_MimeTypes~4VeSJ51"
                },
                {
                    "type": "service",
                    "id": ".27_FileSystemLocator~4VeSJ51"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.binary.loader",
                    "parameters": {
                        "loader": "default"
                    }
                }
            ],
            "usages": [
                "liip_imagine.data.manager"
            ]
        },
        "liip_imagine.binary.loader.prototype.chain": {
            "class": "Liip\\ImagineBundle\\Binary\\Loader\\ChainLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                ""
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "liip_imagine.binary.loader.prototype.filesystem": {
            "class": "Liip\\ImagineBundle\\Binary\\Loader\\FileSystemLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "mime_types"
                },
                {
                    "type": "service",
                    "id": "mime_types"
                },
                ""
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "liip_imagine.binary.loader.prototype.flysystem": {
            "class": "Liip\\ImagineBundle\\Binary\\Loader\\FlysystemLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "mime_types"
                },
                ""
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "liip_imagine.binary.loader.prototype.flysystem2": {
            "class": "Liip\\ImagineBundle\\Binary\\Loader\\FlysystemV2Loader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "mime_types"
                },
                ""
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "liip_imagine.binary.loader.prototype.stream": {
            "class": "Liip\\ImagineBundle\\Binary\\Loader\\StreamLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "",
                ""
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "liip_imagine.binary.locator.filesystem": {
            "class": "Liip\\ImagineBundle\\Binary\\Locator\\FileSystemLocator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": false,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "",
                ""
            ],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.binary.locator",
                    "parameters": {
                        "shared": ""
                    }
                }
            ],
            "usages": []
        },
        "liip_imagine.binary.locator.filesystem_insecure": {
            "class": "Liip\\ImagineBundle\\Binary\\Locator\\FileSystemInsecureLocator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": false,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "",
                ""
            ],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.binary.locator",
                    "parameters": {
                        "shared": ""
                    }
                }
            ],
            "usages": []
        },
        "liip_imagine.binary.mime_type_guesser": {
            "class": "Liip\\ImagineBundle\\Binary\\SimpleMimeTypeGuesser",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": ".29_MimeTypes~4VeSJ51"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "liip_imagine.filter.manager",
                "liip_imagine.data.manager"
            ]
        },
        "liip_imagine.cache.manager": {
            "class": "Liip\\ImagineBundle\\Imagine\\Cache\\CacheManager",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.filter.configuration"
                },
                {
                    "type": "service",
                    "id": "router.default"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.cache.signer"
                },
                {
                    "type": "service",
                    "id": "debug.event_dispatcher"
                },
                "default",
                false
            ],
            "file": null,
            "calls": [
                "addResolver",
                "addResolver"
            ],
            "tags": [],
            "usages": [
                "Liip\\ImagineBundle\\Imagine\\Cache\\CacheManager",
                "App\\Command\\ImagesCacheWarmupCommand",
                "App\\EventListener\\ProductImageCacheListener",
                "App\\Service\\ImageCacheService",
                "App\\Service\\ImageWarmupService",
                "liip_imagine.service.filter",
                "liip_imagine.templating.filter_runtime",
                "liip_imagine.command.cache_remove",
                "liip_imagine.command.cache_resolve",
                "liip_imagine.templating.filter_helper"
            ]
        },
        "liip_imagine.cache.resolver.default": {
            "class": "Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\WebPathResolver",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "filesystem"
                },
                {
                    "type": "service",
                    "id": "router.request_context"
                },
                "J:\\laragon\\www\\new3\/public",
                "media\/cache"
            ],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.cache.resolver",
                    "parameters": {
                        "resolver": "default"
                    }
                }
            ],
            "usages": [
                "liip_imagine.cache.manager"
            ]
        },
        "liip_imagine.cache.resolver.no_cache_web_path": {
            "class": "Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\NoCacheWebPathResolver",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "router.request_context"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.cache.resolver",
                    "parameters": {
                        "resolver": "no_cache"
                    }
                }
            ],
            "usages": [
                "liip_imagine.cache.manager"
            ]
        },
        "liip_imagine.cache.resolver.prototype.aws_s3": {
            "class": "Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\AwsS3Resolver",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "",
                "",
                "",
                "",
                ""
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "liip_imagine.cache.resolver.prototype.cache": {
            "class": "Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\CacheResolver",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "@deprecated Deprecated in favour of the PsrCacheResolver class",
            "arguments": [
                "",
                ""
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "liip_imagine.cache.resolver.prototype.flysystem": {
            "class": "Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\FlysystemResolver",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "",
                {
                    "type": "service",
                    "id": "router.request_context"
                },
                "",
                "",
                ""
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "liip_imagine.cache.resolver.prototype.flysystem2": {
            "class": "Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\FlysystemV2Resolver",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "",
                {
                    "type": "service",
                    "id": "router.request_context"
                },
                "",
                "",
                ""
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "liip_imagine.cache.resolver.prototype.proxy": {
            "class": "Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\ProxyResolver",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "ProxyResolver.",
            "arguments": [
                "",
                ""
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "liip_imagine.cache.resolver.prototype.psr_cache": {
            "class": "Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\PsrCacheResolver",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "",
                ""
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "liip_imagine.cache.resolver.prototype.web_path": {
            "class": "Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\WebPathResolver",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "filesystem"
                },
                {
                    "type": "service",
                    "id": "router.request_context"
                },
                "",
                ""
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "liip_imagine.cache.signer": {
            "class": "Liip\\ImagineBundle\\Imagine\\Cache\\Signer",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "%env(APP_SECRET)%"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "liip_imagine.cache.manager",
                "Liip\\ImagineBundle\\Controller\\ImagineController"
            ]
        },
        "liip_imagine.command.cache_remove": {
            "class": "Liip\\ImagineBundle\\Command\\RemoveCacheCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.cache.manager"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.filter.manager"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.service.filter"
                }
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "liip:imagine:cache:remove",
                        "alias": "imagine:del"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "liip_imagine.command.cache_resolve": {
            "class": "Liip\\ImagineBundle\\Command\\ResolveCacheCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.cache.manager"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.filter.manager"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.service.filter"
                }
            ],
            "file": null,
            "calls": [
                "setName"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "liip:imagine:cache:resolve",
                        "alias": "imagine:get"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.B3te99C"
            ]
        },
        "liip_imagine.config.filter_factory_collection": {
            "class": "Liip\\ImagineBundle\\Config\\FilterFactoryCollection",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.auto_rotate"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.background"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.crop"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.downscale"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.flip"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.grayscale"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.interlace"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.paste"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.relative_resize"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.resize"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.rotate"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.scale"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.strip"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.thumbnail"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.upscale"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.watermark"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Liip\\ImagineBundle\\Config\\FilterFactoryCollection",
                "liip_imagine.config.stack_builder"
            ]
        },
        "liip_imagine.config.stack_builder": {
            "class": "Liip\\ImagineBundle\\Config\\StackBuilder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.stack"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.config.filter_factory_collection"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Liip\\ImagineBundle\\Config\\StackBuilder",
                "liip_imagine.config.stack_collection"
            ]
        },
        "liip_imagine.config.stack_collection": {
            "class": "Liip\\ImagineBundle\\Config\\StackCollection",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.config.stack_builder"
                },
                "%liip_imagine.filter_sets%"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Liip\\ImagineBundle\\Config\\StackCollection"
            ]
        },
        "liip_imagine.controller.config": {
            "class": "Liip\\ImagineBundle\\Config\\Controller\\ControllerConfig",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                302
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Liip\\ImagineBundle\\Controller\\ImagineController"
            ]
        },
        "liip_imagine.data.manager": {
            "class": "Liip\\ImagineBundle\\Imagine\\Data\\DataManager",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.binary.mime_type_guesser"
                },
                {
                    "type": "service",
                    "id": ".28_MimeTypes~4VeSJ51"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.filter.configuration"
                },
                "default",
                null
            ],
            "file": null,
            "calls": [
                "addLoader"
            ],
            "tags": [],
            "usages": [
                "Liip\\ImagineBundle\\Imagine\\Data\\DataManager",
                "App\\Service\\ImageCacheService",
                "App\\Service\\ImageWarmupService",
                "liip_imagine.service.filter",
                "Liip\\ImagineBundle\\Controller\\ImagineController"
            ]
        },
        "liip_imagine.factory.config.filter.argument.point": {
            "class": "Liip\\ImagineBundle\\Factory\\Config\\Filter\\Argument\\PointFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "liip_imagine.factory.config.filter.crop",
                "liip_imagine.factory.config.filter.paste"
            ]
        },
        "liip_imagine.factory.config.filter.argument.size": {
            "class": "Liip\\ImagineBundle\\Factory\\Config\\Filter\\Argument\\SizeFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "liip_imagine.factory.config.filter.background",
                "liip_imagine.factory.config.filter.crop",
                "liip_imagine.factory.config.filter.downscale",
                "liip_imagine.factory.config.filter.resize",
                "liip_imagine.factory.config.filter.scale",
                "liip_imagine.factory.config.filter.thumbnail",
                "liip_imagine.factory.config.filter.upscale"
            ]
        },
        "liip_imagine.factory.config.filter.auto_rotate": {
            "class": "Liip\\ImagineBundle\\Factory\\Config\\Filter\\AutoRotateFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "liip_imagine.config.filter_factory_collection"
            ]
        },
        "liip_imagine.factory.config.filter.background": {
            "class": "Liip\\ImagineBundle\\Factory\\Config\\Filter\\BackgroundFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.argument.size"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "liip_imagine.config.filter_factory_collection"
            ]
        },
        "liip_imagine.factory.config.filter.crop": {
            "class": "Liip\\ImagineBundle\\Factory\\Config\\Filter\\CropFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.argument.size"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.argument.point"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "liip_imagine.config.filter_factory_collection"
            ]
        },
        "liip_imagine.factory.config.filter.downscale": {
            "class": "Liip\\ImagineBundle\\Factory\\Config\\Filter\\DownscaleFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.argument.size"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "liip_imagine.config.filter_factory_collection"
            ]
        },
        "liip_imagine.factory.config.filter.flip": {
            "class": "Liip\\ImagineBundle\\Factory\\Config\\Filter\\FlipFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "liip_imagine.config.filter_factory_collection"
            ]
        },
        "liip_imagine.factory.config.filter.grayscale": {
            "class": "Liip\\ImagineBundle\\Factory\\Config\\Filter\\GrayscaleFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "liip_imagine.config.filter_factory_collection"
            ]
        },
        "liip_imagine.factory.config.filter.interlace": {
            "class": "Liip\\ImagineBundle\\Factory\\Config\\Filter\\InterlaceFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "liip_imagine.config.filter_factory_collection"
            ]
        },
        "liip_imagine.factory.config.filter.paste": {
            "class": "Liip\\ImagineBundle\\Factory\\Config\\Filter\\PasteFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.argument.point"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "liip_imagine.config.filter_factory_collection"
            ]
        },
        "liip_imagine.factory.config.filter.relative_resize": {
            "class": "Liip\\ImagineBundle\\Factory\\Config\\Filter\\RelativeResizeFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "liip_imagine.config.filter_factory_collection"
            ]
        },
        "liip_imagine.factory.config.filter.resize": {
            "class": "Liip\\ImagineBundle\\Factory\\Config\\Filter\\ResizeFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.argument.size"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "liip_imagine.config.filter_factory_collection"
            ]
        },
        "liip_imagine.factory.config.filter.rotate": {
            "class": "Liip\\ImagineBundle\\Factory\\Config\\Filter\\RotateFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "liip_imagine.config.filter_factory_collection"
            ]
        },
        "liip_imagine.factory.config.filter.scale": {
            "class": "Liip\\ImagineBundle\\Factory\\Config\\Filter\\ScaleFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.argument.size"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "liip_imagine.config.filter_factory_collection"
            ]
        },
        "liip_imagine.factory.config.filter.strip": {
            "class": "Liip\\ImagineBundle\\Factory\\Config\\Filter\\StripFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "liip_imagine.config.filter_factory_collection"
            ]
        },
        "liip_imagine.factory.config.filter.thumbnail": {
            "class": "Liip\\ImagineBundle\\Factory\\Config\\Filter\\ThumbnailFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.argument.size"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "liip_imagine.config.filter_factory_collection"
            ]
        },
        "liip_imagine.factory.config.filter.upscale": {
            "class": "Liip\\ImagineBundle\\Factory\\Config\\Filter\\UpscaleFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.factory.config.filter.argument.size"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "liip_imagine.config.filter_factory_collection"
            ]
        },
        "liip_imagine.factory.config.filter.watermark": {
            "class": "Liip\\ImagineBundle\\Factory\\Config\\Filter\\WatermarkFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "liip_imagine.config.filter_factory_collection"
            ]
        },
        "liip_imagine.factory.config.stack": {
            "class": "Liip\\ImagineBundle\\Factory\\Config\\StackFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "liip_imagine.config.stack_builder"
            ]
        },
        "liip_imagine.filter.configuration": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\FilterConfiguration",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "%liip_imagine.filter_sets%"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "App\\Service\\ImageCacheService",
                "liip_imagine.filter.manager",
                "liip_imagine.data.manager",
                "liip_imagine.cache.manager"
            ]
        },
        "liip_imagine.filter.loader.auto_rotate": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\AutoRotateFilterLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "AutoRotateFilterLoader - rotates an Image based on its EXIF Data.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.filter.loader",
                    "parameters": {
                        "loader": "auto_rotate"
                    }
                }
            ],
            "usages": [
                "liip_imagine.filter.manager"
            ]
        },
        "liip_imagine.filter.loader.background": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\BackgroundFilterLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.gd"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.filter.loader",
                    "parameters": {
                        "loader": "background"
                    }
                }
            ],
            "usages": [
                "liip_imagine.filter.manager"
            ]
        },
        "liip_imagine.filter.loader.crop": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\CropFilterLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.filter.loader",
                    "parameters": {
                        "loader": "crop"
                    }
                }
            ],
            "usages": [
                "liip_imagine.filter.manager"
            ]
        },
        "liip_imagine.filter.loader.downscale": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\DownscaleFilterLoader",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Downscale filter.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.filter.loader",
                    "parameters": {
                        "loader": "downscale"
                    }
                }
            ],
            "usages": [
                "liip_imagine.filter.manager"
            ]
        },
        "liip_imagine.filter.loader.fixed": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\FixedFilterLoader",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Fixed size filter.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.filter.loader",
                    "parameters": {
                        "loader": "fixed"
                    }
                }
            ],
            "usages": [
                "liip_imagine.filter.manager"
            ]
        },
        "liip_imagine.filter.loader.flip": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\FlipFilterLoader",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.filter.loader",
                    "parameters": {
                        "loader": "flip"
                    }
                }
            ],
            "usages": [
                "liip_imagine.filter.manager"
            ]
        },
        "liip_imagine.filter.loader.grayscale": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\GrayscaleFilterLoader",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "GrayscaleFilterLoader - apply grayscale filter.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.filter.loader",
                    "parameters": {
                        "loader": "grayscale"
                    }
                }
            ],
            "usages": [
                "liip_imagine.filter.manager"
            ]
        },
        "liip_imagine.filter.loader.interlace": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\InterlaceFilterLoader",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.filter.loader",
                    "parameters": {
                        "loader": "interlace"
                    }
                }
            ],
            "usages": [
                "liip_imagine.filter.manager"
            ]
        },
        "liip_imagine.filter.loader.paste_image": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\PasteFilterLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.gd"
                },
                "J:\\laragon\\www\\new3"
            ],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.filter.loader",
                    "parameters": {
                        "loader": "paste_image"
                    }
                }
            ],
            "usages": [
                "liip_imagine.filter.manager"
            ]
        },
        "liip_imagine.filter.loader.relative_resize": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\RelativeResizeFilterLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Loader for this bundle's relative resize filter.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.filter.loader",
                    "parameters": {
                        "loader": "relative_resize"
                    }
                }
            ],
            "usages": [
                "liip_imagine.filter.manager"
            ]
        },
        "liip_imagine.filter.loader.resample": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\ResampleFilterLoader",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.gd"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.filter.loader",
                    "parameters": {
                        "loader": "resample"
                    }
                }
            ],
            "usages": [
                "liip_imagine.filter.manager"
            ]
        },
        "liip_imagine.filter.loader.resize": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\ResizeFilterLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Loader for Imagine's basic resize filter.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.filter.loader",
                    "parameters": {
                        "loader": "resize"
                    }
                }
            ],
            "usages": [
                "liip_imagine.filter.manager"
            ]
        },
        "liip_imagine.filter.loader.rotate": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\RotateFilterLoader",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Loader for Imagine's basic rotate method.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.filter.loader",
                    "parameters": {
                        "loader": "rotate"
                    }
                }
            ],
            "usages": [
                "liip_imagine.filter.manager"
            ]
        },
        "liip_imagine.filter.loader.scale": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\ScaleFilterLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Scale filter.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.filter.loader",
                    "parameters": {
                        "loader": "scale"
                    }
                }
            ],
            "usages": [
                "liip_imagine.filter.manager"
            ]
        },
        "liip_imagine.filter.loader.strip": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\StripFilterLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.filter.loader",
                    "parameters": {
                        "loader": "strip"
                    }
                }
            ],
            "usages": [
                "liip_imagine.filter.manager"
            ]
        },
        "liip_imagine.filter.loader.thumbnail": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\ThumbnailFilterLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.filter.loader",
                    "parameters": {
                        "loader": "thumbnail"
                    }
                }
            ],
            "usages": [
                "liip_imagine.filter.manager"
            ]
        },
        "liip_imagine.filter.loader.upscale": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\UpscaleFilterLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Upscale filter.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.filter.loader",
                    "parameters": {
                        "loader": "upscale"
                    }
                }
            ],
            "usages": [
                "liip_imagine.filter.manager"
            ]
        },
        "liip_imagine.filter.loader.watermark_image": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\WatermarkFilterLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.gd"
                },
                "J:\\laragon\\www\\new3"
            ],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.filter.loader",
                    "parameters": {
                        "loader": "watermark_image"
                    }
                }
            ],
            "usages": [
                "liip_imagine.filter.manager"
            ]
        },
        "liip_imagine.filter.manager": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\FilterManager",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.filter.configuration"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.gd"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.binary.mime_type_guesser"
                }
            ],
            "file": null,
            "calls": [
                "addLoader",
                "addLoader",
                "addLoader",
                "addLoader",
                "addLoader",
                "addLoader",
                "addLoader",
                "addLoader",
                "addLoader",
                "addLoader",
                "addLoader",
                "addLoader",
                "addLoader",
                "addLoader",
                "addLoader",
                "addLoader",
                "addLoader",
                "addLoader",
                "addPostProcessor",
                "addPostProcessor",
                "addPostProcessor",
                "addPostProcessor",
                "addPostProcessor"
            ],
            "tags": [],
            "usages": [
                "Liip\\ImagineBundle\\Imagine\\Filter\\FilterManager",
                "App\\Service\\ImageCacheService",
                "App\\Service\\ImageWarmupService",
                "liip_imagine.service.filter",
                "liip_imagine.command.cache_remove",
                "liip_imagine.command.cache_resolve"
            ]
        },
        "liip_imagine.filter.post_processor.cwebp": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\PostProcessor\\CwebpPostProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "\/usr\/bin\/cwebp",
                null,
                75,
                100,
                4,
                "fast",
                1,
                false,
                "%liip_imagine.cwebp.metadata%"
            ],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.filter.post_processor",
                    "parameters": {
                        "post_processor": "cwebp"
                    }
                }
            ],
            "usages": [
                "liip_imagine.filter.manager"
            ]
        },
        "liip_imagine.filter.post_processor.jpegoptim": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\PostProcessor\\JpegOptimPostProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "\/usr\/bin\/jpegoptim",
                true,
                null,
                true,
                null
            ],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.filter.post_processor",
                    "parameters": {
                        "post_processor": "jpegoptim"
                    }
                }
            ],
            "usages": [
                "liip_imagine.filter.manager"
            ]
        },
        "liip_imagine.filter.post_processor.mozjpeg": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\PostProcessor\\MozJpegPostProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "mozjpeg post-processor, for noticeably better jpeg compression.",
            "arguments": [
                "\/opt\/mozjpeg\/bin\/cjpeg"
            ],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.filter.post_processor",
                    "parameters": {
                        "post_processor": "mozjpeg"
                    }
                }
            ],
            "usages": [
                "liip_imagine.filter.manager"
            ]
        },
        "liip_imagine.filter.post_processor.optipng": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\PostProcessor\\OptiPngPostProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "\/usr\/bin\/optipng",
                7,
                true,
                null
            ],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.filter.post_processor",
                    "parameters": {
                        "post_processor": "optipng"
                    }
                }
            ],
            "usages": [
                "liip_imagine.filter.manager"
            ]
        },
        "liip_imagine.filter.post_processor.pngquant": {
            "class": "Liip\\ImagineBundle\\Imagine\\Filter\\PostProcessor\\PngquantPostProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "pngquant post-processor, for optimal, web-safe, lossy png compression This requires a recent version of pngquant (so 2.3 or higher?) See pngqaunt.org if you are unable to find a binary package for your distribution.",
            "arguments": [
                "\/usr\/bin\/pngquant"
            ],
            "file": null,
            "tags": [
                {
                    "name": "liip_imagine.filter.post_processor",
                    "parameters": {
                        "post_processor": "pngquant"
                    }
                }
            ],
            "usages": [
                "liip_imagine.filter.manager"
            ]
        },
        "liip_imagine.form.type.image": {
            "class": "Liip\\ImagineBundle\\Form\\Type\\ImageType",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "form.type",
                    "parameters": {
                        "alias": "liip_imagine_image"
                    }
                }
            ],
            "usages": []
        },
        "liip_imagine.gd": {
            "class": "Imagine\\Gd\\Imagine",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Imagine implementation using the GD library.",
            "arguments": [],
            "file": null,
            "calls": [
                "setMetadataReader"
            ],
            "tags": [],
            "usages": [
                "liip_imagine",
                "Imagine\\Image\\ImagineInterface",
                "liip_imagine.filter.manager",
                "liip_imagine.filter.loader.paste_image",
                "liip_imagine.filter.loader.watermark_image",
                "liip_imagine.filter.loader.background",
                "liip_imagine.filter.loader.resample"
            ]
        },
        "liip_imagine.gmagick": {
            "class": "Imagine\\Gmagick\\Imagine",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Imagine implementation using the Gmagick PHP extension.",
            "arguments": [],
            "file": null,
            "calls": [
                "setMetadataReader"
            ],
            "tags": [],
            "usages": []
        },
        "liip_imagine.imagick": {
            "class": "Imagine\\Imagick\\Imagine",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Imagine implementation using the Imagick PHP extension.",
            "arguments": [],
            "file": null,
            "calls": [
                "setMetadataReader"
            ],
            "tags": [],
            "usages": []
        },
        "liip_imagine.meta_data.reader": {
            "class": "Imagine\\Image\\Metadata\\ExifMetadataReader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Metadata driven by Exif information.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "liip_imagine.gd",
                "liip_imagine.imagick",
                "liip_imagine.gmagick"
            ]
        },
        "liip_imagine.mime_types": {
            "class": "Symfony\\Component\\Mime\\MimeTypes",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Manages MIME types and file extensions.",
            "arguments": [],
            "file": null,
            "factory_class": null,
            "factory_method": "getDefault",
            "tags": [],
            "usages": []
        },
        "liip_imagine.service.filter": {
            "class": "Liip\\ImagineBundle\\Service\\FilterService",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.data.manager"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.filter.manager"
                },
                {
                    "type": "service",
                    "id": "liip_imagine.cache.manager"
                },
                false,
                "%liip_imagine.webp.options%",
                {
                    "type": "service",
                    "id": "monolog.logger"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Liip\\ImagineBundle\\Controller\\ImagineController",
                "liip_imagine.command.cache_remove",
                "liip_imagine.command.cache_resolve"
            ]
        },
        "liip_imagine.templating.filter_extension": {
            "class": "Liip\\ImagineBundle\\Templating\\LazyFilterExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "liip_imagine.templating.filter_helper": {
            "class": "Liip\\ImagineBundle\\Templating\\Helper\\FilterHelper",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": true,
            "deprecation_message": "The \"liip_imagine.templating.filter_helper\" service is deprecated since LiipImagineBundle 2.2 and will be removed in 3.0.",
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.cache.manager"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "templating.helper",
                    "parameters": {
                        "alias": "imagine"
                    }
                }
            ],
            "usages": []
        },
        "liip_imagine.templating.filter_runtime": {
            "class": "Liip\\ImagineBundle\\Templating\\LazyFilterRuntime",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "liip_imagine.cache.manager"
                },
                null
            ],
            "file": null,
            "tags": [
                {
                    "name": "twig.runtime",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.JnFobRQ"
            ]
        },
        "locale_aware_listener": {
            "class": "Symfony\\Component\\HttpKernel\\EventListener\\LocaleAwareListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Pass the current locale to the provided services.",
            "arguments": [
                [
                    {
                        "type": "service",
                        "id": "slugger"
                    }
                ],
                {
                    "type": "service",
                    "id": "request_stack"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "locale_listener": {
            "class": "Symfony\\Component\\HttpKernel\\EventListener\\LocaleListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Initializes the locale based on the current request.",
            "arguments": [
                {
                    "type": "service",
                    "id": "request_stack"
                },
                "en",
                {
                    "type": "service",
                    "id": "router.default"
                },
                false,
                []
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "lock.default.factory": {
            "class": "Symfony\\Component\\Lock\\LockFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Factory provides method to create locks.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".lock.default.store.JmTRb1o"
                }
            ],
            "file": null,
            "calls": [
                "setLogger"
            ],
            "tags": [],
            "usages": [
                "lock.factory",
                "Symfony\\Component\\Lock\\LockFactory",
                "App\\Service\\CartContext",
                "App\\Service\\CartLockService"
            ]
        },
        "lock.factory.abstract": {
            "class": "Symfony\\Component\\Lock\\LockFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Factory provides method to create locks.",
            "arguments": [
                {
                    "type": "abstract",
                    "text": "Store"
                }
            ],
            "file": null,
            "calls": [
                "setLogger"
            ],
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "lock"
                    }
                }
            ],
            "usages": []
        },
        "lock.store.combined.abstract": {
            "class": "Symfony\\Component\\Lock\\Store\\CombinedStore",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "CombinedStore is a PersistingStoreInterface implementation able to manage and synchronize several StoreInterfaces.",
            "arguments": [
                {
                    "type": "abstract",
                    "text": "List of stores"
                },
                {
                    "type": "service",
                    "id": "lock.strategy.majority"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "lock.strategy.majority": {
            "class": "Symfony\\Component\\Lock\\Strategy\\ConsensusStrategy",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "ConsensusStrategy is a StrategyInterface implementation where strictly more than 50% items should be successful.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "maker.auto_command.abstract": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                "",
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "maker.auto_command.make_auth": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_authenticator"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:auth",
                        "description": "Create a Guard authenticator of different flavors"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_auth.lazy"
            ]
        },
        "maker.auto_command.make_command": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_command"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:command",
                        "description": "Create a new console command class"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_command.lazy"
            ]
        },
        "maker.auto_command.make_controller": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_controller"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:controller",
                        "description": "Create a new controller class"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_controller.lazy"
            ]
        },
        "maker.auto_command.make_crud": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_crud"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:crud",
                        "description": "Create CRUD for Doctrine entity class"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_crud.lazy"
            ]
        },
        "maker.auto_command.make_docker_database": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_docker_database"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:docker:database",
                        "description": "Add a database container to your compose.yaml file"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_docker_database.lazy"
            ]
        },
        "maker.auto_command.make_entity": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_entity"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:entity",
                        "description": "Create or update a Doctrine entity class, and optionally an API Platform resource"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_entity.lazy"
            ]
        },
        "maker.auto_command.make_fixtures": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_fixtures"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:fixtures",
                        "description": "Create a new class to load Doctrine fixtures"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_fixtures.lazy"
            ]
        },
        "maker.auto_command.make_form": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_form"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:form",
                        "description": "Create a new form class"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_form.lazy"
            ]
        },
        "maker.auto_command.make_listener": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_listener"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setAliases",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:listener",
                        "description": "Creates a new event subscriber class or a new event listener class"
                    }
                },
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:subscriber",
                        "description": "Deprecated alias of \"make:listener\""
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_listener.lazy"
            ]
        },
        "maker.auto_command.make_message": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_message"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:message",
                        "description": "Create a new message and handler"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_message.lazy"
            ]
        },
        "maker.auto_command.make_messenger_middleware": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_messenger_middleware"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:messenger-middleware",
                        "description": "Create a new messenger middleware"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_messenger_middleware.lazy"
            ]
        },
        "maker.auto_command.make_migration": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_migration"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:migration",
                        "description": "Create a new migration based on database changes"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_migration.lazy"
            ]
        },
        "maker.auto_command.make_registration_form": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_registration_form"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:registration-form",
                        "description": "Create a new registration form system"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_registration_form.lazy"
            ]
        },
        "maker.auto_command.make_reset_password": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_reset_password"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:reset-password",
                        "description": "Create controller, entity, and repositories for use with symfonycasts\/reset-password-bundle"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_reset_password.lazy"
            ]
        },
        "maker.auto_command.make_schedule": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_schedule"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:schedule",
                        "description": "Create a scheduler component"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_schedule.lazy"
            ]
        },
        "maker.auto_command.make_security_custom": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_custom_authenticator"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:security:custom",
                        "description": "Create a custom security authenticator."
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_security_custom.lazy"
            ]
        },
        "maker.auto_command.make_security_form_login": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_form_login"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:security:form-login",
                        "description": "Generate the code needed for the form_login authenticator"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_security_form_login.lazy"
            ]
        },
        "maker.auto_command.make_serializer_encoder": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_serializer_encoder"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:serializer:encoder",
                        "description": "Create a new serializer encoder class"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_serializer_encoder.lazy"
            ]
        },
        "maker.auto_command.make_serializer_normalizer": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_serializer_normalizer"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:serializer:normalizer",
                        "description": "Create a new serializer normalizer class"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_serializer_normalizer.lazy"
            ]
        },
        "maker.auto_command.make_state_processor": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.maker.command.state_processor"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:state-processor",
                        "description": "Creates an API Platform state processor"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_state_processor.lazy"
            ]
        },
        "maker.auto_command.make_state_provider": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.maker.command.state_provider"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:state-provider",
                        "description": "Creates an API Platform state provider"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_state_provider.lazy"
            ]
        },
        "maker.auto_command.make_stimulus_controller": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_stimulus_controller"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:stimulus-controller",
                        "description": "Create a new Stimulus controller"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_stimulus_controller.lazy"
            ]
        },
        "maker.auto_command.make_test": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_test"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setAliases",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:test",
                        "description": "Create a new test class"
                    }
                },
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:unit-test",
                        "description": "Deprecated alias of \"make:test\""
                    }
                },
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:functional-test",
                        "description": "Deprecated alias of \"make:test\""
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_test.lazy"
            ]
        },
        "maker.auto_command.make_twig_component": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_twig_component"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:twig-component",
                        "description": "Create a Twig (or Live) component"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_twig_component.lazy"
            ]
        },
        "maker.auto_command.make_twig_extension": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_twig_extension"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:twig-extension",
                        "description": "Create a new Twig extension with its runtime class"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_twig_extension.lazy"
            ]
        },
        "maker.auto_command.make_user": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_user"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:user",
                        "description": "Create a new security user class"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_user.lazy"
            ]
        },
        "maker.auto_command.make_validator": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_validator"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:validator",
                        "description": "Create a new validator and constraint class"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_validator.lazy"
            ]
        },
        "maker.auto_command.make_voter": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_voter"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:voter",
                        "description": "Create a new security voter class"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_voter.lazy"
            ]
        },
        "maker.auto_command.make_webhook": {
            "class": "Symfony\\Bundle\\MakerBundle\\Command\\MakerCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Used as the Command class for the makers.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.maker.make_webhook"
                },
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.template_linter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "make:webhook",
                        "description": "Create a new Webhook"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".maker.auto_command.make_webhook.lazy"
            ]
        },
        "maker.autoloader_finder": {
            "class": "Symfony\\Bundle\\MakerBundle\\Util\\ComposerAutoloaderFinder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "App"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "maker.autoloader_util"
            ]
        },
        "maker.autoloader_util": {
            "class": "Symfony\\Bundle\\MakerBundle\\Util\\AutoloaderUtil",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.autoloader_finder"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "maker.file_manager"
            ]
        },
        "maker.console_error_listener": {
            "class": "Symfony\\Bundle\\MakerBundle\\Event\\ConsoleErrorSubscriber",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Prints certain exceptions in a pretty way and silences normal exception handling.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "maker.doctrine_helper": {
            "class": "Symfony\\Bundle\\MakerBundle\\Doctrine\\DoctrineHelper",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "App\\Entity",
                {
                    "type": "service",
                    "id": "doctrine"
                },
                {
                    "default": [
                        [
                            "App\\Entity",
                            {
                                "type": "service",
                                "id": "doctrine.orm.default_attribute_metadata_driver"
                            }
                        ]
                    ]
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "maker.entity_class_generator",
                "maker.maker.make_authenticator",
                "maker.maker.make_crud",
                "maker.maker.make_entity",
                "maker.maker.make_form",
                "maker.maker.make_registration_form",
                "maker.maker.make_reset_password",
                "maker.maker.make_user"
            ]
        },
        "maker.entity_class_generator": {
            "class": "Symfony\\Bundle\\MakerBundle\\Doctrine\\EntityClassGenerator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.doctrine_helper"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "maker.maker.make_entity",
                "maker.maker.make_reset_password",
                "maker.maker.make_user"
            ]
        },
        "maker.event_registry": {
            "class": "Symfony\\Bundle\\MakerBundle\\EventRegistry",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.event_dispatcher"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "maker.maker.make_listener",
                "maker.maker.make_subscriber"
            ]
        },
        "maker.file_link_formatter": {
            "class": "Symfony\\Bundle\\MakerBundle\\Util\\MakerFileLinkFormatter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.file_link_formatter"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "maker.file_manager",
                "maker.maker.make_migration"
            ]
        },
        "maker.file_manager": {
            "class": "Symfony\\Bundle\\MakerBundle\\FileManager",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "filesystem"
                },
                {
                    "type": "service",
                    "id": "maker.autoloader_util"
                },
                {
                    "type": "service",
                    "id": "maker.file_link_formatter"
                },
                "J:\\laragon\\www\\new3",
                "J:\\laragon\\www\\new3\/templates"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "maker.generator",
                "maker.php_compat_util",
                "maker.maker.make_authenticator",
                "maker.maker.make_twig_component",
                "maker.maker.make_docker_database",
                "maker.maker.make_entity",
                "maker.maker.make_message",
                "maker.maker.make_registration_form",
                "maker.maker.make_reset_password",
                "maker.maker.make_schedule",
                "maker.maker.make_user",
                "maker.maker.make_form_login",
                "maker.maker.make_custom_authenticator",
                "maker.maker.make_webhook",
                "maker.auto_command.make_auth",
                "maker.auto_command.make_command",
                "maker.auto_command.make_twig_component",
                "maker.auto_command.make_controller",
                "maker.auto_command.make_crud",
                "maker.auto_command.make_docker_database",
                "maker.auto_command.make_entity",
                "maker.auto_command.make_fixtures",
                "maker.auto_command.make_form",
                "maker.auto_command.make_listener",
                "maker.auto_command.make_message",
                "maker.auto_command.make_messenger_middleware",
                "maker.auto_command.make_registration_form",
                "maker.auto_command.make_reset_password",
                "maker.auto_command.make_schedule",
                "maker.auto_command.make_serializer_encoder",
                "maker.auto_command.make_serializer_normalizer",
                "maker.auto_command.make_twig_extension",
                "maker.auto_command.make_test",
                "maker.auto_command.make_validator",
                "maker.auto_command.make_voter",
                "maker.auto_command.make_user",
                "maker.auto_command.make_migration",
                "maker.auto_command.make_stimulus_controller",
                "maker.auto_command.make_security_form_login",
                "maker.auto_command.make_security_custom",
                "maker.auto_command.make_webhook",
                "maker.auto_command.make_state_processor",
                "maker.auto_command.make_state_provider"
            ]
        },
        "maker.generator": {
            "class": "Symfony\\Bundle\\MakerBundle\\Generator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                "App",
                null,
                {
                    "type": "service",
                    "id": "maker.template_component_generator"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "maker.entity_class_generator",
                "maker.renderer.form_type_renderer",
                "maker.maker.make_authenticator",
                "maker.maker.make_entity",
                "maker.maker.make_custom_authenticator",
                "maker.maker.make_webhook",
                "maker.auto_command.make_auth",
                "maker.auto_command.make_command",
                "maker.auto_command.make_twig_component",
                "maker.auto_command.make_controller",
                "maker.auto_command.make_crud",
                "maker.auto_command.make_docker_database",
                "maker.auto_command.make_entity",
                "maker.auto_command.make_fixtures",
                "maker.auto_command.make_form",
                "maker.auto_command.make_listener",
                "maker.auto_command.make_message",
                "maker.auto_command.make_messenger_middleware",
                "maker.auto_command.make_registration_form",
                "maker.auto_command.make_reset_password",
                "maker.auto_command.make_schedule",
                "maker.auto_command.make_serializer_encoder",
                "maker.auto_command.make_serializer_normalizer",
                "maker.auto_command.make_twig_extension",
                "maker.auto_command.make_test",
                "maker.auto_command.make_validator",
                "maker.auto_command.make_voter",
                "maker.auto_command.make_user",
                "maker.auto_command.make_migration",
                "maker.auto_command.make_stimulus_controller",
                "maker.auto_command.make_security_form_login",
                "maker.auto_command.make_security_custom",
                "maker.auto_command.make_webhook",
                "maker.auto_command.make_state_processor",
                "maker.auto_command.make_state_provider"
            ]
        },
        "maker.maker.make_authenticator": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeAuthenticator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.security_config_updater"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.doctrine_helper"
                },
                {
                    "type": "service",
                    "id": "maker.security_controller_builder"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_auth"
            ]
        },
        "maker.maker.make_command": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_command"
            ]
        },
        "maker.maker.make_controller": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeController",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_controller"
            ]
        },
        "maker.maker.make_crud": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeCrud",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.doctrine_helper"
                },
                {
                    "type": "service",
                    "id": "maker.renderer.form_type_renderer"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_crud"
            ]
        },
        "maker.maker.make_custom_authenticator": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\Security\\MakeCustomAuthenticator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_security_custom"
            ]
        },
        "maker.maker.make_docker_database": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeDockerDatabase",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.file_manager"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_docker_database"
            ]
        },
        "maker.maker.make_entity": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeEntity",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.doctrine_helper"
                },
                null,
                {
                    "type": "service",
                    "id": "maker.generator"
                },
                {
                    "type": "service",
                    "id": "maker.entity_class_generator"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_entity"
            ]
        },
        "maker.maker.make_fixtures": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeFixtures",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_fixtures"
            ]
        },
        "maker.maker.make_form": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeForm",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.doctrine_helper"
                },
                {
                    "type": "service",
                    "id": "maker.renderer.form_type_renderer"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_form"
            ]
        },
        "maker.maker.make_form_login": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\Security\\MakeFormLogin",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Generate Form Login Security using SecurityBundle's Authenticator.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.security_config_updater"
                },
                {
                    "type": "service",
                    "id": "maker.security_controller_builder"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_security_form_login"
            ]
        },
        "maker.maker.make_functional_test": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeFunctionalTest",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": true,
            "deprecation_message": "The \"maker.maker.make_functional_test\" service is deprecated, use \"maker.maker.make_test\" instead.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "maker.maker.make_listener": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.event_registry"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_listener"
            ]
        },
        "maker.maker.make_message": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeMessage",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.file_manager"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_message"
            ]
        },
        "maker.maker.make_messenger_middleware": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeMessengerMiddleware",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_messenger_middleware"
            ]
        },
        "maker.maker.make_migration": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeMigration",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "J:\\laragon\\www\\new3",
                {
                    "type": "service",
                    "id": "maker.file_link_formatter"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_migration"
            ]
        },
        "maker.maker.make_registration_form": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeRegistrationForm",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.renderer.form_type_renderer"
                },
                {
                    "type": "service",
                    "id": "maker.doctrine_helper"
                },
                {
                    "type": "service",
                    "id": "router.default"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_registration_form"
            ]
        },
        "maker.maker.make_reset_password": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeResetPassword",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.doctrine_helper"
                },
                {
                    "type": "service",
                    "id": "maker.entity_class_generator"
                },
                {
                    "type": "service",
                    "id": "router.default"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_reset_password"
            ]
        },
        "maker.maker.make_schedule": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeSchedule",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.file_manager"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_schedule"
            ]
        },
        "maker.maker.make_serializer_encoder": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeSerializerEncoder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_serializer_encoder"
            ]
        },
        "maker.maker.make_serializer_normalizer": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeSerializerNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_serializer_normalizer"
            ]
        },
        "maker.maker.make_stimulus_controller": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeStimulusController",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_stimulus_controller"
            ]
        },
        "maker.maker.make_subscriber": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeSubscriber",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": true,
            "deprecation_message": "The \"maker.maker.make_subscriber\" service is deprecated, use \"maker.maker.make_listener\" instead.",
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.event_registry"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "maker.maker.make_test": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeTest",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_test"
            ]
        },
        "maker.maker.make_twig_component": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeTwigComponent",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.file_manager"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_twig_component"
            ]
        },
        "maker.maker.make_twig_extension": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeTwigExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_twig_extension"
            ]
        },
        "maker.maker.make_unit_test": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeUnitTest",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": true,
            "deprecation_message": "The \"maker.maker.make_unit_test\" service is deprecated, use \"maker.maker.make_test\" instead.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "maker.maker.make_user": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeUser",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.user_class_builder"
                },
                {
                    "type": "service",
                    "id": "maker.security_config_updater"
                },
                {
                    "type": "service",
                    "id": "maker.entity_class_generator"
                },
                {
                    "type": "service",
                    "id": "maker.doctrine_helper"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_user"
            ]
        },
        "maker.maker.make_validator": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeValidator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_validator"
            ]
        },
        "maker.maker.make_voter": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeVoter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_voter"
            ]
        },
        "maker.maker.make_webhook": {
            "class": "Symfony\\Bundle\\MakerBundle\\Maker\\MakeWebhook",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.file_manager"
                },
                {
                    "type": "service",
                    "id": "maker.generator"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "maker.command",
                    "parameters": []
                }
            ],
            "usages": [
                "maker.auto_command.make_webhook"
            ]
        },
        "maker.php_compat_util": {
            "class": "Symfony\\Bundle\\MakerBundle\\Util\\PhpCompatUtil",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.file_manager"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "maker.renderer.form_type_renderer": {
            "class": "Symfony\\Bundle\\MakerBundle\\Renderer\\FormTypeRenderer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "maker.generator"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "maker.maker.make_crud",
                "maker.maker.make_form",
                "maker.maker.make_registration_form"
            ]
        },
        "maker.security_config_updater": {
            "class": "Symfony\\Bundle\\MakerBundle\\Security\\SecurityConfigUpdater",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "maker.maker.make_authenticator",
                "maker.maker.make_user",
                "maker.maker.make_form_login"
            ]
        },
        "maker.security_controller_builder": {
            "class": "Symfony\\Bundle\\MakerBundle\\Security\\SecurityControllerBuilder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "maker.maker.make_authenticator",
                "maker.maker.make_form_login"
            ]
        },
        "maker.template_component_generator": {
            "class": "Symfony\\Bundle\\MakerBundle\\Util\\TemplateComponentGenerator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                true,
                false,
                "App"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "maker.generator"
            ]
        },
        "maker.template_linter": {
            "class": "Symfony\\Bundle\\MakerBundle\\Util\\TemplateLinter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Linters used by make:* commands to cleanup the generated files.",
            "arguments": [
                "%env(default::string:MAKER_PHP_CS_FIXER_BINARY_PATH)%",
                "%env(default::string:MAKER_PHP_CS_FIXER_CONFIG_PATH)%"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "maker.auto_command.make_auth",
                "maker.auto_command.make_command",
                "maker.auto_command.make_twig_component",
                "maker.auto_command.make_controller",
                "maker.auto_command.make_crud",
                "maker.auto_command.make_docker_database",
                "maker.auto_command.make_entity",
                "maker.auto_command.make_fixtures",
                "maker.auto_command.make_form",
                "maker.auto_command.make_listener",
                "maker.auto_command.make_message",
                "maker.auto_command.make_messenger_middleware",
                "maker.auto_command.make_registration_form",
                "maker.auto_command.make_reset_password",
                "maker.auto_command.make_schedule",
                "maker.auto_command.make_serializer_encoder",
                "maker.auto_command.make_serializer_normalizer",
                "maker.auto_command.make_twig_extension",
                "maker.auto_command.make_test",
                "maker.auto_command.make_validator",
                "maker.auto_command.make_voter",
                "maker.auto_command.make_user",
                "maker.auto_command.make_migration",
                "maker.auto_command.make_stimulus_controller",
                "maker.auto_command.make_security_form_login",
                "maker.auto_command.make_security_custom",
                "maker.auto_command.make_webhook",
                "maker.auto_command.make_state_processor",
                "maker.auto_command.make_state_provider"
            ]
        },
        "maker.user_class_builder": {
            "class": "Symfony\\Bundle\\MakerBundle\\Security\\UserClassBuilder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Adds logic to implement UserInterface to an existing User class.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "maker.maker.make_user"
            ]
        },
        "mime_types": {
            "class": "Symfony\\Component\\Mime\\MimeTypes",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Manages MIME types and file extensions.",
            "arguments": [],
            "file": null,
            "calls": [
                "setDefault"
            ],
            "tags": [],
            "usages": [
                "Symfony\\Component\\Mime\\MimeTypesInterface",
                "Symfony\\Component\\Mime\\MimeTypeGuesserInterface",
                "liip_imagine.mime_type_guesser",
                "liip_imagine.extension_guesser",
                "serializer.normalizer.data_uri",
                "mime_types",
                "liip_imagine.binary.loader.prototype.filesystem"
            ]
        },
        "monolog.activation_strategy.not_found": {
            "class": "Symfony\\Bridge\\Monolog\\Handler\\FingersCrossed\\NotFoundActivationStrategy",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Activation strategy that ignores 404s for certain URLs.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "monolog.command.server_log": {
            "class": "Symfony\\Bridge\\Monolog\\Command\\ServerLogCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".monolog.command.server_log.lazy"
            ]
        },
        "monolog.formatter.chrome_php": {
            "class": "Monolog\\Formatter\\ChromePHPFormatter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Formats a log message according to the ChromePHP array format",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "monolog.formatter.gelf_message": {
            "class": "Monolog\\Formatter\\GelfMessageFormatter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Serializes a log message to GELF",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "monolog.formatter.html": {
            "class": "Monolog\\Formatter\\HtmlFormatter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Formats incoming records into an HTML table",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "monolog.formatter.json": {
            "class": "Monolog\\Formatter\\JsonFormatter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Encodes whatever record data is passed to it as json",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "monolog.formatter.line": {
            "class": "Monolog\\Formatter\\LineFormatter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Formats incoming records into a one-line string",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "monolog.formatter.loggly": {
            "class": "Monolog\\Formatter\\LogglyFormatter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Encodes message information into JSON in a format compatible with Loggly.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "monolog.formatter.logstash": {
            "class": "Monolog\\Formatter\\LogstashFormatter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Serializes a log message to Logstash Event Format",
            "arguments": [
                "app"
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "monolog.formatter.normalizer": {
            "class": "Monolog\\Formatter\\NormalizerFormatter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Normalizes incoming records to remove objects\/resources so it's easier to dump to various targets",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "monolog.formatter.scalar": {
            "class": "Monolog\\Formatter\\ScalarFormatter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Formats data into an associative array of scalar (+ null) values. Objects and arrays will be JSON encoded.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "monolog.formatter.wildfire": {
            "class": "Monolog\\Formatter\\WildfireFormatter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Serializes a log message according to Wildfire's header requirements",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "monolog.handler.console": {
            "class": "Symfony\\Bridge\\Monolog\\Handler\\ConsoleHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Writes logs to the console output depending on its verbosity setting.",
            "arguments": [
                null,
                true,
                [],
                []
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                },
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                "monolog.logger.idempotency",
                "services_resetter",
                "debug.event_dispatcher",
                "monolog.logger",
                "monolog.logger.request",
                "monolog.logger.console",
                "monolog.logger.cache",
                "monolog.logger.php",
                "monolog.logger.router",
                "monolog.logger.lock",
                "monolog.logger.profiler",
                "monolog.logger.debug",
                "monolog.logger.deprecation"
            ]
        },
        "monolog.handler.deprecation": {
            "class": "Monolog\\Handler\\StreamHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Stores to any stream resource",
            "arguments": [
                "J:\\laragon\\www\\new3\\var\\log\/deprecation_dev.log",
                "info",
                true,
                null,
                false
            ],
            "file": null,
            "calls": [
                "pushProcessor"
            ],
            "tags": [
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "monolog.logger.deprecation"
            ]
        },
        "monolog.handler.doctrine": {
            "class": "Monolog\\Handler\\StreamHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Stores to any stream resource",
            "arguments": [
                "J:\\laragon\\www\\new3\\var\\log\/doctrine_dev.log",
                "debug",
                true,
                null,
                false
            ],
            "file": null,
            "calls": [
                "pushProcessor"
            ],
            "tags": [
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "monolog.logger.doctrine"
            ]
        },
        "monolog.handler.fingers_crossed.error_level_activation_strategy": {
            "class": "Monolog\\Handler\\FingersCrossed\\ErrorLevelActivationStrategy",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Error level based activation strategy.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "monolog.handler.idempotency": {
            "class": "Monolog\\Handler\\StreamHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Stores to any stream resource",
            "arguments": [
                "J:\\laragon\\www\\new3\\var\\log\/idempotency_dev.log",
                "info",
                true,
                null,
                false
            ],
            "file": null,
            "calls": [
                "pushProcessor"
            ],
            "tags": [
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "monolog.logger.idempotency",
                "services_resetter"
            ]
        },
        "monolog.handler.main": {
            "class": "Monolog\\Handler\\StreamHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Stores to any stream resource",
            "arguments": [
                "J:\\laragon\\www\\new3\\var\\log\/dev.log",
                "debug",
                true,
                null,
                false
            ],
            "file": null,
            "calls": [
                "pushProcessor"
            ],
            "tags": [
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "monolog.logger.idempotency",
                "services_resetter",
                "monolog.logger",
                "monolog.logger.request",
                "monolog.logger.console",
                "monolog.logger.cache",
                "monolog.logger.php",
                "monolog.logger.router",
                "monolog.logger.lock",
                "monolog.logger.profiler",
                "monolog.logger.debug",
                "monolog.logger.deprecation"
            ]
        },
        "monolog.handler.null_internal": {
            "class": "Monolog\\Handler\\NullHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Blackhole",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "monolog.logger.event"
            ]
        },
        "monolog.handler.request": {
            "class": "Monolog\\Handler\\StreamHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Stores to any stream resource",
            "arguments": [
                "J:\\laragon\\www\\new3\\var\\log\/request_dev.log",
                "info",
                true,
                null,
                false
            ],
            "file": null,
            "calls": [
                "pushProcessor"
            ],
            "tags": [
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "monolog.logger.request"
            ]
        },
        "monolog.handler.security": {
            "class": "Monolog\\Handler\\StreamHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Stores to any stream resource",
            "arguments": [
                "J:\\laragon\\www\\new3\\var\\log\/security_dev.log",
                "info",
                true,
                null,
                false
            ],
            "file": null,
            "calls": [
                "pushProcessor"
            ],
            "tags": [
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "monolog.logger.security"
            ]
        },
        "monolog.http_client": {
            "class": "Symfony\\Contracts\\HttpClient\\HttpClientInterface",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "factory_class": "Symfony\\Component\\HttpClient\\HttpClient",
            "factory_method": "create",
            "tags": [],
            "usages": []
        },
        "monolog.logger": {
            "class": "Monolog\\Logger",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Monolog log channel",
            "arguments": [
                "app"
            ],
            "file": null,
            "calls": [
                "useMicrosecondTimestamps",
                "pushHandler",
                "pushHandler"
            ],
            "tags": [],
            "usages": [
                "logger",
                "Psr\\Log\\LoggerInterface",
                "App\\EventListener\\ProductImageCacheListener",
                "App\\Service\\InventoryService",
                "App\\Service\\LoggerService",
                "App\\Service\\ProductVariantService",
                "config_builder.warmer",
                "error_handler.error_renderer.html",
                "security.authentication.success_handler.main.form_login",
                "doctrine.migrations.dependency_factory",
                "api_platform.symfony.main_controller",
                "api_platform.error_listener",
                "api_platform.metadata.resource.metadata_collection_factory.attributes",
                "api_platform.metadata.resource.metadata_collection_factory.xml",
                "api_platform.metadata.resource.metadata_collection_factory.parameter",
                "api_platform.metadata.resource.metadata_collection_factory.yaml",
                "api_platform.doctrine.orm.order_filter.instance",
                "api_platform.doctrine.orm.range_filter.instance",
                "api_platform.doctrine.orm.date_filter.instance",
                "api_platform.doctrine.orm.backed_enum_filter.instance",
                "api_platform.doctrine.orm.boolean_filter.instance",
                "api_platform.doctrine.orm.numeric_filter.instance",
                "api_platform.doctrine.orm.exists_filter.instance",
                "api_platform.doctrine.orm.search_filter.instance",
                "liip_imagine.service.filter",
                "annotated_app_entity_carousel_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_city_api_platform_doctrine_orm_filter_order_filter",
                "annotated_app_entity_city_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_fias_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_option_value_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_order_api_platform_doctrine_orm_filter_order_filter",
                "annotated_app_entity_order_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_product_api_platform_doctrine_orm_filter_order_filter",
                "annotated_app_entity_product_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_product_api_platform_doctrine_orm_filter_boolean_filter",
                "annotated_app_entity_product_api_platform_doctrine_orm_filter_range_filter",
                "annotated_app_entity_product_to_category_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_pvz_points_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_pvz_price_api_platform_doctrine_orm_filter_search_filter",
                ".service_locator.ECaP3MA"
            ]
        },
        "monolog.logger.cache": {
            "class": "Monolog\\Logger",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Monolog log channel",
            "arguments": [
                "cache"
            ],
            "file": null,
            "calls": [
                "pushHandler",
                "pushHandler"
            ],
            "tags": [],
            "usages": [
                "Psr\\Log\\LoggerInterface $cacheLogger",
                "cache.app.recorder_inner",
                "cache.system.recorder_inner",
                "cache.validator.recorder_inner",
                "cache.serializer.recorder_inner",
                "cache.property_info.recorder_inner",
                "cache.validator_expression_language.recorder_inner",
                "cache.webpack_encore.recorder_inner",
                "cache.security_expression_language.recorder_inner",
                "cache.security_is_granted_attribute_expression_language.recorder_inner",
                "cache.security_is_csrf_token_valid_attribute_expression_language.recorder_inner",
                "api_platform.cache.route_name_resolver.recorder_inner",
                "api_platform.cache.metadata.resource.recorder_inner",
                "api_platform.cache.metadata.property.recorder_inner",
                "api_platform.cache.metadata.resource_collection.recorder_inner",
                "api_platform.cache.openapi.recorder_inner",
                "cache.ux.twig_component.recorder_inner"
            ]
        },
        "monolog.logger.console": {
            "class": "Monolog\\Logger",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Monolog log channel",
            "arguments": [
                "console"
            ],
            "file": null,
            "calls": [
                "pushHandler",
                "pushHandler"
            ],
            "tags": [],
            "usages": [
                "Psr\\Log\\LoggerInterface $consoleLogger",
                "console.error_listener"
            ]
        },
        "monolog.logger.debug": {
            "class": "Monolog\\Logger",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Monolog log channel",
            "arguments": [
                "debug"
            ],
            "file": null,
            "calls": [
                "pushHandler",
                "pushHandler"
            ],
            "tags": [],
            "usages": [
                "Psr\\Log\\LoggerInterface $debugLogger",
                "var_dumper.dump_server"
            ]
        },
        "monolog.logger.deprecation": {
            "class": "Monolog\\Logger",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Monolog log channel",
            "arguments": [
                "deprecation"
            ],
            "file": null,
            "calls": [
                "pushHandler",
                "pushHandler",
                "pushHandler"
            ],
            "tags": [],
            "usages": [
                "Psr\\Log\\LoggerInterface $deprecationLogger",
                "debug.error_handler_configurator"
            ]
        },
        "monolog.logger.doctrine": {
            "class": "Monolog\\Logger",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Monolog log channel",
            "arguments": [
                "doctrine"
            ],
            "file": null,
            "calls": [
                "pushHandler"
            ],
            "tags": [],
            "usages": [
                "Psr\\Log\\LoggerInterface $doctrineLogger",
                "doctrine.dbal.logging_middleware.default"
            ]
        },
        "monolog.logger.event": {
            "class": "Monolog\\Logger",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Monolog log channel",
            "arguments": [
                "event"
            ],
            "file": null,
            "calls": [
                "pushHandler"
            ],
            "tags": [],
            "usages": [
                "Psr\\Log\\LoggerInterface $eventLogger",
                "debug.event_dispatcher",
                "debug.security.event_dispatcher.main"
            ]
        },
        "monolog.logger.idempotency": {
            "class": "Monolog\\Logger",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Monolog log channel",
            "arguments": [
                "idempotency"
            ],
            "file": null,
            "calls": [
                "pushHandler",
                "pushHandler",
                "pushHandler"
            ],
            "tags": [],
            "usages": [
                "Psr\\Log\\LoggerInterface $idempotencyLogger",
                "App\\Controller\\Api\\CartApiController"
            ]
        },
        "monolog.logger.lock": {
            "class": "Monolog\\Logger",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Monolog log channel",
            "arguments": [
                "lock"
            ],
            "file": null,
            "calls": [
                "pushHandler",
                "pushHandler"
            ],
            "tags": [],
            "usages": [
                "Psr\\Log\\LoggerInterface $lockLogger",
                "lock.default.factory"
            ]
        },
        "monolog.logger.php": {
            "class": "Monolog\\Logger",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Monolog log channel",
            "arguments": [
                "php"
            ],
            "file": null,
            "calls": [
                "pushHandler",
                "pushHandler"
            ],
            "tags": [],
            "usages": [
                "Psr\\Log\\LoggerInterface $phpLogger",
                "debug.error_handler_configurator"
            ]
        },
        "monolog.logger.profiler": {
            "class": "Monolog\\Logger",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Monolog log channel",
            "arguments": [
                "profiler"
            ],
            "file": null,
            "calls": [
                "pushHandler",
                "pushHandler"
            ],
            "tags": [],
            "usages": [
                "Psr\\Log\\LoggerInterface $profilerLogger",
                "profiler",
                "data_collector.logger"
            ]
        },
        "monolog.logger.request": {
            "class": "Monolog\\Logger",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Monolog log channel",
            "arguments": [
                "request"
            ],
            "file": null,
            "calls": [
                "pushHandler",
                "pushHandler",
                "pushHandler"
            ],
            "tags": [],
            "usages": [
                "Psr\\Log\\LoggerInterface $requestLogger",
                "exception_listener",
                "router_listener",
                "debug.controller_resolver.inner"
            ]
        },
        "monolog.logger.router": {
            "class": "Monolog\\Logger",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Monolog log channel",
            "arguments": [
                "router"
            ],
            "file": null,
            "calls": [
                "pushHandler",
                "pushHandler"
            ],
            "tags": [],
            "usages": [
                "Psr\\Log\\LoggerInterface $routerLogger",
                "router.default"
            ]
        },
        "monolog.logger.security": {
            "class": "Monolog\\Logger",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Monolog log channel",
            "arguments": [
                "security"
            ],
            "file": null,
            "calls": [
                "pushHandler"
            ],
            "tags": [],
            "usages": [
                "Psr\\Log\\LoggerInterface $securityLogger",
                "security.channel_listener",
                "security.context_listener",
                "security.context_listener.0",
                "security.authentication.failure_handler.main.form_login",
                "security.authenticator.manager.main",
                "security.exception_listener.main"
            ]
        },
        "monolog.logger_prototype": {
            "class": "Monolog\\Logger",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Monolog log channel",
            "arguments": [
                ""
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "monolog.processor.psr_log_message": {
            "class": "Monolog\\Processor\\PsrLogMessageProcessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Processes a record's message according to PSR-3 rules",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "monolog.handler.main",
                "monolog.handler.doctrine",
                "monolog.handler.security",
                "monolog.handler.request",
                "monolog.handler.deprecation",
                "monolog.handler.idempotency"
            ]
        },
        "name_based_uuid.factory": {
            "class": "Symfony\\Component\\Uid\\Factory\\NameBasedUuidFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "abstract",
                    "text": "Please set the \"framework.uid.name_based_uuid_namespace\" configuration option to use the \"name_based_uuid.factory\" service"
                }
            ],
            "file": null,
            "factory_service": "uuid.factory",
            "factory_method": "nameBased",
            "tags": [],
            "usages": [
                "Symfony\\Component\\Uid\\Factory\\NameBasedUuidFactory"
            ]
        },
        "nelmio_cors.cacheable_response_vary_listener": {
            "class": "Nelmio\\CorsBundle\\EventListener\\CacheableResponseVaryListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "When a response is cacheable the `Vary` header has to include `Origin`.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_listener",
                    "parameters": {
                        "event": "kernel.response",
                        "method": "onResponse",
                        "priority": -10
                    }
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "nelmio_cors.cors_listener": {
            "class": "Nelmio\\CorsBundle\\EventListener\\CorsListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Adds CORS headers and handles pre-flight requests",
            "arguments": [
                {
                    "type": "service",
                    "id": "nelmio_cors.options_resolver"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_listener",
                    "parameters": {
                        "event": "kernel.request",
                        "method": "onKernelRequest",
                        "priority": 250
                    }
                },
                {
                    "name": "kernel.event_listener",
                    "parameters": {
                        "event": "kernel.response",
                        "method": "onKernelResponse",
                        "priority": 0
                    }
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "nelmio_cors.options_provider.config": {
            "class": "Nelmio\\CorsBundle\\Options\\ConfigProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Default CORS configuration provider.",
            "arguments": [
                "%nelmio_cors.map%",
                "%nelmio_cors.defaults%"
            ],
            "file": null,
            "tags": [
                {
                    "name": "nelmio_cors.options_provider",
                    "parameters": {
                        "priority": -1
                    }
                }
            ],
            "usages": [
                "nelmio_cors.options_resolver"
            ]
        },
        "nelmio_cors.options_resolver": {
            "class": "Nelmio\\CorsBundle\\Options\\Resolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "CORS options resolver.",
            "arguments": [
                [
                    {
                        "type": "service",
                        "id": "nelmio_cors.options_provider.config"
                    }
                ]
            ],
            "file": null,
            "tags": [],
            "usages": [
                "nelmio_cors.cors_listener"
            ]
        },
        "parameter_bag": {
            "class": "Symfony\\Component\\DependencyInjection\\ParameterBag\\ContainerBag",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "service_container"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\DependencyInjection\\ParameterBag\\ContainerBagInterface",
                "Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBagInterface",
                ".Psr\\Container\\ContainerInterface $parameter_bag",
                "Psr\\Container\\ContainerInterface $parameterBag",
                "App\\Command\\ImagesCacheWarmupCommand",
                "App\\Service\\PaginationService",
                "router.default",
                ".service_locator.ZyP9f7K"
            ]
        },
        "process.messenger.process_message_handler": {
            "class": "Symfony\\Component\\Process\\Messenger\\RunProcessMessageHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "messenger.message_handler",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "profiler": {
            "class": "Symfony\\Component\\HttpKernel\\Profiler\\Profiler",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Profiler.",
            "arguments": [
                {
                    "type": "service",
                    "id": "profiler.storage"
                },
                {
                    "type": "service",
                    "id": "monolog.logger.profiler"
                },
                true
            ],
            "file": null,
            "calls": [
                "add",
                "add",
                "add",
                "add",
                "add",
                "add",
                "add",
                "add",
                "add",
                "add",
                "add",
                "add",
                "add",
                "add",
                "add",
                "add",
                "add",
                "add",
                "add"
            ],
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "profiler"
                    }
                },
                {
                    "name": "container.private",
                    "parameters": {
                        "package": "symfony\/framework-bundle",
                        "version": 5.4
                    }
                },
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "profiler_listener",
                ".lazy_profiler",
                "Doctrine\\Bundle\\DoctrineBundle\\Controller\\ProfilerController",
                "web_profiler.controller.profiler",
                "web_profiler.controller.router",
                "web_profiler.controller.exception_panel",
                ".service_locator.l73xxOy"
            ]
        },
        "profiler.is_disabled_state_checker": {
            "class": "Closure",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                [
                    {
                        "type": "service",
                        "id": "profiler.state_checker"
                    },
                    "isProfilerDisabled"
                ]
            ],
            "file": null,
            "factory_class": "Closure",
            "factory_method": "fromCallable",
            "tags": [],
            "usages": [
                "cache.app",
                "cache.system",
                "cache.validator",
                "cache.serializer",
                "cache.property_info",
                "debug.event_dispatcher",
                "cache.validator_expression_language",
                "debug.validator",
                "cache.webpack_encore",
                "cache.security_expression_language",
                "cache.security_is_granted_attribute_expression_language",
                "cache.security_is_csrf_token_valid_attribute_expression_language",
                "cache.doctrine.orm.default.result",
                "cache.doctrine.orm.default.query",
                "api_platform.cache.route_name_resolver",
                "api_platform.cache.metadata.resource",
                "api_platform.cache.metadata.property",
                "api_platform.cache.metadata.resource_collection",
                "api_platform.cache.openapi",
                "cache.ux.twig_component"
            ]
        },
        "profiler.state_checker": {
            "class": "Symfony\\Component\\HttpKernel\\Profiler\\ProfilerStateChecker",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.l73xxOy"
                },
                {
                    "type": "service",
                    "id": ".17_bool~4VeSJ51"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "profiler.is_disabled_state_checker"
            ]
        },
        "profiler.storage": {
            "class": "Symfony\\Component\\HttpKernel\\Profiler\\FileProfilerStorage",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Storage for profiler using files.",
            "arguments": [
                "file:J:\/laragon\/www\/new3\/var\/cache\/dev\/profiler"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "profiler"
            ]
        },
        "profiler_listener": {
            "class": "Symfony\\Component\\HttpKernel\\EventListener\\ProfilerListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "ProfilerListener collects data for the current request by listening to the kernel events.",
            "arguments": [
                {
                    "type": "service",
                    "id": "profiler"
                },
                {
                    "type": "service",
                    "id": "request_stack"
                },
                null,
                false,
                false,
                null
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "property_accessor": {
            "class": "Symfony\\Component\\PropertyAccess\\PropertyAccessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Default implementation of {@link PropertyAccessorInterface}.",
            "arguments": [
                3,
                2,
                {
                    "type": "service",
                    "id": "cache.property_access"
                },
                {
                    "type": "service",
                    "id": "property_info.reflection_extractor"
                },
                {
                    "type": "service",
                    "id": "property_info.reflection_extractor"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\PropertyAccess\\PropertyAccessorInterface",
                "serializer.property_accessor",
                "api_platform.property_accessor",
                "serializer.denormalizer.unwrapping",
                "serializer.normalizer.object",
                "api_platform.serializer.normalizer.item",
                "api_platform.api.identifiers_extractor",
                ".2_ObjectNormalizer~1OK917Z",
                "api_platform.jsonld.normalizer.item",
                "api_platform.hydra.normalizer.partial_collection_view",
                "api_platform.doctrine.orm.search_filter.instance",
                "ux.twig_component.component_factory",
                "ux.twig_component.component_properties",
                "ux.live_component.component_hydrator",
                "ux.live_component.event_listener.data_model_props_subscriber",
                "ux.live_component.query_string_initializer_subscriber",
                "turbo.id_accessor",
                "annotated_app_entity_carousel_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_city_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_fias_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_option_value_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_order_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_product_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_product_to_category_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_pvz_points_api_platform_doctrine_orm_filter_search_filter",
                "annotated_app_entity_pvz_price_api_platform_doctrine_orm_filter_search_filter"
            ]
        },
        "property_info": {
            "class": "Symfony\\Component\\PropertyInfo\\PropertyInfoExtractor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Default {@see PropertyInfoExtractorInterface} implementation.",
            "arguments": [
                [
                    {
                        "type": "service",
                        "id": "property_info.serializer_extractor"
                    },
                    {
                        "type": "service",
                        "id": "property_info.reflection_extractor"
                    },
                    {
                        "type": "service",
                        "id": "doctrine.orm.default_entity_manager.property_info_extractor"
                    }
                ],
                [
                    {
                        "type": "service",
                        "id": "property_info.constructor_extractor"
                    },
                    {
                        "type": "service",
                        "id": "doctrine.orm.default_entity_manager.property_info_extractor"
                    },
                    {
                        "type": "service",
                        "id": "property_info.phpstan_extractor"
                    },
                    {
                        "type": "service",
                        "id": "property_info.php_doc_extractor"
                    },
                    {
                        "type": "service",
                        "id": "property_info.reflection_extractor"
                    }
                ],
                [
                    {
                        "type": "service",
                        "id": "property_info.php_doc_extractor"
                    }
                ],
                [
                    {
                        "type": "service",
                        "id": "doctrine.orm.default_entity_manager.property_info_extractor"
                    },
                    {
                        "type": "service",
                        "id": "property_info.reflection_extractor"
                    }
                ],
                [
                    {
                        "type": "service",
                        "id": "property_info.reflection_extractor"
                    }
                ]
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\PropertyInfo\\PropertyAccessExtractorInterface",
                "Symfony\\Component\\PropertyInfo\\PropertyDescriptionExtractorInterface",
                "Symfony\\Component\\PropertyInfo\\PropertyInfoExtractorInterface",
                "Symfony\\Component\\PropertyInfo\\PropertyTypeExtractorInterface",
                "Symfony\\Component\\PropertyInfo\\PropertyListExtractorInterface",
                "Symfony\\Component\\PropertyInfo\\PropertyInitializableExtractorInterface",
                "api_platform.property_info",
                "serializer.normalizer.object",
                "serializer.normalizer.property",
                "validator.property_info_loader",
                "api_platform.metadata.property.name_collection_factory.property_info",
                "api_platform.metadata.property.metadata_factory.property_info",
                ".2_ObjectNormalizer~1OK917Z",
                "ux.live_component.metadata_factory"
            ]
        },
        "property_info.constructor_extractor": {
            "class": "Symfony\\Component\\PropertyInfo\\Extractor\\ConstructorExtractor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Extracts the constructor argument type using ConstructorArgumentTypeExtractorInterface implementations.",
            "arguments": [
                [
                    {
                        "type": "service",
                        "id": "property_info.phpstan_extractor"
                    },
                    {
                        "type": "service",
                        "id": "property_info.php_doc_extractor"
                    },
                    {
                        "type": "service",
                        "id": "property_info.reflection_extractor"
                    }
                ]
            ],
            "file": null,
            "tags": [
                {
                    "name": "property_info.type_extractor",
                    "parameters": {
                        "priority": -999
                    }
                }
            ],
            "usages": [
                "property_info"
            ]
        },
        "property_info.php_doc_extractor": {
            "class": "Symfony\\Component\\PropertyInfo\\Extractor\\PhpDocExtractor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Extracts data using a PHPDoc parser.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "property_info.description_extractor",
                    "parameters": {
                        "priority": -1000
                    }
                },
                {
                    "name": "property_info.type_extractor",
                    "parameters": {
                        "priority": -1001
                    }
                },
                {
                    "name": "property_info.constructor_extractor",
                    "parameters": {
                        "priority": -1001
                    }
                }
            ],
            "usages": [
                "property_info",
                "property_info.constructor_extractor"
            ]
        },
        "property_info.phpstan_extractor": {
            "class": "Symfony\\Component\\PropertyInfo\\Extractor\\PhpStanExtractor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Extracts data using PHPStan parser.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "property_info.type_extractor",
                    "parameters": {
                        "priority": -1000
                    }
                },
                {
                    "name": "property_info.constructor_extractor",
                    "parameters": {
                        "priority": -1000
                    }
                }
            ],
            "usages": [
                "property_info",
                "property_info.constructor_extractor"
            ]
        },
        "property_info.reflection_extractor": {
            "class": "Symfony\\Component\\PropertyInfo\\Extractor\\ReflectionExtractor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Extracts data using the reflection API.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "property_info.list_extractor",
                    "parameters": {
                        "priority": -1000
                    }
                },
                {
                    "name": "property_info.type_extractor",
                    "parameters": {
                        "priority": -1002
                    }
                },
                {
                    "name": "property_info.constructor_extractor",
                    "parameters": {
                        "priority": -1002
                    }
                },
                {
                    "name": "property_info.access_extractor",
                    "parameters": {
                        "priority": -1000
                    }
                },
                {
                    "name": "property_info.initializable_extractor",
                    "parameters": {
                        "priority": -1000
                    }
                }
            ],
            "usages": [
                "Symfony\\Component\\PropertyInfo\\PropertyReadInfoExtractorInterface",
                "Symfony\\Component\\PropertyInfo\\PropertyWriteInfoExtractorInterface",
                "property_accessor",
                "property_info",
                "property_info.constructor_extractor"
            ]
        },
        "property_info.serializer_extractor": {
            "class": "Symfony\\Component\\PropertyInfo\\Extractor\\SerializerExtractor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Lists available properties using Symfony Serializer Component metadata.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.serializer.mapping.class_metadata_factory"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "property_info.list_extractor",
                    "parameters": {
                        "priority": -999
                    }
                }
            ],
            "usages": [
                "property_info"
            ]
        },
        "random_based_uuid.factory": {
            "class": "Symfony\\Component\\Uid\\Factory\\RandomBasedUuidFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "factory_service": "uuid.factory",
            "factory_method": "randomBased",
            "tags": [],
            "usages": [
                "Symfony\\Component\\Uid\\Factory\\RandomBasedUuidFactory"
            ]
        },
        "request_stack": {
            "class": "Symfony\\Component\\HttpFoundation\\RequestStack",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Request stack that controls the lifecycle of requests.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "resetRequestFormats",
                        "on_invalid": "ignore"
                    }
                }
            ],
            "usages": [
                "Symfony\\Component\\HttpFoundation\\RequestStack",
                ".32_RequestContextProvider~4VeSJ51",
                ".18_bool~4VeSJ51",
                ".11_~4VeSJ51",
                ".10_~4VeSJ51",
                ".2_~4VeSJ51",
                ".1_~4VeSJ51",
                "App\\Command\\SessionClearCommand",
                "App\\EventSubscriber\\DeliveryDefaultSubscriber",
                "App\\Service\\CartContext",
                "App\\Service\\CartManager",
                "App\\Service\\CartSessionStorage",
                "App\\Service\\CheckoutContext",
                "App\\Service\\DeliveryContext",
                "App\\State\\ProductStateProcessor",
                "App\\Twig\\Components\\CartCounter",
                "locale_listener",
                "http_kernel",
                "url_helper",
                "services_resetter",
                "locale_aware_listener",
                "fragment.handler",
                "fragment.uri_generator",
                "assets.context",
                "debug.file_link_formatter",
                "router_listener",
                "session.factory",
                "security.csrf.token_storage",
                "security.csrf.token_manager",
                "profiler_listener",
                ".virtual_request_stack",
                "twig.app_variable",
                "twig.extension.weblink",
                "security.authentication_utils",
                "security.impersonate_url_generator",
                "security.logout_url_generator",
                "security.user_authenticator",
                "ux.live_component.query_string_initializer_subscriber",
                "debug.security.event_dispatcher.main",
                ".service_locator.ZyP9f7K",
                ".service_locator.ECaP3MA",
                ".service_locator.mDV6p8L",
                ".service_locator.2QMaG2L"
            ]
        },
        "response_listener": {
            "class": "Symfony\\Component\\HttpKernel\\EventListener\\ResponseListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "ResponseListener fixes the Response headers based on the Request.",
            "arguments": [
                "UTF-8",
                false
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "reverse_container": {
            "class": "Symfony\\Component\\DependencyInjection\\ReverseContainer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Turns public and \"container.reversible\" services back to their ids.",
            "arguments": [
                {
                    "type": "service",
                    "id": "service_container"
                },
                {
                    "type": "service",
                    "id": ".service_locator.NLcq8cs"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\DependencyInjection\\ReverseContainer",
                ".service_locator.NLcq8cs"
            ]
        },
        "router.cache_warmer": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\CacheWarmer\\RouterCacheWarmer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Generates the router matcher and generator classes.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.qXR9Hv0.router.cache_warmer"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.service_subscriber",
                    "parameters": {
                        "id": "router"
                    }
                },
                {
                    "name": "kernel.cache_warmer",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "router.default": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Routing\\Router",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "This Router creates the Loader only when the cache is empty.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.9zR6mch.router.default"
                },
                "kernel::loadRoutes",
                {
                    "cache_dir": "J:\/laragon\/www\/new3\/var\/cache\/dev",
                    "debug": true,
                    "generator_class": "Symfony\\Component\\Routing\\Generator\\CompiledUrlGenerator",
                    "generator_dumper_class": "Symfony\\Component\\Routing\\Generator\\Dumper\\CompiledUrlGeneratorDumper",
                    "matcher_class": "Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableCompiledUrlMatcher",
                    "matcher_dumper_class": "Symfony\\Component\\Routing\\Matcher\\Dumper\\CompiledUrlMatcherDumper",
                    "strict_requirements": true,
                    "resource_type": "service"
                },
                {
                    "type": "service",
                    "id": "router.request_context"
                },
                {
                    "type": "service",
                    "id": "parameter_bag"
                },
                {
                    "type": "service",
                    "id": "monolog.logger.router"
                },
                "en"
            ],
            "file": null,
            "calls": [
                "setConfigCacheFactory",
                "addExpressionLanguageProvider"
            ],
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "router"
                    }
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": {
                        "id": "routing.loader"
                    }
                }
            ],
            "usages": [
                "router",
                "Symfony\\Component\\Routing\\RouterInterface",
                "Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface",
                "Symfony\\Component\\Routing\\Matcher\\UrlMatcherInterface",
                "Symfony\\Component\\Routing\\RequestContextAwareInterface",
                "App\\Service\\BreadcrumbBuilder",
                "locale_listener",
                "url_helper",
                "console.command.router_debug",
                "console.command.router_match",
                "router_listener",
                "Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController",
                "console_profiler_listener",
                "twig.extension.routing",
                "security.logout_url_generator",
                "security.http_utils",
                "maker.maker.make_registration_form",
                "maker.maker.make_reset_password",
                "api_platform.router",
                "api_platform.swagger_ui.processor",
                "web_profiler.controller.profiler",
                "web_profiler.controller.router",
                "debug.file_link_formatter.url_format",
                "web_profiler.debug_toolbar",
                "liip_imagine.cache.manager",
                "ux.live_component.live_url_subscriber",
                "ux.live_component.twig.component_runtime",
                "ux.live_component.live_controller_attributes_creator",
                ".service_locator.ZyP9f7K",
                ".service_locator.qXR9Hv0"
            ]
        },
        "router.expression_language_provider": {
            "class": "Symfony\\Component\\Routing\\Matcher\\ExpressionLanguageProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Exposes functions defined in the request context to route conditions.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.u.4FiKa"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "routing.expression_language_provider",
                    "parameters": []
                }
            ],
            "usages": [
                "router.default",
                "router.request_context"
            ]
        },
        "router.request_context": {
            "class": "Symfony\\Component\\Routing\\RequestContext",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Holds information about the current request.",
            "arguments": [
                "",
                "localhost",
                "http",
                80,
                443
            ],
            "file": null,
            "factory_class": null,
            "factory_method": "fromUri",
            "calls": [
                "setParameter"
            ],
            "tags": [],
            "usages": [
                "Symfony\\Component\\Routing\\RequestContext",
                ".20_int~4VeSJ51",
                ".19_int~4VeSJ51",
                ".6_int~4VeSJ51",
                ".5_int~4VeSJ51",
                ".4_bool~4VeSJ51",
                ".3_string~4VeSJ51",
                "router.default",
                "router_listener",
                "liip_imagine.cache.resolver.default",
                "liip_imagine.cache.resolver.no_cache_web_path"
            ]
        },
        "router_listener": {
            "class": "Symfony\\Component\\HttpKernel\\EventListener\\RouterListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Initializes the context from the request and sets request attributes based on a matching route.",
            "arguments": [
                {
                    "type": "service",
                    "id": "router.default"
                },
                {
                    "type": "service",
                    "id": "request_stack"
                },
                {
                    "type": "service",
                    "id": "router.request_context"
                },
                {
                    "type": "service",
                    "id": "monolog.logger.request"
                },
                "J:\\laragon\\www\\new3",
                true
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "request"
                    }
                },
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "routing.loader": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Routing\\DelegatingLoader",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "DelegatingLoader delegates route loading to other loaders using a loader resolver.",
            "arguments": [
                {
                    "type": "service",
                    "id": "routing.resolver"
                },
                {
                    "utf8": true
                },
                []
            ],
            "file": null,
            "tags": [],
            "usages": [
                ".service_locator.9zR6mch"
            ]
        },
        "routing.loader.attribute": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Routing\\AttributeRouteControllerLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "AttributeRouteControllerLoader is an implementation of AttributeClassLoader that sets the '_controller' default based on the class and method names.",
            "arguments": [
                "dev"
            ],
            "file": null,
            "tags": [
                {
                    "name": "routing.loader",
                    "parameters": {
                        "priority": -10
                    }
                }
            ],
            "usages": [
                "routing.resolver",
                "routing.loader.attribute.directory",
                "routing.loader.attribute.file"
            ]
        },
        "routing.loader.attribute.directory": {
            "class": "Symfony\\Component\\Routing\\Loader\\AttributeDirectoryLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "AttributeDirectoryLoader loads routing information from attributes set on PHP classes and methods.",
            "arguments": [
                {
                    "type": "service",
                    "id": "file_locator"
                },
                {
                    "type": "service",
                    "id": "routing.loader.attribute"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "routing.loader",
                    "parameters": {
                        "priority": -10
                    }
                }
            ],
            "usages": [
                "routing.resolver"
            ]
        },
        "routing.loader.attribute.file": {
            "class": "Symfony\\Component\\Routing\\Loader\\AttributeFileLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "AttributeFileLoader loads routing information from attributes set on a PHP class and its methods.",
            "arguments": [
                {
                    "type": "service",
                    "id": "file_locator"
                },
                {
                    "type": "service",
                    "id": "routing.loader.attribute"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "routing.loader",
                    "parameters": {
                        "priority": -10
                    }
                }
            ],
            "usages": [
                "routing.resolver"
            ]
        },
        "routing.loader.container": {
            "class": "Symfony\\Component\\Routing\\Loader\\ContainerLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A route loader that executes a service from a PSR-11 container to load the routes.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.rhF__EI"
                },
                "dev"
            ],
            "file": null,
            "tags": [
                {
                    "name": "routing.loader",
                    "parameters": []
                }
            ],
            "usages": [
                "routing.resolver"
            ]
        },
        "routing.loader.directory": {
            "class": "Symfony\\Component\\Routing\\Loader\\DirectoryLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "file_locator"
                },
                "dev"
            ],
            "file": null,
            "tags": [
                {
                    "name": "routing.loader",
                    "parameters": []
                }
            ],
            "usages": [
                "routing.resolver"
            ]
        },
        "routing.loader.glob": {
            "class": "Symfony\\Component\\Routing\\Loader\\GlobFileLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "GlobFileLoader loads files from a glob pattern.",
            "arguments": [
                {
                    "type": "service",
                    "id": "file_locator"
                },
                "dev"
            ],
            "file": null,
            "tags": [
                {
                    "name": "routing.loader",
                    "parameters": []
                }
            ],
            "usages": [
                "routing.resolver"
            ]
        },
        "routing.loader.php": {
            "class": "Symfony\\Component\\Routing\\Loader\\PhpFileLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "PhpFileLoader loads routes from a PHP file.",
            "arguments": [
                {
                    "type": "service",
                    "id": "file_locator"
                },
                "dev"
            ],
            "file": null,
            "tags": [
                {
                    "name": "routing.loader",
                    "parameters": []
                }
            ],
            "usages": [
                "routing.resolver"
            ]
        },
        "routing.loader.psr4": {
            "class": "Symfony\\Component\\Routing\\Loader\\Psr4DirectoryLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A loader that discovers controller classes in a directory that follows PSR-4.",
            "arguments": [
                {
                    "type": "service",
                    "id": "file_locator"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "routing.loader",
                    "parameters": {
                        "priority": -10
                    }
                }
            ],
            "usages": [
                "routing.resolver"
            ]
        },
        "routing.loader.xml": {
            "class": "Symfony\\Component\\Routing\\Loader\\XmlFileLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "XmlFileLoader loads XML routing files.",
            "arguments": [
                {
                    "type": "service",
                    "id": "file_locator"
                },
                "dev"
            ],
            "file": null,
            "tags": [
                {
                    "name": "routing.loader",
                    "parameters": []
                }
            ],
            "usages": [
                "routing.resolver"
            ]
        },
        "routing.loader.yml": {
            "class": "Symfony\\Component\\Routing\\Loader\\YamlFileLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "YamlFileLoader loads Yaml routing files.",
            "arguments": [
                {
                    "type": "service",
                    "id": "file_locator"
                },
                "dev"
            ],
            "file": null,
            "tags": [
                {
                    "name": "routing.loader",
                    "parameters": []
                }
            ],
            "usages": [
                "routing.resolver"
            ]
        },
        "routing.resolver": {
            "class": "Symfony\\Component\\Config\\Loader\\LoaderResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "LoaderResolver selects a loader for a given resource.",
            "arguments": [],
            "file": null,
            "calls": [
                "addLoader",
                "addLoader",
                "addLoader",
                "addLoader",
                "addLoader",
                "addLoader",
                "addLoader",
                "addLoader",
                "addLoader",
                "addLoader",
                "addLoader"
            ],
            "tags": [],
            "usages": [
                "routing.loader"
            ]
        },
        "secrets.decryption_key": {
            "class": "Symfony\\Component\\String\\LazyString",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A string whose value is computed lazily by a callback.",
            "arguments": [
                {
                    "type": "service",
                    "id": "container.getenv"
                },
                "base64:default::SYMFONY_DECRYPTION_SECRET"
            ],
            "file": null,
            "factory_class": null,
            "factory_method": "fromCallable",
            "tags": [],
            "usages": [
                "secrets.vault"
            ]
        },
        "secrets.env_var_loader": {
            "class": "Symfony\\Component\\DependencyInjection\\StaticEnvVarLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "secrets.vault"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.env_var_loader",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "secrets.local_vault": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Secrets\\DotenvVault",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "J:\\laragon\\www\\new3\/.env.dev.local"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "console.command.secrets_set",
                "console.command.secrets_remove",
                "console.command.secrets_generate_key",
                "console.command.secrets_list",
                "console.command.secrets_reveal",
                "console.command.secrets_decrypt_to_local",
                "console.command.secrets_encrypt_from_local"
            ]
        },
        "secrets.vault": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\Secrets\\SodiumVault",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "J:\\laragon\\www\\new3\/config\/secrets\/%env(default:kernel.environment:APP_RUNTIME_ENV)%",
                {
                    "type": "service",
                    "id": "secrets.decryption_key"
                },
                "APP_SECRET"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "console.command.secrets_set",
                "console.command.secrets_remove",
                "console.command.secrets_generate_key",
                "console.command.secrets_list",
                "console.command.secrets_reveal",
                "console.command.secrets_decrypt_to_local",
                "console.command.secrets_encrypt_from_local",
                "secrets.env_var_loader"
            ]
        },
        "security.access.authenticated_voter": {
            "class": "Symfony\\Component\\Security\\Core\\Authorization\\Voter\\AuthenticatedVoter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "AuthenticatedVoter votes if an attribute like IS_AUTHENTICATED_FULLY, IS_AUTHENTICATED_REMEMBERED, IS_AUTHENTICATED is present.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.authentication.trust_resolver"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "security.voter",
                    "parameters": {
                        "priority": 250
                    }
                }
            ],
            "usages": [
                ".debug.security.voter.security.access.authenticated_voter"
            ]
        },
        "security.access.closure_voter": {
            "class": "Symfony\\Component\\Security\\Core\\Authorization\\Voter\\ClosureVoter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "This voter allows using a closure as the attribute being voted on.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.authorization_checker"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "security.voter",
                    "parameters": {
                        "priority": 245
                    }
                }
            ],
            "usages": [
                ".debug.security.voter.security.access.closure_voter"
            ]
        },
        "security.access.expression_voter": {
            "class": "Symfony\\Component\\Security\\Core\\Authorization\\Voter\\ExpressionVoter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "ExpressionVoter votes based on the evaluation of an expression.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.expression_language"
                },
                {
                    "type": "service",
                    "id": "security.authentication.trust_resolver"
                },
                {
                    "type": "service",
                    "id": "security.authorization_checker"
                },
                {
                    "type": "service",
                    "id": "security.role_hierarchy"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "security.voter",
                    "parameters": {
                        "priority": 245
                    }
                }
            ],
            "usages": [
                ".debug.security.voter.security.access.expression_voter"
            ]
        },
        "security.access.simple_role_voter": {
            "class": "Symfony\\Component\\Security\\Core\\Authorization\\Voter\\RoleVoter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "RoleVoter votes if any attribute starts with a given prefix.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "security.voter",
                    "parameters": {
                        "priority": 245
                    }
                }
            ],
            "usages": [
                ".debug.security.voter.security.access.simple_role_voter"
            ]
        },
        "security.access_listener": {
            "class": "Symfony\\Component\\Security\\Http\\Firewall\\AccessListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "AccessListener enforces access control rules.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.token_storage"
                },
                {
                    "type": "service",
                    "id": "debug.security.access.decision_manager"
                },
                {
                    "type": "service",
                    "id": "security.access_map"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "security"
                    }
                }
            ],
            "usages": [
                "security.firewall.map.context.main"
            ]
        },
        "security.access_map": {
            "class": "Symfony\\Component\\Security\\Http\\AccessMap",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "AccessMap allows configuration of different access control rules for specific parts of the website.",
            "arguments": [],
            "file": null,
            "calls": [
                "add",
                "add",
                "add"
            ],
            "tags": [],
            "usages": [
                "security.channel_listener",
                "security.access_listener"
            ]
        },
        "security.access_token_extractor.header": {
            "class": "Symfony\\Component\\Security\\Http\\AccessToken\\HeaderAccessTokenExtractor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Extracts a token from the request header.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.access_token_extractor.query_string": {
            "class": "Symfony\\Component\\Security\\Http\\AccessToken\\QueryAccessTokenExtractor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Extracts a token from a query string parameter.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.access_token_extractor.request_body": {
            "class": "Symfony\\Component\\Security\\Http\\AccessToken\\FormEncodedBodyExtractor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Extracts a token from the body request.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.access_token_handler.oauth2": {
            "class": "Symfony\\Component\\Security\\Http\\AccessToken\\OAuth2\\Oauth2TokenHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The token handler validates the token on the authorization server and the Introspection Endpoint.",
            "arguments": [
                {
                    "type": "service",
                    "id": "http_client"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.access_token_handler.oidc": {
            "class": "Symfony\\Component\\Security\\Http\\AccessToken\\Oidc\\OidcTokenHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The token handler decodes and validates the token, and retrieves the user identifier from it.",
            "arguments": [
                {
                    "type": "abstract",
                    "text": "signature algorithm"
                },
                {
                    "type": "abstract",
                    "text": "signature key"
                },
                {
                    "type": "abstract",
                    "text": "audience"
                },
                {
                    "type": "abstract",
                    "text": "issuers"
                },
                "sub",
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                {
                    "type": "service",
                    "id": "clock"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.access_token_handler.oidc.algorithm_manager_factory": {
            "class": "Jose\\Component\\Core\\AlgorithmManagerFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                []
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.access_token_handler.oidc.encryption": {
            "class": "Jose\\Component\\Core\\AlgorithmManager",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "abstract",
                    "text": "encryption algorithms"
                }
            ],
            "file": null,
            "factory_service": "security.access_token_handler.oidc.encryption_algorithm_manager_factory",
            "factory_method": "create",
            "tags": [],
            "usages": []
        },
        "security.access_token_handler.oidc.encryption.A128CBCHS256": {
            "class": "Jose\\Component\\Encryption\\Algorithm\\ContentEncryption\\A128CBCHS256",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "security.access_token_handler.oidc.encryption_algorithm",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "security.access_token_handler.oidc.encryption.A128GCM": {
            "class": "Jose\\Component\\Encryption\\Algorithm\\ContentEncryption\\A128GCM",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "security.access_token_handler.oidc.encryption_algorithm",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "security.access_token_handler.oidc.encryption.A192CBCHS384": {
            "class": "Jose\\Component\\Encryption\\Algorithm\\ContentEncryption\\A192CBCHS384",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "security.access_token_handler.oidc.encryption_algorithm",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "security.access_token_handler.oidc.encryption.A192GCM": {
            "class": "Jose\\Component\\Encryption\\Algorithm\\ContentEncryption\\A192GCM",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "security.access_token_handler.oidc.encryption_algorithm",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "security.access_token_handler.oidc.encryption.A256CBCHS512": {
            "class": "Jose\\Component\\Encryption\\Algorithm\\ContentEncryption\\A256CBCHS512",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "security.access_token_handler.oidc.encryption_algorithm",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "security.access_token_handler.oidc.encryption.A256GCM": {
            "class": "Jose\\Component\\Encryption\\Algorithm\\ContentEncryption\\A256GCM",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "security.access_token_handler.oidc.encryption_algorithm",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "security.access_token_handler.oidc.encryption.ECDHES": {
            "class": "Jose\\Component\\Encryption\\Algorithm\\KeyEncryption\\ECDHES",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "security.access_token_handler.oidc.encryption_algorithm",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "security.access_token_handler.oidc.encryption.ECDHSS": {
            "class": "Jose\\Component\\Encryption\\Algorithm\\KeyEncryption\\ECDHSS",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "security.access_token_handler.oidc.encryption_algorithm",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "security.access_token_handler.oidc.encryption.RSAOAEP": {
            "class": "Jose\\Component\\Encryption\\Algorithm\\KeyEncryption\\RSAOAEP",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "security.access_token_handler.oidc.encryption_algorithm",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "security.access_token_handler.oidc.encryption_algorithm_manager_factory": {
            "class": "Jose\\Component\\Core\\AlgorithmManagerFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                []
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.access_token_handler.oidc.jwk": {
            "class": "Jose\\Component\\Core\\JWK",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": true,
            "deprecation_message": "The \"security.access_token_handler.oidc.jwk\" service is deprecated. Please use \"security.access_token_handler.oidc.jwkset\" instead",
            "arguments": [
                {
                    "type": "abstract",
                    "text": "signature key"
                }
            ],
            "file": null,
            "factory_class": null,
            "factory_method": "createFromJson",
            "tags": [],
            "usages": []
        },
        "security.access_token_handler.oidc.jwkset": {
            "class": "Jose\\Component\\Core\\JWKSet",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "abstract",
                    "text": "signature keyset"
                }
            ],
            "file": null,
            "factory_class": null,
            "factory_method": "createFromJson",
            "tags": [],
            "usages": []
        },
        "security.access_token_handler.oidc.signature": {
            "class": "Jose\\Component\\Core\\AlgorithmManager",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "abstract",
                    "text": "signature algorithms"
                }
            ],
            "file": null,
            "factory_service": "security.access_token_handler.oidc.algorithm_manager_factory",
            "factory_method": "create",
            "tags": [],
            "usages": []
        },
        "security.access_token_handler.oidc.signature.ES256": {
            "class": "Jose\\Component\\Signature\\Algorithm\\ES256",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "security.access_token_handler.oidc.signature_algorithm",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "security.access_token_handler.oidc.signature.ES384": {
            "class": "Jose\\Component\\Signature\\Algorithm\\ES384",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "security.access_token_handler.oidc.signature_algorithm",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "security.access_token_handler.oidc.signature.ES512": {
            "class": "Jose\\Component\\Signature\\Algorithm\\ES512",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "security.access_token_handler.oidc.signature_algorithm",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "security.access_token_handler.oidc.signature.PS256": {
            "class": "Jose\\Component\\Signature\\Algorithm\\PS256",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "security.access_token_handler.oidc.signature_algorithm",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "security.access_token_handler.oidc.signature.PS384": {
            "class": "Jose\\Component\\Signature\\Algorithm\\PS384",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "security.access_token_handler.oidc.signature_algorithm",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "security.access_token_handler.oidc.signature.PS512": {
            "class": "Jose\\Component\\Signature\\Algorithm\\PS512",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "security.access_token_handler.oidc.signature_algorithm",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "security.access_token_handler.oidc.signature.RS256": {
            "class": "Jose\\Component\\Signature\\Algorithm\\RS256",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "security.access_token_handler.oidc.signature_algorithm",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "security.access_token_handler.oidc.signature.RS384": {
            "class": "Jose\\Component\\Signature\\Algorithm\\RS384",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "security.access_token_handler.oidc.signature_algorithm",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "security.access_token_handler.oidc.signature.RS512": {
            "class": "Jose\\Component\\Signature\\Algorithm\\RS512",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "security.access_token_handler.oidc.signature_algorithm",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "security.access_token_handler.oidc_discovery.http_client": {
            "class": "Symfony\\Contracts\\HttpClient\\HttpClientInterface",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "abstract",
                    "text": "http client options"
                }
            ],
            "file": null,
            "factory_service": "http_client",
            "factory_method": "withOptions",
            "tags": [],
            "usages": []
        },
        "security.access_token_handler.oidc_user_info": {
            "class": "Symfony\\Component\\Security\\Http\\AccessToken\\Oidc\\OidcUserInfoTokenHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The token handler validates the token on the OIDC server and retrieves the user identifier.",
            "arguments": [
                {
                    "type": "abstract",
                    "text": "http client"
                },
                {
                    "type": "service",
                    "id": "monolog.logger"
                },
                {
                    "type": "abstract",
                    "text": "claim"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.access_token_handler.oidc_user_info.http_client": {
            "class": "Symfony\\Contracts\\HttpClient\\HttpClientInterface",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "abstract",
                    "text": "http client options"
                }
            ],
            "file": null,
            "factory_service": "http_client",
            "factory_method": "withOptions",
            "tags": [],
            "usages": []
        },
        "security.authentication.custom_failure_handler": {
            "class": "Symfony\\Component\\Security\\Http\\Authentication\\CustomAuthenticationFailureHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "abstract",
                    "text": "The custom failure handler service"
                },
                []
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.authentication.custom_success_handler": {
            "class": "Symfony\\Component\\Security\\Http\\Authentication\\CustomAuthenticationSuccessHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "abstract",
                    "text": "The custom success handler service"
                },
                [],
                {
                    "type": "abstract",
                    "text": "Provider-shared Key"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.authentication.failure_handler": {
            "class": "Symfony\\Component\\Security\\Http\\Authentication\\DefaultAuthenticationFailureHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Class with the default authentication failure handling logic.",
            "arguments": [
                {
                    "type": "service",
                    "id": "http_kernel"
                },
                {
                    "type": "service",
                    "id": "security.http_utils"
                },
                [],
                {
                    "type": "service",
                    "id": "monolog.logger.security"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "security"
                    }
                }
            ],
            "usages": []
        },
        "security.authentication.failure_handler.main.form_login": {
            "class": "Symfony\\Component\\Security\\Http\\Authentication\\DefaultAuthenticationFailureHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Class with the default authentication failure handling logic.",
            "arguments": [
                {
                    "type": "service",
                    "id": "http_kernel"
                },
                {
                    "type": "service",
                    "id": "security.http_utils"
                },
                [],
                {
                    "type": "service",
                    "id": "monolog.logger.security"
                }
            ],
            "file": null,
            "calls": [
                "setOptions"
            ],
            "tags": [],
            "usages": [
                "security.authenticator.form_login.main"
            ]
        },
        "security.authentication.listener.abstract": {
            "class": "",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "security.token_storage"
                },
                {
                    "type": "service",
                    "id": "security.authentication.manager"
                },
                {
                    "type": "service",
                    "id": "security.authentication.session_strategy"
                },
                {
                    "type": "service",
                    "id": "security.http_utils"
                },
                {
                    "type": "abstract",
                    "text": "Provider-shared Key"
                },
                {
                    "type": "service",
                    "id": "security.authentication.success_handler"
                },
                {
                    "type": "service",
                    "id": "security.authentication.failure_handler"
                },
                [],
                {
                    "type": "service",
                    "id": "monolog.logger.security"
                },
                {
                    "type": "service",
                    "id": "debug.event_dispatcher"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "security"
                    }
                }
            ],
            "usages": []
        },
        "security.authentication.session_strategy": {
            "class": "Symfony\\Component\\Security\\Http\\Session\\SessionAuthenticationStrategy",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The default session strategy implementation.",
            "arguments": [
                "migrate",
                {
                    "type": "service",
                    "id": "security.csrf.token_storage"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\Security\\Http\\Session\\SessionAuthenticationStrategyInterface",
                "security.authentication.session_strategy.main",
                "security.listener.session.main"
            ]
        },
        "security.authentication.session_strategy_noop": {
            "class": "Symfony\\Component\\Security\\Http\\Session\\SessionAuthenticationStrategy",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The default session strategy implementation.",
            "arguments": [
                "none"
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.authentication.success_handler": {
            "class": "Symfony\\Component\\Security\\Http\\Authentication\\DefaultAuthenticationSuccessHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Class with the default authentication success handling logic.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.http_utils"
                },
                [],
                {
                    "type": "service",
                    "id": "monolog.logger"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.authentication.success_handler.main.form_login": {
            "class": "Symfony\\Component\\Security\\Http\\Authentication\\DefaultAuthenticationSuccessHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Class with the default authentication success handling logic.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.http_utils"
                },
                [],
                {
                    "type": "service",
                    "id": "monolog.logger"
                }
            ],
            "file": null,
            "calls": [
                "setOptions",
                "setFirewallName"
            ],
            "tags": [],
            "usages": [
                "security.authenticator.form_login.main"
            ]
        },
        "security.authentication.switchuser_listener": {
            "class": "Symfony\\Component\\Security\\Http\\Firewall\\SwitchUserListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "SwitchUserListener allows a user to impersonate another one temporarily (like the Unix su command).",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.token_storage"
                },
                {
                    "type": "abstract",
                    "text": "User Provider"
                },
                {
                    "type": "abstract",
                    "text": "User Checker"
                },
                {
                    "type": "abstract",
                    "text": "Provider Key"
                },
                {
                    "type": "service",
                    "id": "debug.security.access.decision_manager"
                },
                {
                    "type": "service",
                    "id": "monolog.logger.security"
                },
                "_switch_user",
                "ROLE_ALLOWED_TO_SWITCH",
                {
                    "type": "service",
                    "id": "debug.event_dispatcher"
                },
                false,
                {
                    "type": "service",
                    "id": "router.default"
                },
                {
                    "type": "abstract",
                    "text": "Target Route"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "security"
                    }
                }
            ],
            "usages": []
        },
        "security.authentication.trust_resolver": {
            "class": "Symfony\\Component\\Security\\Core\\Authentication\\AuthenticationTrustResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The default implementation of the authentication trust resolver.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "security.access.authenticated_voter",
                "security.access.expression_voter",
                "security.context_listener",
                "security.context_listener.0",
                "security.exception_listener.main",
                "api_platform.security.resource_access_checker"
            ]
        },
        "security.authentication_utils": {
            "class": "Symfony\\Component\\Security\\Http\\Authentication\\AuthenticationUtils",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Extracts Security Errors from Request.",
            "arguments": [
                {
                    "type": "service",
                    "id": "request_stack"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\Security\\Http\\Authentication\\AuthenticationUtils",
                ".service_locator.3QECKYg"
            ]
        },
        "security.authenticator.access_token": {
            "class": "Symfony\\Component\\Security\\Http\\Authenticator\\AccessTokenAuthenticator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Provides an implementation of the RFC6750 of an authentication via an access token.",
            "arguments": [
                {
                    "type": "abstract",
                    "text": "access token handler"
                },
                {
                    "type": "abstract",
                    "text": "access token extractor"
                },
                null,
                null,
                null,
                null
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.authenticator.access_token.chain_extractor": {
            "class": "Symfony\\Component\\Security\\Http\\AccessToken\\ChainAccessTokenExtractor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "The token extractor retrieves the token from a request.",
            "arguments": [
                {
                    "type": "abstract",
                    "text": "access token extractors"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.authenticator.form_login": {
            "class": "Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "security.http_utils"
                },
                {
                    "type": "abstract",
                    "text": "user provider"
                },
                {
                    "type": "abstract",
                    "text": "authentication success handler"
                },
                {
                    "type": "abstract",
                    "text": "authentication failure handler"
                },
                {
                    "type": "abstract",
                    "text": "options"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.authenticator.form_login.main": {
            "class": "Symfony\\Component\\Security\\Http\\Authenticator\\FormLoginAuthenticator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "security.http_utils"
                },
                {
                    "type": "service",
                    "id": "security.user.provider.concrete.app_user_provider"
                },
                {
                    "type": "service",
                    "id": "security.authentication.success_handler.main.form_login"
                },
                {
                    "type": "service",
                    "id": "security.authentication.failure_handler.main.form_login"
                },
                {
                    "login_path": "app_login",
                    "check_path": "app_login",
                    "enable_csrf": true,
                    "use_forward": false,
                    "username_parameter": "_username",
                    "password_parameter": "_password",
                    "csrf_parameter": "_csrf_token",
                    "csrf_token_id": "authenticate",
                    "post_only": true,
                    "form_only": false
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "debug.security.authenticator.form_login.main",
                "security.exception_listener.main",
                ".service_locator.0CS_i83"
            ]
        },
        "security.authenticator.http_basic": {
            "class": "Symfony\\Component\\Security\\Http\\Authenticator\\HttpBasicAuthenticator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "abstract",
                    "text": "realm name"
                },
                {
                    "type": "abstract",
                    "text": "user provider"
                },
                {
                    "type": "service",
                    "id": "monolog.logger.security"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "security"
                    }
                }
            ],
            "usages": []
        },
        "security.authenticator.json_login": {
            "class": "Symfony\\Component\\Security\\Http\\Authenticator\\JsonLoginAuthenticator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Provides a stateless implementation of an authentication via a JSON document composed of a username and a password.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.http_utils"
                },
                {
                    "type": "abstract",
                    "text": "user provider"
                },
                {
                    "type": "abstract",
                    "text": "authentication success handler"
                },
                {
                    "type": "abstract",
                    "text": "authentication failure handler"
                },
                {
                    "type": "abstract",
                    "text": "options"
                },
                {
                    "type": "service",
                    "id": "property_accessor"
                }
            ],
            "file": null,
            "calls": [
                "setTranslator"
            ],
            "tags": [],
            "usages": []
        },
        "security.authenticator.manager": {
            "class": "Symfony\\Component\\Security\\Http\\Authentication\\AuthenticatorManager",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "abstract",
                    "text": "authenticators"
                },
                {
                    "type": "service",
                    "id": "security.token_storage"
                },
                {
                    "type": "service",
                    "id": "debug.event_dispatcher"
                },
                {
                    "type": "abstract",
                    "text": "provider key"
                },
                {
                    "type": "service",
                    "id": "monolog.logger.security"
                },
                true,
                "Symfony\\Component\\Security\\Http\\Authentication\\ExposeSecurityLevel::None",
                {
                    "type": "abstract",
                    "text": "required badges"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "security"
                    }
                }
            ],
            "usages": []
        },
        "security.authenticator.manager.main": {
            "class": "Symfony\\Component\\Security\\Http\\Authentication\\AuthenticatorManager",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                [
                    {
                        "type": "service",
                        "id": "debug.security.authenticator.form_login.main"
                    }
                ],
                {
                    "type": "service",
                    "id": "security.token_storage"
                },
                {
                    "type": "service",
                    "id": "debug.security.event_dispatcher.main"
                },
                "main",
                {
                    "type": "service",
                    "id": "monolog.logger.security"
                },
                true,
                "Symfony\\Component\\Security\\Http\\Authentication\\ExposeSecurityLevel::None",
                []
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "security"
                    }
                }
            ],
            "usages": [
                "security.authenticator.managers_locator",
                "debug.security.firewall.authenticator.main.inner"
            ]
        },
        "security.authenticator.managers_locator": {
            "class": "Symfony\\Component\\DependencyInjection\\ServiceLocator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "main": {
                        "type": "service",
                        "id": "security.authenticator.manager.main"
                    }
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "security.user_authenticator",
                ".service_locator.2QMaG2L"
            ]
        },
        "security.authenticator.remote_user": {
            "class": "Symfony\\Component\\Security\\Http\\Authenticator\\RemoteUserAuthenticator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "This authenticator authenticates a remote user.",
            "arguments": [
                {
                    "type": "abstract",
                    "text": "user provider"
                },
                {
                    "type": "service",
                    "id": "security.token_storage"
                },
                {
                    "type": "abstract",
                    "text": "firewall name"
                },
                {
                    "type": "abstract",
                    "text": "user key"
                },
                {
                    "type": "service",
                    "id": "monolog.logger.security"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "security"
                    }
                }
            ],
            "usages": []
        },
        "security.authenticator.x509": {
            "class": "Symfony\\Component\\Security\\Http\\Authenticator\\X509Authenticator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "This authenticator authenticates pre-authenticated (by the webserver) X.509 certificates.",
            "arguments": [
                {
                    "type": "abstract",
                    "text": "user provider"
                },
                {
                    "type": "service",
                    "id": "security.token_storage"
                },
                {
                    "type": "abstract",
                    "text": "firewall name"
                },
                {
                    "type": "abstract",
                    "text": "user key"
                },
                {
                    "type": "abstract",
                    "text": "credentials key"
                },
                {
                    "type": "service",
                    "id": "monolog.logger.security"
                },
                {
                    "type": "abstract",
                    "text": "credentials user identifier"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "security"
                    }
                }
            ],
            "usages": []
        },
        "security.authorization_checker": {
            "class": "Symfony\\Component\\Security\\Core\\Authorization\\AuthorizationChecker",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "AuthorizationChecker is the main authorization point of the Security component.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.token_storage"
                },
                {
                    "type": "service",
                    "id": "debug.security.access.decision_manager"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\Security\\Core\\Authorization\\AuthorizationCheckerInterface",
                "Symfony\\Component\\Security\\Core\\Authorization\\UserAuthorizationCheckerInterface",
                "security.access.expression_voter",
                "security.access.closure_voter",
                "controller.is_granted_attribute_listener",
                "twig.extension.security",
                "api_platform.security.resource_access_checker",
                ".service_locator.ZyP9f7K",
                ".service_locator.2QMaG2L"
            ]
        },
        "security.channel_listener": {
            "class": "Symfony\\Component\\Security\\Http\\Firewall\\ChannelListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "ChannelListener switches the HTTP protocol based on the access control configuration.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.access_map"
                },
                {
                    "type": "service",
                    "id": "monolog.logger.security"
                },
                {
                    "type": "service",
                    "id": ".19_int~4VeSJ51"
                },
                {
                    "type": "service",
                    "id": ".20_int~4VeSJ51"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "security"
                    }
                }
            ],
            "usages": [
                "security.firewall.map.context.main"
            ]
        },
        "security.command.debug_firewall": {
            "class": "Symfony\\Bundle\\SecurityBundle\\Command\\DebugFirewallCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "%security.firewalls%",
                {
                    "type": "service",
                    "id": ".service_locator.Iyre4WN"
                },
                {
                    "type": "service",
                    "id": ".service_locator.xRvtKlk"
                },
                {
                    "main": [
                        {
                            "type": "service",
                            "id": "debug.security.authenticator.form_login.main"
                        }
                    ]
                },
                false
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": {
                        "command": "debug:firewall"
                    }
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".security.command.debug_firewall.lazy"
            ]
        },
        "security.command.user_password_hash": {
            "class": "Symfony\\Component\\PasswordHasher\\Command\\UserPasswordHashCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Hashes a user's password.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.password_hasher_factory"
                },
                [
                    "Symfony\\Component\\Security\\Core\\User\\PasswordAuthenticatedUserInterface",
                    "Symfony\\Component\\Security\\Core\\User\\InMemoryUser"
                ]
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".security.command.user_password_hash.lazy"
            ]
        },
        "security.context_listener": {
            "class": "Symfony\\Component\\Security\\Http\\Firewall\\ContextListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "ContextListener manages the SecurityContext persistence through a session.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.untracked_token_storage"
                },
                [
                    {
                        "type": "service",
                        "id": "security.user.provider.concrete.app_user_provider"
                    }
                ],
                {
                    "type": "abstract",
                    "text": "Provider Key"
                },
                {
                    "type": "service",
                    "id": "monolog.logger.security"
                },
                {
                    "type": "service",
                    "id": "debug.event_dispatcher"
                },
                {
                    "type": "service",
                    "id": "security.authentication.trust_resolver"
                },
                [
                    {
                        "type": "service",
                        "id": "security.token_storage"
                    },
                    "enableUsageTracking"
                ]
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "security"
                    }
                }
            ],
            "usages": []
        },
        "security.context_listener.0": {
            "class": "Symfony\\Component\\Security\\Http\\Firewall\\ContextListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "ContextListener manages the SecurityContext persistence through a session.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.untracked_token_storage"
                },
                [
                    {
                        "type": "service",
                        "id": "security.user.provider.concrete.app_user_provider"
                    }
                ],
                "main",
                {
                    "type": "service",
                    "id": "monolog.logger.security"
                },
                {
                    "type": "service",
                    "id": "debug.security.event_dispatcher.main"
                },
                {
                    "type": "service",
                    "id": "security.authentication.trust_resolver"
                },
                [
                    {
                        "type": "service",
                        "id": "security.token_storage"
                    },
                    "enableUsageTracking"
                ]
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_listener",
                    "parameters": {
                        "event": "kernel.response",
                        "method": "onKernelResponse"
                    }
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher",
                "security.firewall.map.context.main"
            ]
        },
        "security.csrf.token_generator": {
            "class": "Symfony\\Component\\Security\\Csrf\\TokenGenerator\\UriSafeTokenGenerator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Generates CSRF tokens.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\Security\\Csrf\\TokenGenerator\\TokenGeneratorInterface",
                "security.csrf.token_manager"
            ]
        },
        "security.csrf.token_manager": {
            "class": "Symfony\\Component\\Security\\Csrf\\CsrfTokenManager",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Default implementation of {@link CsrfTokenManagerInterface}.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.csrf.token_generator"
                },
                {
                    "type": "service",
                    "id": "security.csrf.token_storage"
                },
                {
                    "type": "service",
                    "id": "request_stack"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\Security\\Csrf\\CsrfTokenManagerInterface",
                "twig.runtime.security_csrf",
                ".service_locator.Qe8BMu3",
                "security.listener.csrf_protection",
                "controller.is_csrf_token_valid_attribute_listener",
                ".service_locator.ZyP9f7K",
                ".service_locator.2QMaG2L"
            ]
        },
        "security.csrf.token_storage": {
            "class": "Symfony\\Component\\Security\\Csrf\\TokenStorage\\SessionTokenStorage",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Token storage that uses a Symfony Session object.",
            "arguments": [
                {
                    "type": "service",
                    "id": "request_stack"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\Security\\Csrf\\TokenStorage\\TokenStorageInterface",
                "security.csrf.token_manager",
                "security.authentication.session_strategy",
                "security.logout.listener.csrf_token_clearing"
            ]
        },
        "security.exception_listener": {
            "class": "Symfony\\Component\\Security\\Http\\Firewall\\ExceptionListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "ExceptionListener catches authentication exception and converts them to Response instances.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.token_storage"
                },
                {
                    "type": "service",
                    "id": "security.authentication.trust_resolver"
                },
                {
                    "type": "service",
                    "id": "security.http_utils"
                },
                {
                    "type": "abstract",
                    "text": "Provider-shared Key"
                },
                {
                    "type": "service",
                    "id": "security.authentication.entry_point"
                },
                null,
                {
                    "type": "service",
                    "id": "security.access.denied_handler"
                },
                {
                    "type": "service",
                    "id": "monolog.logger.security"
                },
                false
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "security"
                    }
                }
            ],
            "usages": []
        },
        "security.exception_listener.main": {
            "class": "Symfony\\Component\\Security\\Http\\Firewall\\ExceptionListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "ExceptionListener catches authentication exception and converts them to Response instances.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.token_storage"
                },
                {
                    "type": "service",
                    "id": "security.authentication.trust_resolver"
                },
                {
                    "type": "service",
                    "id": "security.http_utils"
                },
                "main",
                {
                    "type": "service",
                    "id": "security.authenticator.form_login.main"
                },
                null,
                null,
                {
                    "type": "service",
                    "id": "monolog.logger.security"
                },
                false
            ],
            "file": null,
            "tags": [],
            "usages": [
                "security.firewall.map.context.main"
            ]
        },
        "security.expression_language": {
            "class": "Symfony\\Component\\Security\\Core\\Authorization\\ExpressionLanguage",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Adds some function to the default ExpressionLanguage.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache.security_expression_language"
                }
            ],
            "file": null,
            "calls": [
                "registerProvider"
            ],
            "tags": [],
            "usages": [
                "api_platform.security.expression_language",
                "security.access.expression_voter",
                "api_platform.security.resource_access_checker"
            ]
        },
        "security.firewall.authenticator": {
            "class": "Symfony\\Component\\Security\\Http\\Firewall\\AuthenticatorManagerListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Firewall authentication listener that delegates to the authenticator system.",
            "arguments": [
                {
                    "type": "abstract",
                    "text": "authenticator manager"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.firewall.config": {
            "class": "Symfony\\Bundle\\SecurityBundle\\Security\\FirewallConfig",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "abstract",
                    "text": "name"
                },
                {
                    "type": "abstract",
                    "text": "user_checker"
                },
                {
                    "type": "abstract",
                    "text": "request_matcher"
                },
                false,
                false,
                null,
                null,
                null,
                null,
                null,
                [],
                null,
                null
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.firewall.context": {
            "class": "Symfony\\Bundle\\SecurityBundle\\Security\\FirewallContext",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "This is a wrapper around the actual firewall configuration which allows us to lazy load the context for one specific firewall only when we need it.",
            "arguments": [
                [],
                {
                    "type": "service",
                    "id": "security.exception_listener"
                },
                {
                    "type": "abstract",
                    "text": "LogoutListener"
                },
                {
                    "type": "abstract",
                    "text": "FirewallConfig"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.firewall.event_dispatcher_locator": {
            "class": "Symfony\\Component\\DependencyInjection\\ServiceLocator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "main": {
                        "type": "service",
                        "id": "debug.security.event_dispatcher.main"
                    }
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                ".service_locator.2QMaG2L"
            ]
        },
        "security.firewall.lazy_context": {
            "class": "Symfony\\Bundle\\SecurityBundle\\Security\\LazyFirewallContext",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Lazily calls authentication listeners when actually required by the access listener.",
            "arguments": [
                [],
                {
                    "type": "service",
                    "id": "security.exception_listener"
                },
                {
                    "type": "abstract",
                    "text": "LogoutListener"
                },
                {
                    "type": "abstract",
                    "text": "FirewallConfig"
                },
                {
                    "type": "service",
                    "id": "security.untracked_token_storage"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.firewall.map": {
            "class": "Symfony\\Bundle\\SecurityBundle\\Security\\FirewallMap",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "This is a lazy-loading firewall map implementation.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.Iyre4WN"
                },
                {
                    "security.firewall.map.context.api": {
                        "type": "service",
                        "id": ".security.request_matcher.NaFk5J1"
                    },
                    "security.firewall.map.context.dev": {
                        "type": "service",
                        "id": ".security.request_matcher.gOpgIHx"
                    },
                    "security.firewall.map.context.main": null
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\Security\\Http\\FirewallMapInterface",
                "security.impersonate_url_generator",
                "security.user_authenticator",
                "data_collector.security",
                "debug.security.firewall",
                ".service_locator.2QMaG2L"
            ]
        },
        "security.firewall.map.config.api": {
            "class": "Symfony\\Bundle\\SecurityBundle\\Security\\FirewallConfig",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "api",
                "security.user_checker",
                ".security.request_matcher.NaFk5J1",
                false,
                false,
                null,
                null,
                null,
                null,
                null,
                [],
                null,
                null
            ],
            "file": null,
            "tags": [],
            "usages": [
                "security.firewall.map.context.api"
            ]
        },
        "security.firewall.map.config.dev": {
            "class": "Symfony\\Bundle\\SecurityBundle\\Security\\FirewallConfig",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "dev",
                "security.user_checker",
                ".security.request_matcher.gOpgIHx",
                false,
                false,
                null,
                null,
                null,
                null,
                null,
                [],
                null,
                null
            ],
            "file": null,
            "tags": [],
            "usages": [
                "security.firewall.map.context.dev"
            ]
        },
        "security.firewall.map.config.main": {
            "class": "Symfony\\Bundle\\SecurityBundle\\Security\\FirewallConfig",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "main",
                "security.user_checker",
                null,
                true,
                false,
                "security.user.provider.concrete.app_user_provider",
                "main",
                "security.authenticator.form_login.main",
                null,
                null,
                [
                    "form_login"
                ],
                null,
                {
                    "path": "app_logout",
                    "target": "app_login",
                    "enable_csrf": null,
                    "csrf_token_id": "logout",
                    "csrf_parameter": "_csrf_token",
                    "invalidate_session": true,
                    "clear_site_data": [],
                    "delete_cookies": []
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "security.firewall.map.context.main"
            ]
        },
        "security.firewall.map.context.api": {
            "class": "Symfony\\Bundle\\SecurityBundle\\Security\\FirewallContext",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "This is a wrapper around the actual firewall configuration which allows us to lazy load the context for one specific firewall only when we need it.",
            "arguments": [
                [],
                null,
                null,
                {
                    "type": "service",
                    "id": "security.firewall.map.config.api"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                ".service_locator.Iyre4WN"
            ]
        },
        "security.firewall.map.context.dev": {
            "class": "Symfony\\Bundle\\SecurityBundle\\Security\\FirewallContext",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "This is a wrapper around the actual firewall configuration which allows us to lazy load the context for one specific firewall only when we need it.",
            "arguments": [
                [],
                null,
                null,
                {
                    "type": "service",
                    "id": "security.firewall.map.config.dev"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                ".service_locator.Iyre4WN"
            ]
        },
        "security.firewall.map.context.main": {
            "class": "Symfony\\Bundle\\SecurityBundle\\Security\\LazyFirewallContext",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Lazily calls authentication listeners when actually required by the access listener.",
            "arguments": [
                [
                    {
                        "type": "service",
                        "id": "security.channel_listener"
                    },
                    {
                        "type": "service",
                        "id": "security.context_listener.0"
                    },
                    {
                        "type": "service",
                        "id": "debug.security.firewall.authenticator.main"
                    },
                    {
                        "type": "service",
                        "id": "security.access_listener"
                    }
                ],
                {
                    "type": "service",
                    "id": "security.exception_listener.main"
                },
                {
                    "type": "service",
                    "id": "security.logout_listener.main"
                },
                {
                    "type": "service",
                    "id": "security.firewall.map.config.main"
                },
                {
                    "type": "service",
                    "id": "security.untracked_token_storage"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                ".service_locator.Iyre4WN"
            ]
        },
        "security.helper": {
            "class": "Symfony\\Bundle\\SecurityBundle\\Security",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Helper class for commonly-needed security tasks.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.2QMaG2L"
                },
                {
                    "api": null,
                    "dev": null,
                    "main": {
                        "type": "service",
                        "id": ".service_locator.0CS_i83"
                    }
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Bundle\\SecurityBundle\\Security"
            ]
        },
        "security.http_utils": {
            "class": "Symfony\\Component\\Security\\Http\\HttpUtils",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Encapsulates the logic needed to create sub-requests, redirect the user, and match URLs.",
            "arguments": [
                {
                    "type": "service",
                    "id": "router.default"
                },
                {
                    "type": "service",
                    "id": "router.default"
                },
                "{^https?:\/\/%%s$}i",
                "{^https:\/\/%%s$}i"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\Security\\Http\\HttpUtils",
                "security.logout_listener.main",
                "security.logout.listener.default.main",
                "security.authenticator.form_login.main",
                "security.authentication.success_handler.main.form_login",
                "security.authentication.failure_handler.main.form_login",
                "security.exception_listener.main"
            ]
        },
        "security.impersonate_url_generator": {
            "class": "Symfony\\Component\\Security\\Http\\Impersonate\\ImpersonateUrlGenerator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Provides generator functions for the impersonation urls.",
            "arguments": [
                {
                    "type": "service",
                    "id": "request_stack"
                },
                {
                    "type": "service",
                    "id": "security.firewall.map"
                },
                {
                    "type": "service",
                    "id": "security.token_storage"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "twig.extension.security"
            ]
        },
        "security.is_csrf_token_valid_attribute_expression_language": {
            "class": "Symfony\\Component\\ExpressionLanguage\\ExpressionLanguage",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Allows to compile and evaluate expressions written in your own DSL.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache.security_is_csrf_token_valid_attribute_expression_language"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "controller.is_csrf_token_valid_attribute_listener"
            ]
        },
        "security.is_granted_attribute_expression_language": {
            "class": "Symfony\\Component\\ExpressionLanguage\\ExpressionLanguage",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Allows to compile and evaluate expressions written in your own DSL.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache.security_is_granted_attribute_expression_language"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "controller.is_granted_attribute_listener"
            ]
        },
        "security.ldap_locator": {
            "class": "Symfony\\Component\\DependencyInjection\\ServiceLocator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                []
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.listener.check_authenticator_credentials": {
            "class": "Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "This listeners uses the interfaces of authenticators to determine how to check credentials.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.password_hasher_factory"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher",
                "debug.security.event_dispatcher.main"
            ]
        },
        "security.listener.csrf_protection": {
            "class": "Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "security.csrf.token_manager"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher",
                "debug.security.event_dispatcher.main"
            ]
        },
        "security.listener.login_throttling": {
            "class": "Symfony\\Component\\Security\\Http\\EventListener\\LoginThrottlingListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "request_stack"
                },
                {
                    "type": "abstract",
                    "text": "request rate limiter"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.listener.main.user_provider": {
            "class": "Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Configures the user provider as user loader, if no user load has been explicitly set.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.user.provider.concrete.app_user_provider"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_listener",
                    "parameters": {
                        "dispatcher": "debug.security.event_dispatcher.main",
                        "event": "Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent",
                        "priority": 2048,
                        "method": "checkPassport"
                    }
                }
            ],
            "usages": [
                "debug.security.event_dispatcher.main"
            ]
        },
        "security.listener.password_migrating": {
            "class": "Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "security.password_hasher_factory"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher",
                "debug.security.event_dispatcher.main"
            ]
        },
        "security.listener.session": {
            "class": "Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Migrates\/invalidates the session after successful login.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.authentication.session_strategy"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.listener.session.main": {
            "class": "Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Migrates\/invalidates the session after successful login.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.authentication.session_strategy"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": {
                        "dispatcher": "debug.security.event_dispatcher.main"
                    }
                }
            ],
            "usages": [
                "debug.security.event_dispatcher.main"
            ]
        },
        "security.listener.user_checker": {
            "class": "Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "abstract",
                    "text": "user checker"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.listener.user_checker.main": {
            "class": "Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "security.user_checker"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": {
                        "dispatcher": "debug.security.event_dispatcher.main"
                    }
                }
            ],
            "usages": [
                "debug.security.event_dispatcher.main"
            ]
        },
        "security.listener.user_provider": {
            "class": "Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Configures the user provider as user loader, if no user load has been explicitly set.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.user.provider.concrete.app_user_provider"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_listener",
                    "parameters": {
                        "event": "Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent",
                        "priority": 1024,
                        "method": "checkPassport"
                    }
                }
            ],
            "usages": [
                "debug.event_dispatcher",
                "debug.security.event_dispatcher.main"
            ]
        },
        "security.listener.user_provider.abstract": {
            "class": "Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Configures the user provider as user loader, if no user load has been explicitly set.",
            "arguments": [
                {
                    "type": "abstract",
                    "text": "user provider"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.logout.listener.clear_site_data": {
            "class": "Symfony\\Component\\Security\\Http\\EventListener\\ClearSiteDataLogoutListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Handler for Clear-Site-Data header during logout.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.logout.listener.cookie_clearing": {
            "class": "Symfony\\Component\\Security\\Http\\EventListener\\CookieClearingLogoutListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "This listener clears the passed cookies when a user logs out.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.logout.listener.csrf_token_clearing": {
            "class": "Symfony\\Component\\Security\\Http\\EventListener\\CsrfTokenClearingLogoutListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "security.csrf.token_storage"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher",
                "debug.security.event_dispatcher.main"
            ]
        },
        "security.logout.listener.default": {
            "class": "Symfony\\Component\\Security\\Http\\EventListener\\DefaultLogoutListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Default logout listener will redirect users to a configured path.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.http_utils"
                },
                {
                    "type": "abstract",
                    "text": "target url"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.logout.listener.default.main": {
            "class": "Symfony\\Component\\Security\\Http\\EventListener\\DefaultLogoutListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Default logout listener will redirect users to a configured path.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.http_utils"
                },
                "app_login"
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": {
                        "dispatcher": "debug.security.event_dispatcher.main"
                    }
                }
            ],
            "usages": [
                "debug.security.event_dispatcher.main"
            ]
        },
        "security.logout.listener.session": {
            "class": "Symfony\\Component\\Security\\Http\\EventListener\\SessionLogoutListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Handler for clearing invalidating the current session.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.logout.listener.session.main": {
            "class": "Symfony\\Component\\Security\\Http\\EventListener\\SessionLogoutListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Handler for clearing invalidating the current session.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": {
                        "dispatcher": "debug.security.event_dispatcher.main"
                    }
                }
            ],
            "usages": [
                "debug.security.event_dispatcher.main"
            ]
        },
        "security.logout_listener": {
            "class": "Symfony\\Component\\Security\\Http\\Firewall\\LogoutListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "LogoutListener logout users.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.token_storage"
                },
                {
                    "type": "service",
                    "id": "security.http_utils"
                },
                {
                    "type": "abstract",
                    "text": "event dispatcher"
                },
                []
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.logout_listener.main": {
            "class": "Symfony\\Component\\Security\\Http\\Firewall\\LogoutListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "LogoutListener logout users.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.token_storage"
                },
                {
                    "type": "service",
                    "id": "security.http_utils"
                },
                {
                    "type": "service",
                    "id": "debug.security.event_dispatcher.main"
                },
                {
                    "csrf_parameter": "_csrf_token",
                    "csrf_token_id": "logout",
                    "logout_path": "app_logout"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "security.firewall.map.context.main"
            ]
        },
        "security.logout_url_generator": {
            "class": "Symfony\\Component\\Security\\Http\\Logout\\LogoutUrlGenerator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Provides generator functions for the logout URL.",
            "arguments": [
                {
                    "type": "service",
                    "id": "request_stack"
                },
                {
                    "type": "service",
                    "id": "router.default"
                },
                {
                    "type": "service",
                    "id": "security.token_storage"
                }
            ],
            "file": null,
            "calls": [
                "registerListener"
            ],
            "tags": [],
            "usages": [
                "twig.extension.logout_url",
                "data_collector.security",
                "debug.security.firewall"
            ]
        },
        "security.password_hasher_factory": {
            "class": "Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A generic hasher factory implementation.",
            "arguments": [
                {
                    "Symfony\\Component\\Security\\Core\\User\\PasswordAuthenticatedUserInterface": {
                        "algorithm": "auto",
                        "migrate_from": [],
                        "hash_algorithm": "sha512",
                        "key_length": 40,
                        "ignore_case": false,
                        "encode_as_base64": true,
                        "iterations": 5000,
                        "cost": null,
                        "memory_cost": null,
                        "time_cost": null
                    },
                    "Symfony\\Component\\Security\\Core\\User\\InMemoryUser": {
                        "class": "Symfony\\Component\\PasswordHasher\\Hasher\\PlaintextPasswordHasher",
                        "arguments": [
                            false
                        ]
                    }
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactoryInterface",
                "security.validator.user_password",
                "security.user_password_hasher",
                "security.listener.check_authenticator_credentials",
                "security.listener.password_migrating",
                "security.command.user_password_hash"
            ]
        },
        "security.role_hierarchy": {
            "class": "Symfony\\Component\\Security\\Core\\Role\\RoleHierarchy",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "RoleHierarchy defines a role hierarchy.",
            "arguments": [
                []
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\Security\\Core\\Role\\RoleHierarchyInterface",
                "security.access.expression_voter",
                "data_collector.security",
                "api_platform.security.resource_access_checker"
            ]
        },
        "security.route_loader.logout": {
            "class": "Symfony\\Bundle\\SecurityBundle\\Routing\\LogoutRouteLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                [],
                "security.logout_uris"
            ],
            "file": null,
            "tags": [
                {
                    "name": "routing.route_loader",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.rhF__EI"
            ]
        },
        "security.security_token_value_resolver": {
            "class": "Symfony\\Component\\Security\\Http\\Controller\\SecurityTokenValueResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "security.token_storage"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "controller.argument_value_resolver",
                    "parameters": {
                        "priority": 120,
                        "name": "Symfony\\Component\\Security\\Http\\Controller\\SecurityTokenValueResolver"
                    }
                }
            ],
            "usages": [
                ".debug.value_resolver.security.security_token_value_resolver"
            ]
        },
        "security.token_storage": {
            "class": "Symfony\\Component\\Security\\Core\\Authentication\\Token\\Storage\\UsageTrackingTokenStorage",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A token storage that increments the session usage index when the token is accessed.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.untracked_token_storage"
                },
                {
                    "type": "service",
                    "id": ".service_locator.mDV6p8L"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "disableUsageTracking"
                    }
                },
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "setToken"
                    }
                }
            ],
            "usages": [
                "Symfony\\Component\\Security\\Core\\Authentication\\Token\\Storage\\TokenStorageInterface",
                "services_resetter",
                "twig.app_variable",
                "security.authorization_checker",
                "security.user_value_resolver",
                "security.security_token_value_resolver",
                "security.impersonate_url_generator",
                "security.logout_url_generator",
                "security.validator.user_password",
                "security.context_listener",
                "security.access_listener",
                "security.context_listener.0",
                "security.logout_listener.main",
                "security.authenticator.manager.main",
                "security.exception_listener.main",
                "api_platform.security.resource_access_checker",
                ".service_locator.ZyP9f7K",
                ".service_locator.2QMaG2L"
            ]
        },
        "security.untracked_token_storage": {
            "class": "Symfony\\Component\\Security\\Core\\Authentication\\Token\\Storage\\TokenStorage",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "TokenStorage contains a TokenInterface.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "security.token_storage",
                "security.context_listener",
                "data_collector.security",
                "security.context_listener.0",
                "security.firewall.map.context.main"
            ]
        },
        "security.user.provider.chain": {
            "class": "Symfony\\Component\\Security\\Core\\User\\ChainUserProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Chain User Provider.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.user.provider.concrete.app_user_provider": {
            "class": "Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Wrapper around a Doctrine ObjectManager.",
            "arguments": [
                {
                    "type": "service",
                    "id": "doctrine"
                },
                "App\\Entity\\User",
                "name",
                null
            ],
            "file": null,
            "tags": [],
            "usages": [
                "security.user_providers",
                "Symfony\\Component\\Security\\Core\\User\\UserProviderInterface",
                "security.context_listener",
                "security.listener.user_provider",
                "security.listener.main.user_provider",
                "security.context_listener.0",
                "security.authenticator.form_login.main",
                "lexik_jwt_authentication.generate_token_command"
            ]
        },
        "security.user.provider.in_memory": {
            "class": "Symfony\\Component\\Security\\Core\\User\\InMemoryUserProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "InMemoryUserProvider is a simple non persistent user provider.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.user.provider.ldap": {
            "class": "Symfony\\Component\\Ldap\\Security\\LdapUserProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "abstract",
                    "text": "security.ldap.ldap"
                },
                {
                    "type": "abstract",
                    "text": "base dn"
                },
                {
                    "type": "abstract",
                    "text": "search dn"
                },
                {
                    "type": "abstract",
                    "text": "search password"
                },
                {
                    "type": "abstract",
                    "text": "default_roles"
                },
                {
                    "type": "abstract",
                    "text": "uid key"
                },
                {
                    "type": "abstract",
                    "text": "filter"
                },
                {
                    "type": "abstract",
                    "text": "password_attribute"
                },
                {
                    "type": "abstract",
                    "text": "extra_fields (email etc)"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.user.provider.missing": {
            "class": "Symfony\\Component\\Security\\Core\\User\\MissingUserProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "MissingUserProvider is a dummy user provider used to throw proper exception when a firewall requires a user provider but none was defined.",
            "arguments": [
                {
                    "type": "abstract",
                    "text": "firewall"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.user_authenticator": {
            "class": "Symfony\\Bundle\\SecurityBundle\\Security\\UserAuthenticator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A decorator that delegates all method calls to the authenticator manager of the current firewall.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.firewall.map"
                },
                {
                    "type": "service",
                    "id": "security.authenticator.managers_locator"
                },
                {
                    "type": "service",
                    "id": "request_stack"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\Security\\Http\\Authentication\\UserAuthenticatorInterface"
            ]
        },
        "security.user_checker": {
            "class": "Symfony\\Component\\Security\\Core\\User\\InMemoryUserChecker",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Checks the state of the in-memory user account.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "security.user_checker.main",
                "Symfony\\Component\\Security\\Core\\User\\UserCheckerInterface",
                "security.user_checker_locator",
                "security.listener.user_checker.main"
            ]
        },
        "security.user_checker.chain.main": {
            "class": "Symfony\\Component\\Security\\Core\\User\\ChainUserChecker",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                []
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "security.user_checker_locator": {
            "class": "Symfony\\Component\\DependencyInjection\\ServiceLocator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "main": {
                        "type": "service",
                        "id": "security.user_checker"
                    }
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                ".service_locator.2QMaG2L"
            ]
        },
        "security.user_password_hasher": {
            "class": "Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasher",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Hashes passwords based on the user and the PasswordHasherFactory.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.password_hasher_factory"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "security.password_hasher",
                "Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface",
                "App\\State\\UserPasswordProcessor",
                "App\\Command\\UserCreateCommand",
                ".service_locator.lQAlGdR"
            ]
        },
        "security.user_value_resolver": {
            "class": "Symfony\\Component\\Security\\Http\\Controller\\UserValueResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Supports the argument type of {@see UserInterface}.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.token_storage"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "controller.argument_value_resolver",
                    "parameters": {
                        "priority": 120,
                        "name": "Symfony\\Component\\Security\\Http\\Controller\\UserValueResolver"
                    }
                }
            ],
            "usages": [
                ".debug.value_resolver.security.user_value_resolver"
            ]
        },
        "security.validator.user_password": {
            "class": "Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPasswordValidator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "security.token_storage"
                },
                {
                    "type": "service",
                    "id": "security.password_hasher_factory"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "validator.constraint_validator",
                    "parameters": {
                        "alias": "security.validator.user_password"
                    }
                }
            ],
            "usages": [
                ".service_locator.kCsWobb"
            ]
        },
        "serializer.data_collector": {
            "class": "Symfony\\Component\\Serializer\\DataCollector\\SerializerDataCollector",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "data_collector",
                    "parameters": {
                        "template": "@WebProfiler\/Collector\/serializer.html.twig",
                        "id": "serializer"
                    }
                }
            ],
            "usages": [
                ".72_TraceableEncoder~4VeSJ51",
                ".71_TraceableEncoder~4VeSJ51",
                ".70_TraceableEncoder~4VeSJ51",
                ".69_TraceableEncoder~4VeSJ51",
                ".68_TraceableEncoder~4VeSJ51",
                ".67_TraceableEncoder~4VeSJ51",
                ".66_TraceableEncoder~4VeSJ51",
                ".65_TraceableEncoder~4VeSJ51",
                ".64_TraceableNormalizer~4VeSJ51",
                ".63_TraceableNormalizer~4VeSJ51",
                ".62_TraceableNormalizer~4VeSJ51",
                ".61_TraceableNormalizer~4VeSJ51",
                ".60_TraceableNormalizer~4VeSJ51",
                ".59_TraceableNormalizer~4VeSJ51",
                ".58_TraceableNormalizer~4VeSJ51",
                ".57_TraceableNormalizer~4VeSJ51",
                ".56_TraceableNormalizer~4VeSJ51",
                ".55_TraceableNormalizer~4VeSJ51",
                ".54_TraceableNormalizer~4VeSJ51",
                ".53_TraceableNormalizer~4VeSJ51",
                ".52_TraceableNormalizer~4VeSJ51",
                ".51_TraceableNormalizer~4VeSJ51",
                ".50_TraceableNormalizer~4VeSJ51",
                ".49_TraceableNormalizer~4VeSJ51",
                ".48_TraceableNormalizer~4VeSJ51",
                ".47_TraceableNormalizer~4VeSJ51",
                ".46_TraceableNormalizer~4VeSJ51",
                ".45_TraceableNormalizer~4VeSJ51",
                ".44_TraceableNormalizer~4VeSJ51",
                ".43_TraceableNormalizer~4VeSJ51",
                ".42_TraceableNormalizer~4VeSJ51",
                ".41_TraceableNormalizer~4VeSJ51",
                ".40_TraceableNormalizer~4VeSJ51",
                ".39_TraceableNormalizer~4VeSJ51",
                ".38_TraceableNormalizer~4VeSJ51",
                ".37_TraceableNormalizer~4VeSJ51",
                ".36_TraceableNormalizer~4VeSJ51",
                "profiler",
                "debug.serializer",
                ".debug.serializer.normalizer.serializer.denormalizer.unwrapping",
                ".debug.serializer.normalizer.api_platform.openapi.normalizer.api_gateway",
                ".debug.serializer.normalizer.api_platform.openapi.normalizer.legacy",
                ".debug.serializer.normalizer.api_platform.normalizer.constraint_violation_list",
                ".debug.serializer.normalizer.api_platform.hydra.normalizer.constraint_violation_list",
                ".debug.serializer.normalizer.api_platform.openapi.normalizer",
                ".debug.serializer.normalizer.api_platform.jsonld.normalizer.validation_exception",
                ".debug.serializer.normalizer.api_platform.hydra.normalizer.documentation",
                ".debug.serializer.normalizer.api_platform.hydra.normalizer.entrypoint",
                ".debug.serializer.normalizer.api_platform.problem.normalizer.validation_exception",
                ".debug.serializer.normalizer.api_platform.jsonld.normalizer.error",
                ".debug.serializer.normalizer.serializer.normalizer.problem",
                ".debug.serializer.normalizer.serializer.normalizer.uid",
                ".debug.serializer.normalizer.api_platform.jsonld.normalizer.item",
                ".debug.serializer.normalizer.api_platform.serializer.normalizer.item",
                ".debug.serializer.normalizer.serializer.normalizer.datetime",
                ".debug.serializer.normalizer.serializer.normalizer.constraint_violation_list",
                ".debug.serializer.normalizer.serializer.normalizer.mime_message",
                ".debug.serializer.normalizer.serializer.normalizer.datetimezone",
                ".debug.serializer.normalizer.serializer.normalizer.dateinterval",
                ".debug.serializer.normalizer.serializer.normalizer.form_error",
                ".debug.serializer.normalizer.serializer.normalizer.backed_enum",
                ".debug.serializer.normalizer.serializer.normalizer.number",
                ".debug.serializer.normalizer.serializer.normalizer.data_uri",
                ".debug.serializer.normalizer.serializer.normalizer.json_serializable",
                ".debug.serializer.normalizer.api_platform.hydra.normalizer.collection",
                ".debug.serializer.normalizer.serializer.denormalizer.array",
                ".debug.serializer.normalizer.api_platform.jsonld.normalizer.object",
                ".debug.serializer.normalizer.serializer.normalizer.object",
                ".debug.serializer.encoder.serializer.encoder.xml",
                ".debug.serializer.encoder.serializer.encoder.json",
                ".debug.serializer.encoder.serializer.encoder.yaml",
                ".debug.serializer.encoder.serializer.encoder.csv",
                ".debug.serializer.encoder.api_platform.jsonopenapi.encoder",
                ".debug.serializer.encoder.api_platform.yamlopenapi.encoder",
                ".debug.serializer.encoder.api_platform.jsonld.encoder",
                ".debug.serializer.encoder.api_platform.problem.encoder"
            ]
        },
        "serializer.denormalizer.array": {
            "class": "Symfony\\Component\\Serializer\\Normalizer\\ArrayDenormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Denormalizes arrays of objects.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "built_in": 1,
                        "priority": -990
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -990
                    }
                }
            ],
            "usages": [
                ".62_TraceableNormalizer~4VeSJ51",
                ".debug.serializer.normalizer.serializer.denormalizer.array"
            ]
        },
        "serializer.denormalizer.unwrapping": {
            "class": "Symfony\\Component\\Serializer\\Normalizer\\UnwrappingDenormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "property_accessor"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "built_in": 1,
                        "priority": 1000
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": 1000
                    }
                }
            ],
            "usages": [
                ".36_TraceableNormalizer~4VeSJ51",
                ".debug.serializer.normalizer.serializer.denormalizer.unwrapping"
            ]
        },
        "serializer.encoder.csv": {
            "class": "Symfony\\Component\\Serializer\\Encoder\\CsvEncoder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Encodes CSV data.",
            "arguments": [
                {
                    "hydra_prefix": false
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.encoder",
                    "parameters": {
                        "built_in": 1
                    }
                },
                {
                    "name": "serializer.encoder.default",
                    "parameters": []
                }
            ],
            "usages": [
                ".68_TraceableEncoder~4VeSJ51",
                ".debug.serializer.encoder.serializer.encoder.csv"
            ]
        },
        "serializer.encoder.json": {
            "class": "Symfony\\Component\\Serializer\\Encoder\\JsonEncoder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Encodes JSON data.",
            "arguments": [
                null,
                null,
                {
                    "hydra_prefix": false
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.encoder",
                    "parameters": {
                        "built_in": 1
                    }
                },
                {
                    "name": "serializer.encoder.default",
                    "parameters": []
                }
            ],
            "usages": [
                ".66_TraceableEncoder~4VeSJ51",
                ".1_Serializer~1OK917Z",
                ".debug.serializer.encoder.serializer.encoder.json"
            ]
        },
        "serializer.encoder.xml": {
            "class": "Symfony\\Component\\Serializer\\Encoder\\XmlEncoder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "hydra_prefix": false
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.encoder",
                    "parameters": {
                        "built_in": 1
                    }
                },
                {
                    "name": "serializer.encoder.default",
                    "parameters": []
                }
            ],
            "usages": [
                ".65_TraceableEncoder~4VeSJ51",
                ".debug.serializer.encoder.serializer.encoder.xml"
            ]
        },
        "serializer.encoder.yaml": {
            "class": "Symfony\\Component\\Serializer\\Encoder\\YamlEncoder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Encodes YAML data.",
            "arguments": [
                null,
                null,
                {
                    "hydra_prefix": false
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.encoder",
                    "parameters": {
                        "built_in": 1
                    }
                },
                {
                    "name": "serializer.encoder.default",
                    "parameters": []
                }
            ],
            "usages": [
                ".67_TraceableEncoder~4VeSJ51",
                "api_platform.yamlopenapi.encoder",
                ".debug.serializer.encoder.serializer.encoder.yaml"
            ]
        },
        "serializer.mapping.cache.symfony": {
            "class": "Psr\\Cache\\CacheItemPoolInterface",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "CacheItemPoolInterface generates CacheItemInterface objects.",
            "arguments": [
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/serialization.php",
                {
                    "type": "service",
                    "id": "cache.serializer"
                }
            ],
            "file": null,
            "factory_class": "Symfony\\Component\\Cache\\Adapter\\PhpArrayAdapter",
            "factory_method": "create",
            "tags": [],
            "usages": []
        },
        "serializer.mapping.cache_warmer": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\CacheWarmer\\SerializerCacheWarmer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Warms up XML and YAML serializer metadata.",
            "arguments": [
                [
                    {
                        "type": "service",
                        "id": ".8_AttributeLoader~4VeSJ51"
                    },
                    {
                        "type": "service",
                        "id": ".9_PropertyMetadataLoader~4VeSJ51"
                    }
                ],
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/serialization.php"
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.cache_warmer",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "serializer.mapping.chain_loader": {
            "class": "Symfony\\Component\\Serializer\\Mapping\\Loader\\LoaderChain",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Calls multiple {@link LoaderInterface} instances in a chain.",
            "arguments": [
                [
                    {
                        "type": "service",
                        "id": ".7_AttributeLoader~4VeSJ51"
                    }
                ]
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.serializer.mapping.class_metadata_factory.inner"
            ]
        },
        "serializer.mapping.class_discriminator_resolver": {
            "class": "Symfony\\Component\\Serializer\\Mapping\\ClassDiscriminatorFromClassMetadata",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.serializer.mapping.class_metadata_factory"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\Serializer\\Mapping\\ClassDiscriminatorResolverInterface",
                "serializer.normalizer.object",
                "serializer.normalizer.property"
            ]
        },
        "serializer.name_converter.camel_case_to_snake_case": {
            "class": "Symfony\\Component\\Serializer\\NameConverter\\CamelCaseToSnakeCaseNameConverter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "CamelCase to Underscore name converter.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "serializer.name_converter.metadata_aware": {
            "class": "Symfony\\Component\\Serializer\\NameConverter\\MetadataAwareNameConverter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.serializer.mapping.class_metadata_factory"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "api_platform.hydra.name_converter.hydra_prefix.inner",
                "serializer.normalizer.constraint_violation_list",
                "serializer.normalizer.object",
                "serializer.normalizer.property",
                "api_platform.hydra.name_converter.hydra_prefix"
            ]
        },
        "serializer.name_converter.metadata_aware.abstract": {
            "class": "Symfony\\Component\\Serializer\\NameConverter\\MetadataAwareNameConverter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": true,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.serializer.mapping.class_metadata_factory"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "serializer.name_converter.snake_case_to_camel_case": {
            "class": "Symfony\\Component\\Serializer\\NameConverter\\SnakeCaseToCamelCaseNameConverter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Underscore to camelCase name converter.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "serializer.normalizer.backed_enum": {
            "class": "Symfony\\Component\\Serializer\\Normalizer\\BackedEnumNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Normalizes a {@see \\BackedEnum} enumeration to a string or an integer.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "built_in": 1,
                        "priority": -915
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -915
                    }
                }
            ],
            "usages": [
                ".57_TraceableNormalizer~4VeSJ51",
                ".debug.serializer.normalizer.serializer.normalizer.backed_enum"
            ]
        },
        "serializer.normalizer.constraint_violation_list": {
            "class": "Symfony\\Component\\Serializer\\Normalizer\\ConstraintViolationListNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": true,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A normalizer that normalizes a ConstraintViolationListInterface instance.",
            "arguments": [
                {
                    "hydra_prefix": false
                },
                {
                    "type": "service",
                    "id": "serializer.name_converter.metadata_aware"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "built_in": 1,
                        "priority": -915
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -915
                    }
                }
            ],
            "usages": [
                ".52_TraceableNormalizer~4VeSJ51",
                ".debug.serializer.normalizer.serializer.normalizer.constraint_violation_list"
            ]
        },
        "serializer.normalizer.data_uri": {
            "class": "Symfony\\Component\\Serializer\\Normalizer\\DataUriNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Normalizes an {@see \\SplFileInfo} object to a data URI. Denormalizes a data URI to a {@see \\SplFileObject} object.",
            "arguments": [
                {
                    "type": "service",
                    "id": "mime_types"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "built_in": 1,
                        "priority": -920
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -920
                    }
                }
            ],
            "usages": [
                ".59_TraceableNormalizer~4VeSJ51",
                ".debug.serializer.normalizer.serializer.normalizer.data_uri"
            ]
        },
        "serializer.normalizer.dateinterval": {
            "class": "Symfony\\Component\\Serializer\\Normalizer\\DateIntervalNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Normalizes an instance of {@see \\DateInterval} to an interval string. Denormalizes an interval string to an instance of {@see \\DateInterval}.",
            "arguments": [
                {
                    "hydra_prefix": false
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "built_in": 1,
                        "priority": -915
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -915
                    }
                }
            ],
            "usages": [
                ".55_TraceableNormalizer~4VeSJ51",
                ".debug.serializer.normalizer.serializer.normalizer.dateinterval"
            ]
        },
        "serializer.normalizer.datetime": {
            "class": "Symfony\\Component\\Serializer\\Normalizer\\DateTimeNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Normalizes an object implementing the {@see \\DateTimeInterface} to a date string. Denormalizes a date string to an instance of {@see \\DateTime} or {@see \\DateTimeImmutable}.",
            "arguments": [
                {
                    "hydra_prefix": false
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "built_in": 1,
                        "priority": -910
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -910
                    }
                }
            ],
            "usages": [
                ".51_TraceableNormalizer~4VeSJ51",
                ".debug.serializer.normalizer.serializer.normalizer.datetime"
            ]
        },
        "serializer.normalizer.datetimezone": {
            "class": "Symfony\\Component\\Serializer\\Normalizer\\DateTimeZoneNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Normalizes a {@see \\DateTimeZone} object to a timezone string.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "built_in": 1,
                        "priority": -915
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -915
                    }
                }
            ],
            "usages": [
                ".54_TraceableNormalizer~4VeSJ51",
                ".debug.serializer.normalizer.serializer.normalizer.datetimezone"
            ]
        },
        "serializer.normalizer.form_error": {
            "class": "Symfony\\Component\\Serializer\\Normalizer\\FormErrorNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Normalizes invalid Form instances.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "built_in": 1,
                        "priority": -915
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -915
                    }
                }
            ],
            "usages": [
                ".56_TraceableNormalizer~4VeSJ51",
                ".debug.serializer.normalizer.serializer.normalizer.form_error"
            ]
        },
        "serializer.normalizer.json_serializable": {
            "class": "Symfony\\Component\\Serializer\\Normalizer\\JsonSerializableNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A normalizer that uses an objects own JsonSerializable implementation.",
            "arguments": [
                null,
                null,
                {
                    "hydra_prefix": false
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "built_in": 1,
                        "priority": -950
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -950
                    }
                }
            ],
            "usages": [
                ".60_TraceableNormalizer~4VeSJ51",
                ".debug.serializer.normalizer.serializer.normalizer.json_serializable"
            ]
        },
        "serializer.normalizer.mime_message": {
            "class": "Symfony\\Component\\Serializer\\Normalizer\\MimeMessageNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Normalize Mime message classes.",
            "arguments": [
                {
                    "type": "service",
                    "id": "serializer.normalizer.property"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "built_in": 1,
                        "priority": -915
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -915
                    }
                }
            ],
            "usages": [
                ".53_TraceableNormalizer~4VeSJ51",
                ".debug.serializer.normalizer.serializer.normalizer.mime_message"
            ]
        },
        "serializer.normalizer.number": {
            "class": "Symfony\\Component\\Serializer\\Normalizer\\NumberNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Normalizes {@see Number} and {@see \\GMP} to a string.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "built_in": 1,
                        "priority": -915
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -915
                    }
                }
            ],
            "usages": [
                ".58_TraceableNormalizer~4VeSJ51",
                ".debug.serializer.normalizer.serializer.normalizer.number"
            ]
        },
        "serializer.normalizer.object": {
            "class": "Symfony\\Component\\Serializer\\Normalizer\\ObjectNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Converts between objects and arrays using the PropertyAccess component.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.serializer.mapping.class_metadata_factory"
                },
                {
                    "type": "service",
                    "id": "serializer.name_converter.metadata_aware"
                },
                {
                    "type": "service",
                    "id": "property_accessor"
                },
                {
                    "type": "service",
                    "id": "property_info"
                },
                {
                    "type": "service",
                    "id": "serializer.mapping.class_discriminator_resolver"
                },
                null,
                {
                    "hydra_prefix": false
                },
                {
                    "type": "service",
                    "id": "property_info"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "built_in": 1,
                        "priority": -1000
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -1000
                    }
                }
            ],
            "usages": [
                ".64_TraceableNormalizer~4VeSJ51",
                "api_platform.jsonld.normalizer.object",
                ".debug.serializer.normalizer.serializer.normalizer.object"
            ]
        },
        "serializer.normalizer.problem": {
            "class": "Symfony\\Component\\Serializer\\Normalizer\\ProblemNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Normalizes errors according to the API Problem spec (RFC 7807).",
            "arguments": [
                true,
                {
                    "hydra_prefix": false
                },
                null
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "built_in": 1,
                        "priority": -890
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -890
                    }
                }
            ],
            "usages": [
                ".47_TraceableNormalizer~4VeSJ51",
                ".debug.serializer.normalizer.serializer.normalizer.problem"
            ]
        },
        "serializer.normalizer.property": {
            "class": "Symfony\\Component\\Serializer\\Normalizer\\PropertyNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Converts between objects and arrays by mapping properties.",
            "arguments": [
                {
                    "type": "service",
                    "id": "api_platform.serializer.mapping.class_metadata_factory"
                },
                {
                    "type": "service",
                    "id": "serializer.name_converter.metadata_aware"
                },
                {
                    "type": "service",
                    "id": "property_info"
                },
                {
                    "type": "service",
                    "id": "serializer.mapping.class_discriminator_resolver"
                },
                null,
                []
            ],
            "file": null,
            "tags": [],
            "usages": [
                "serializer.normalizer.mime_message"
            ]
        },
        "serializer.normalizer.uid": {
            "class": "Symfony\\Component\\Serializer\\Normalizer\\UidNormalizer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "hydra_prefix": false
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "serializer.normalizer",
                    "parameters": {
                        "built_in": 1,
                        "priority": -890
                    }
                },
                {
                    "name": "serializer.normalizer.default",
                    "parameters": {
                        "priority": -890
                    }
                }
            ],
            "usages": [
                ".48_TraceableNormalizer~4VeSJ51",
                ".debug.serializer.normalizer.serializer.normalizer.uid"
            ]
        },
        "service_container": {
            "class": "Symfony\\Component\\DependencyInjection\\ContainerInterface",
            "public": true,
            "synthetic": true,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "ContainerInterface is the interface implemented by service container classes.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                ".21_Registry~4VeSJ51",
                "parameter_bag",
                "dependency_injection.config.container_parameters_resource_checker",
                "reverse_container",
                "container.env_var_processor",
                "container.getenv",
                "doctrine",
                "doctrine.dbal.idle_connection_listener",
                "api_platform.route_loader",
                "api_platform.metadata.resource_extractor.xml",
                "api_platform.metadata.property_extractor.xml",
                "api_platform.metadata.resource_extractor.yaml",
                "api_platform.metadata.property_extractor.yaml",
                ".service_locator.zHyJIs5.kernel::registerContainerConfiguration()",
                ".service_locator.zHyJIs5.kernel::loadRoutes()",
                ".service_locator.azC1irB.App\\Controller\\Admin\\Api\\ProductBootstrapController::__invoke()",
                ".service_locator.Icu.WO7.App\\Controller\\Admin\\DashboardController::dashboard()",
                ".service_locator.Qe8BMu3.App\\Controller\\Api\\CsrfController::token()",
                ".service_locator.oCuGgOo.App\\Controller\\CartClaimController::claim()",
                ".service_locator.5ZB0iDK.App\\Controller\\Catalog\\CartController::index()",
                ".service_locator.mDm18Yb.App\\Controller\\Catalog\\CheckoutController::index()",
                ".service_locator.H0xKdxO.App\\Controller\\Catalog\\CheckoutController::submit()",
                ".service_locator.LO52hLF.App\\Controller\\Catalog\\Product\\ProductCatalogController::show()",
                ".service_locator.Icu.WO7.App\\Controller\\ConfigController::getPaginationConfig()",
                ".service_locator.Icu.WO7.App\\Controller\\ConfigController::getCityPaginationConfig()",
                ".service_locator.Icu.WO7.App\\Controller\\ConfigController::getPvzPaginationConfig()",
                ".service_locator.3QECKYg.App\\Controller\\SecurityController::login()",
                ".service_locator.lQAlGdR.App\\Controller\\SecurityController::apiLogin()",
                ".service_locator.ZyP9f7K.App\\Controller\\Admin\\Api\\ProductBootstrapController",
                ".service_locator.ZyP9f7K.App\\Controller\\Admin\\Api\\ProductCopyController",
                ".service_locator.ZyP9f7K.App\\Controller\\Admin\\DashboardController",
                ".service_locator.ZyP9f7K.App\\Controller\\Admin\\SecurityController",
                ".service_locator.ZyP9f7K.App\\Controller\\Api\\CartApiController",
                ".service_locator.ZyP9f7K.App\\Controller\\Api\\CsrfController",
                ".service_locator.ZyP9f7K.App\\Controller\\Api\\DeliveryApiController",
                ".service_locator.ZyP9f7K.App\\Controller\\Api\\DeliveryPublicController",
                ".service_locator.ZyP9f7K.App\\Controller\\CartClaimController",
                ".service_locator.ZyP9f7K.App\\Controller\\Catalog\\CartController",
                ".service_locator.ZyP9f7K.App\\Controller\\Catalog\\Category\\CatalogCategoryController",
                ".service_locator.ZyP9f7K.App\\Controller\\Catalog\\CheckoutController",
                ".service_locator.ZyP9f7K.App\\Controller\\Catalog\\DeliveryPageController",
                ".service_locator.ZyP9f7K.App\\Controller\\Catalog\\IndexController",
                ".service_locator.ZyP9f7K.App\\Controller\\Catalog\\Product\\ProductCatalogController",
                ".service_locator.ZyP9f7K.App\\Controller\\ConfigController",
                ".service_locator.ZyP9f7K.App\\Controller\\Debug\\SessionDebugController",
                ".service_locator.ZyP9f7K.App\\Controller\\HomeController",
                ".service_locator.ZyP9f7K.App\\Controller\\SecurityController",
                ".service_locator.ZyP9f7K.App\\Controller\\SessionController",
                ".service_locator.ZyP9f7K.App\\Controller\\StimulusTestController",
                ".service_locator.9zR6mch.router.default",
                ".service_locator.qXR9Hv0.router.cache_warmer",
                ".service_locator.lMv3Dwi.twig.template_cache_warmer",
                ".service_locator.7vU95QS.ux.twig_component.cache_warmer",
                ".service_locator.KeMDz.J.ux.live_component.event_subscriber",
                ".service_locator.Pua8nx..ux.live_component.intercept_child_component_render_subscriber",
                ".service_locator.xQNzhD7.ux.live_component.child_component_partial_renderer",
                ".service_locator.lZH22eH.Symfony\\UX\\LiveComponent\\ComponentValidator",
                ".service_locator.M6Pf5l9.ux.live_component.add_attributes_subscriber",
                "debug.controller_resolver.inner"
            ]
        },
        "services_resetter": {
            "class": "Symfony\\Component\\HttpKernel\\DependencyInjection\\ServicesResetter",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Resets provided services.",
            "arguments": [
                {
                    "request_stack": {
                        "type": "service",
                        "id": "request_stack"
                    },
                    "container.env_var_processor": {
                        "type": "service",
                        "id": "container.env_var_processor"
                    },
                    "cache.app": {
                        "type": "service",
                        "id": "cache.app"
                    },
                    "cache.system": {
                        "type": "service",
                        "id": "cache.system"
                    },
                    "cache.validator": {
                        "type": "service",
                        "id": "cache.validator"
                    },
                    "cache.serializer": {
                        "type": "service",
                        "id": "cache.serializer"
                    },
                    "cache.property_info": {
                        "type": "service",
                        "id": "cache.property_info"
                    },
                    "debug.stopwatch": {
                        "type": "service",
                        "id": "debug.stopwatch"
                    },
                    "debug.event_dispatcher": {
                        "type": "service",
                        "id": "debug.event_dispatcher"
                    },
                    "debug.log_processor": {
                        "type": "service",
                        "id": "debug.log_processor"
                    },
                    "session_listener": {
                        "type": "service",
                        "id": "session_listener"
                    },
                    "cache.validator_expression_language": {
                        "type": "service",
                        "id": "cache.validator_expression_language"
                    },
                    "profiler": {
                        "type": "service",
                        "id": "profiler"
                    },
                    "debug.validator": {
                        "type": "service",
                        "id": "debug.validator"
                    },
                    "webpack_encore.tag_renderer": {
                        "type": "service",
                        "id": "webpack_encore.tag_renderer"
                    },
                    "cache.webpack_encore": {
                        "type": "service",
                        "id": "cache.webpack_encore"
                    },
                    "webpack_encore.entrypoint_lookup[_default]": {
                        "type": "service",
                        "id": "webpack_encore.entrypoint_lookup[_default]"
                    },
                    "twig": {
                        "type": "service",
                        "id": "twig"
                    },
                    "security.token_storage": {
                        "type": "service",
                        "id": "security.token_storage"
                    },
                    "cache.security_expression_language": {
                        "type": "service",
                        "id": "cache.security_expression_language"
                    },
                    "cache.security_is_granted_attribute_expression_language": {
                        "type": "service",
                        "id": "cache.security_is_granted_attribute_expression_language"
                    },
                    "cache.security_is_csrf_token_valid_attribute_expression_language": {
                        "type": "service",
                        "id": "cache.security_is_csrf_token_valid_attribute_expression_language"
                    },
                    "debug.security.access.decision_manager": {
                        "type": "service",
                        "id": "debug.security.access.decision_manager"
                    },
                    "debug.security.firewall": {
                        "type": "service",
                        "id": "debug.security.firewall"
                    },
                    "debug.security.firewall.authenticator.main": {
                        "type": "service",
                        "id": "debug.security.firewall.authenticator.main"
                    },
                    "doctrine": {
                        "type": "service",
                        "id": "doctrine"
                    },
                    "doctrine.debug_data_holder": {
                        "type": "service",
                        "id": "doctrine.debug_data_holder"
                    },
                    "api_platform.cache.route_name_resolver": {
                        "type": "service",
                        "id": "api_platform.cache.route_name_resolver"
                    },
                    "api_platform.cache.metadata.resource": {
                        "type": "service",
                        "id": "api_platform.cache.metadata.resource"
                    },
                    "api_platform.cache.metadata.property": {
                        "type": "service",
                        "id": "api_platform.cache.metadata.property"
                    },
                    "api_platform.cache.metadata.resource_collection": {
                        "type": "service",
                        "id": "api_platform.cache.metadata.resource_collection"
                    },
                    "api_platform.cache.openapi": {
                        "type": "service",
                        "id": "api_platform.cache.openapi"
                    },
                    "monolog.handler.main": {
                        "type": "service",
                        "id": "monolog.handler.main"
                    },
                    "monolog.handler.console": {
                        "type": "service",
                        "id": "monolog.handler.console"
                    },
                    "monolog.handler.doctrine": {
                        "type": "service",
                        "id": "monolog.handler.doctrine"
                    },
                    "monolog.handler.security": {
                        "type": "service",
                        "id": "monolog.handler.security"
                    },
                    "monolog.handler.request": {
                        "type": "service",
                        "id": "monolog.handler.request"
                    },
                    "monolog.handler.deprecation": {
                        "type": "service",
                        "id": "monolog.handler.deprecation"
                    },
                    "monolog.handler.idempotency": {
                        "type": "service",
                        "id": "monolog.handler.idempotency"
                    },
                    "ux.twig_component.component_factory": {
                        "type": "service",
                        "id": "ux.twig_component.component_factory"
                    },
                    "ux.twig_component.component_renderer": {
                        "type": "service",
                        "id": "ux.twig_component.component_renderer"
                    },
                    "cache.ux.twig_component": {
                        "type": "service",
                        "id": "cache.ux.twig_component"
                    },
                    "ux.live_component.metadata_factory": {
                        "type": "service",
                        "id": "ux.live_component.metadata_factory"
                    },
                    "debug.security.event_dispatcher.main": {
                        "type": "service",
                        "id": "debug.security.event_dispatcher.main"
                    }
                },
                {
                    "request_stack": [
                        "?resetRequestFormats"
                    ],
                    "container.env_var_processor": [
                        "reset"
                    ],
                    "cache.app": [
                        "reset"
                    ],
                    "cache.system": [
                        "reset"
                    ],
                    "cache.validator": [
                        "reset"
                    ],
                    "cache.serializer": [
                        "reset"
                    ],
                    "cache.property_info": [
                        "reset"
                    ],
                    "debug.stopwatch": [
                        "reset"
                    ],
                    "debug.event_dispatcher": [
                        "reset"
                    ],
                    "debug.log_processor": [
                        "reset"
                    ],
                    "session_listener": [
                        "reset"
                    ],
                    "cache.validator_expression_language": [
                        "reset"
                    ],
                    "profiler": [
                        "reset"
                    ],
                    "debug.validator": [
                        "reset"
                    ],
                    "webpack_encore.tag_renderer": [
                        "reset"
                    ],
                    "cache.webpack_encore": [
                        "reset"
                    ],
                    "webpack_encore.entrypoint_lookup[_default]": [
                        "reset"
                    ],
                    "twig": [
                        "resetGlobals"
                    ],
                    "security.token_storage": [
                        "disableUsageTracking",
                        "setToken"
                    ],
                    "cache.security_expression_language": [
                        "reset"
                    ],
                    "cache.security_is_granted_attribute_expression_language": [
                        "reset"
                    ],
                    "cache.security_is_csrf_token_valid_attribute_expression_language": [
                        "reset"
                    ],
                    "debug.security.access.decision_manager": [
                        "?reset"
                    ],
                    "debug.security.firewall": [
                        "reset"
                    ],
                    "debug.security.firewall.authenticator.main": [
                        "reset"
                    ],
                    "doctrine": [
                        "reset"
                    ],
                    "doctrine.debug_data_holder": [
                        "reset"
                    ],
                    "api_platform.cache.route_name_resolver": [
                        "reset"
                    ],
                    "api_platform.cache.metadata.resource": [
                        "reset"
                    ],
                    "api_platform.cache.metadata.property": [
                        "reset"
                    ],
                    "api_platform.cache.metadata.resource_collection": [
                        "reset"
                    ],
                    "api_platform.cache.openapi": [
                        "reset"
                    ],
                    "monolog.handler.main": [
                        "reset"
                    ],
                    "monolog.handler.console": [
                        "reset"
                    ],
                    "monolog.handler.doctrine": [
                        "reset"
                    ],
                    "monolog.handler.security": [
                        "reset"
                    ],
                    "monolog.handler.request": [
                        "reset"
                    ],
                    "monolog.handler.deprecation": [
                        "reset"
                    ],
                    "monolog.handler.idempotency": [
                        "reset"
                    ],
                    "ux.twig_component.component_factory": [
                        "reset"
                    ],
                    "ux.twig_component.component_renderer": [
                        "reset"
                    ],
                    "cache.ux.twig_component": [
                        "reset"
                    ],
                    "ux.live_component.metadata_factory": [
                        "reset"
                    ],
                    "debug.security.event_dispatcher.main": [
                        "reset"
                    ]
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\HttpKernel\\DependencyInjection\\ServicesResetterInterface"
            ]
        },
        "session.abstract_handler": {
            "class": "Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "This abstract session handler provides a generic implementation of the PHP 7.0 SessionUpdateTimestampHandlerInterface, enabling strict and lazy session handling.",
            "arguments": [
                {
                    "type": "abstract",
                    "text": "A string or a connection object"
                },
                []
            ],
            "file": null,
            "factory_class": "Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\SessionHandlerFactory",
            "factory_method": "createHandler",
            "tags": [],
            "usages": []
        },
        "session.factory": {
            "class": "Symfony\\Component\\HttpFoundation\\Session\\SessionFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "request_stack"
                },
                {
                    "type": "service",
                    "id": "session.storage.factory.native"
                },
                [
                    {
                        "type": "service",
                        "id": "session_listener"
                    },
                    "onSessionUsage"
                ]
            ],
            "file": null,
            "tags": [],
            "usages": [
                ".service_locator.ECaP3MA"
            ]
        },
        "session.handler.native": {
            "class": "Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Adds basic `SessionUpdateTimestampHandlerInterface` behaviors to another `SessionHandlerInterface`.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".15_SessionHandler~4VeSJ51"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "SessionHandlerInterface",
                "session.handler",
                "session.storage.factory.native",
                "session.storage.factory.php_bridge",
                "doctrine.orm.listeners.pdo_session_handler_schema_listener"
            ]
        },
        "session.handler.native_file": {
            "class": "Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Adds basic `SessionUpdateTimestampHandlerInterface` behaviors to another `SessionHandlerInterface`.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".16_NativeFileSessionHandler~4VeSJ51"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "session.marshaller": {
            "class": "Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\IdentityMarshaller",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "session.storage.factory.mock_file": {
            "class": "Symfony\\Component\\HttpFoundation\\Session\\Storage\\MockFileSessionStorageFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/sessions",
                "MOCKSESSID",
                {
                    "type": "service",
                    "id": ".14_MetadataBag~4VeSJ51"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "session.storage.factory.native": {
            "class": "Symfony\\Component\\HttpFoundation\\Session\\Storage\\NativeSessionStorageFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "%session.storage.options%",
                {
                    "type": "service",
                    "id": "session.handler.native"
                },
                {
                    "type": "service",
                    "id": ".12_MetadataBag~4VeSJ51"
                },
                true
            ],
            "file": null,
            "tags": [],
            "usages": [
                "session.storage.factory",
                "session.factory"
            ]
        },
        "session.storage.factory.php_bridge": {
            "class": "Symfony\\Component\\HttpFoundation\\Session\\Storage\\PhpBridgeSessionStorageFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "session.handler.native"
                },
                {
                    "type": "service",
                    "id": ".13_MetadataBag~4VeSJ51"
                },
                true
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "session_listener": {
            "class": "Symfony\\Component\\HttpKernel\\EventListener\\SessionListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Sets the session in the request.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.ECaP3MA"
                },
                true,
                "%session.storage.options%"
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                },
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "services_resetter",
                "debug.event_dispatcher",
                "session.factory"
            ]
        },
        "slugger": {
            "class": "Symfony\\Component\\String\\Slugger\\AsciiSlugger",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "en"
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.locale_aware",
                    "parameters": []
                }
            ],
            "usages": [
                "Symfony\\Component\\String\\Slugger\\SluggerInterface",
                "App\\Service\\ProductCopyService",
                "App\\Service\\ProductLifecycleService",
                "locale_aware_listener"
            ]
        },
        "stimulus.asset_mapper.ux_package_reader": {
            "class": "Symfony\\UX\\StimulusBundle\\Ux\\UxPackageReader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "J:\\laragon\\www\\new3"
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "stimulus.helper": {
            "class": "Symfony\\UX\\StimulusBundle\\Helper\\StimulusHelper",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "twig"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "stimulus.twig_extension",
                "ux.live_component.twig.component_runtime"
            ]
        },
        "stimulus.twig_extension": {
            "class": "Symfony\\UX\\StimulusBundle\\Twig\\StimulusTwigExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "stimulus.helper"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": {
                        "priority": -10
                    }
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "stimulus.ux_controllers_twig_extension": {
            "class": "Symfony\\UX\\StimulusBundle\\Twig\\UxControllersTwigExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "time_based_uuid.factory": {
            "class": "Symfony\\Component\\Uid\\Factory\\TimeBasedUuidFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "factory_service": "uuid.factory",
            "factory_method": "timeBased",
            "tags": [],
            "usages": [
                "Symfony\\Component\\Uid\\Factory\\TimeBasedUuidFactory"
            ]
        },
        "turbo.broadcaster.action_renderer": {
            "class": "Symfony\\UX\\Turbo\\Broadcaster\\TwigBroadcaster",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Renders the incoming entity using Twig before passing it to a broadcaster.",
            "arguments": [
                {
                    "type": "service",
                    "id": "turbo.broadcaster.action_renderer.inner"
                },
                {
                    "type": "service",
                    "id": "twig"
                },
                {
                    "App\\Entity\\": "broadcast\/"
                },
                {
                    "type": "service",
                    "id": "turbo.id_accessor"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.decorator",
                    "parameters": {
                        "id": "turbo.broadcaster.imux",
                        "inner": "turbo.broadcaster.action_renderer.inner"
                    }
                }
            ],
            "usages": [
                "Symfony\\UX\\Turbo\\Broadcaster\\BroadcasterInterface",
                "turbo.broadcaster.imux",
                "turbo.doctrine.event_listener"
            ]
        },
        "turbo.broadcaster.action_renderer.inner": {
            "class": "Symfony\\UX\\Turbo\\Broadcaster\\ImuxBroadcaster",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Passes the incoming updates to all registered broadcasters (inverse multiplexing).",
            "arguments": [
                []
            ],
            "file": null,
            "tags": [],
            "usages": [
                "turbo.broadcaster.action_renderer"
            ]
        },
        "turbo.doctrine.event_listener": {
            "class": "Symfony\\UX\\Turbo\\Doctrine\\BroadcastListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Detects changes made from Doctrine entities and broadcasts updates to the broadcasters.",
            "arguments": [
                {
                    "type": "service",
                    "id": "turbo.broadcaster.action_renderer"
                },
                null
            ],
            "file": null,
            "tags": [
                {
                    "name": "doctrine.event_listener",
                    "parameters": {
                        "event": "onFlush"
                    }
                },
                {
                    "name": "doctrine.event_listener",
                    "parameters": {
                        "event": "postFlush"
                    }
                }
            ],
            "usages": [
                ".service_locator.q6F1VxP"
            ]
        },
        "turbo.id_accessor": {
            "class": "Symfony\\UX\\Turbo\\Broadcaster\\IdAccessor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "property_accessor"
                },
                {
                    "type": "service",
                    "id": "doctrine"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "turbo.broadcaster.action_renderer"
            ]
        },
        "turbo.kernel.request_listener": {
            "class": "Symfony\\UX\\Turbo\\Request\\RequestListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Registers the Turbo request format for all requests.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_listener",
                    "parameters": {
                        "event": "kernel.request",
                        "priority": 256
                    }
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "turbo.twig.extension": {
            "class": "Symfony\\UX\\Turbo\\Twig\\TwigExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "turbo.twig.runtime": {
            "class": "Symfony\\UX\\Turbo\\Twig\\TurboRuntime",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.GIuJv7e"
                },
                "default"
            ],
            "file": null,
            "tags": [
                {
                    "name": "twig.runtime",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.JnFobRQ"
            ]
        },
        "twig": {
            "class": "Twig\\Environment",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Stores the Twig configuration and renders templates.",
            "arguments": [
                {
                    "type": "service",
                    "id": "twig.loader.native_filesystem"
                },
                {
                    "cache": "J:\/laragon\/www\/new3\/var\/cache\/dev\/twig",
                    "charset": "UTF-8",
                    "debug": true,
                    "strict_variables": true,
                    "autoescape": "name"
                }
            ],
            "file": null,
            "calls": [
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addExtension",
                "addGlobal",
                "addRuntimeLoader",
                "addGlobal",
                "addGlobal"
            ],
            "tags": [
                {
                    "name": "container.preload",
                    "parameters": {
                        "class": "Twig\\Cache\\FilesystemCache"
                    }
                },
                {
                    "name": "container.preload",
                    "parameters": {
                        "class": "Twig\\Extension\\CoreExtension"
                    }
                },
                {
                    "name": "container.preload",
                    "parameters": {
                        "class": "Twig\\Extension\\EscaperExtension"
                    }
                },
                {
                    "name": "container.preload",
                    "parameters": {
                        "class": "Twig\\Extension\\OptimizerExtension"
                    }
                },
                {
                    "name": "container.preload",
                    "parameters": {
                        "class": "Twig\\Extension\\StagingExtension"
                    }
                },
                {
                    "name": "container.preload",
                    "parameters": {
                        "class": "Twig\\ExpressionParser\\Infix\\BinaryOperatorExpressionParser"
                    }
                },
                {
                    "name": "container.preload",
                    "parameters": {
                        "class": "Twig\\ExtensionSet"
                    }
                },
                {
                    "name": "container.preload",
                    "parameters": {
                        "class": "Twig\\Template"
                    }
                },
                {
                    "name": "container.preload",
                    "parameters": {
                        "class": "Twig\\TemplateWrapper"
                    }
                },
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "resetGlobals"
                    }
                }
            ],
            "usages": [
                "Twig\\Environment",
                "services_resetter",
                "Symfony\\Bundle\\FrameworkBundle\\Controller\\TemplateController",
                "data_collector.twig",
                "twig.error_renderer.html",
                "controller.template_attribute_listener",
                "twig.command.debug",
                "twig.command.lint",
                "twig.validator",
                "Doctrine\\Bundle\\DoctrineBundle\\Controller\\ProfilerController",
                "api_platform.swagger_ui.processor",
                "web_profiler.controller.profiler",
                "web_profiler.controller.router",
                "web_profiler.debug_toolbar",
                "stimulus.helper",
                "ux.twig_component.component_factory",
                "ux.twig_component.component_renderer",
                "ux.twig_component.command.debug",
                "ux.twig_component.data_collector",
                "ux.live_component.component_hydrator",
                "ux.live_component.child_component_partial_renderer",
                "ux.live_component.add_attributes_subscriber",
                "turbo.broadcaster.action_renderer",
                ".service_locator.ZyP9f7K",
                ".service_locator.lMv3Dwi"
            ]
        },
        "twig.app_variable": {
            "class": "Symfony\\Bridge\\Twig\\AppVariable",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Exposes some Symfony parameters and services as an \"app\" global variable.",
            "arguments": [],
            "file": null,
            "calls": [
                "setEnvironment",
                "setDebug",
                "setTokenStorage",
                "setRequestStack",
                "setEnabledLocales"
            ],
            "tags": [],
            "usages": [
                "twig"
            ]
        },
        "twig.command.debug": {
            "class": "Symfony\\Bridge\\Twig\\Command\\DebugCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Lists twig functions, filters, globals and tests present in the current project.",
            "arguments": [
                {
                    "type": "service",
                    "id": "twig"
                },
                "J:\\laragon\\www\\new3",
                "%kernel.bundles_metadata%",
                "J:\\laragon\\www\\new3\/templates",
                {
                    "type": "service",
                    "id": "debug.file_link_formatter"
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".twig.command.debug.lazy"
            ]
        },
        "twig.command.lint": {
            "class": "Symfony\\Bundle\\TwigBundle\\Command\\LintCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Command that will validate your template syntax and output encountered errors.",
            "arguments": [
                {
                    "type": "service",
                    "id": "twig"
                },
                [
                    "*.twig"
                ]
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".twig.command.lint.lazy"
            ]
        },
        "twig.error_renderer.html": {
            "class": "Symfony\\Bridge\\Twig\\ErrorRenderer\\TwigErrorRenderer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Provides the ability to render custom Twig-based HTML error pages in non-debug mode, otherwise falls back to HtmlErrorRenderer.",
            "arguments": [
                {
                    "type": "service",
                    "id": "twig"
                },
                {
                    "type": "service",
                    "id": "error_handler.error_renderer.html"
                },
                {
                    "type": "service",
                    "id": ".18_bool~4VeSJ51"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "error_renderer.html",
                "console.command.error_dumper",
                "error_handler.error_renderer.serializer"
            ]
        },
        "twig.extension.assets": {
            "class": "Symfony\\Bridge\\Twig\\Extension\\AssetExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Twig extension for the Symfony Asset component.",
            "arguments": [
                {
                    "type": "service",
                    "id": "assets.packages"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "twig.extension.code": {
            "class": "Symfony\\Bundle\\WebProfilerBundle\\Profiler\\CodeExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Twig extension related to PHP code and used by the profiler and the default exception templates.",
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.file_link_formatter"
                },
                "J:\\laragon\\www\\new3",
                "UTF-8"
            ],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "twig.extension.debug": {
            "class": "Twig\\Extension\\DebugExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "twig.extension.debug.stopwatch": {
            "class": "Symfony\\Bridge\\Twig\\Extension\\StopwatchExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Twig extension for the stopwatch helper.",
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.stopwatch"
                },
                true
            ],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "twig.extension.dump": {
            "class": "Symfony\\Bridge\\Twig\\Extension\\DumpExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Provides integration of the dump() function with Twig.",
            "arguments": [
                {
                    "type": "service",
                    "id": "var_dumper.cloner"
                },
                {
                    "type": "service",
                    "id": "var_dumper.html_dumper"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "twig.extension.expression": {
            "class": "Symfony\\Bridge\\Twig\\Extension\\ExpressionExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "ExpressionExtension gives a way to create Expressions from a template.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "twig.extension.htmlsanitizer": {
            "class": "Symfony\\Bridge\\Twig\\Extension\\HtmlSanitizerExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.GIuJv7e"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "twig.extension.httpfoundation": {
            "class": "Symfony\\Bridge\\Twig\\Extension\\HttpFoundationExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Twig extension for the Symfony HttpFoundation component.",
            "arguments": [
                {
                    "type": "service",
                    "id": "url_helper"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "twig.extension.httpkernel": {
            "class": "Symfony\\Bridge\\Twig\\Extension\\HttpKernelExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Provides integration with the HttpKernel component.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "twig.extension.logout_url": {
            "class": "Symfony\\Bridge\\Twig\\Extension\\LogoutUrlExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "LogoutUrlHelper provides generator functions for the logout URL to Twig.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.logout_url_generator"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "twig.extension.profiler": {
            "class": "Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "twig.profile"
                },
                {
                    "type": "service",
                    "id": "debug.stopwatch"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "twig.extension.routing": {
            "class": "Symfony\\Bridge\\Twig\\Extension\\RoutingExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Provides integration of the Routing component with Twig.",
            "arguments": [
                {
                    "type": "service",
                    "id": "router.default"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "twig.extension.security": {
            "class": "Symfony\\Bridge\\Twig\\Extension\\SecurityExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "SecurityExtension exposes security context features.",
            "arguments": [
                {
                    "type": "service",
                    "id": "security.authorization_checker"
                },
                {
                    "type": "service",
                    "id": "security.impersonate_url_generator"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "twig.extension.security_csrf": {
            "class": "Symfony\\Bridge\\Twig\\Extension\\CsrfExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "twig.extension.serializer": {
            "class": "Symfony\\Bridge\\Twig\\Extension\\SerializerExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "twig.extension.trans": {
            "class": "Symfony\\Bridge\\Twig\\Extension\\TranslationExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Provides integration of the Translation component with Twig.",
            "arguments": [
                null
            ],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "twig.extension.weblink": {
            "class": "Symfony\\Bridge\\Twig\\Extension\\WebLinkExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Twig extension for the Symfony WebLink component.",
            "arguments": [
                {
                    "type": "service",
                    "id": "request_stack"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "twig.extension.webprofiler": {
            "class": "Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Twig extension for the profiler.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".24_HtmlDumper~4VeSJ51"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "twig.extension.yaml": {
            "class": "Symfony\\Bridge\\Twig\\Extension\\YamlExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Provides integration of the Yaml component with Twig.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "twig.loader.chain": {
            "class": "Twig\\Loader\\ChainLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Loads templates from other loaders.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "twig.loader.native_filesystem": {
            "class": "Twig\\Loader\\FilesystemLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Loads template from the filesystem.",
            "arguments": [
                [],
                "J:\\laragon\\www\\new3"
            ],
            "file": null,
            "calls": [
                "addPath",
                "addPath",
                "addPath",
                "addPath",
                "addPath",
                "addPath",
                "addPath",
                "addPath",
                "addPath",
                "addPath",
                "addPath",
                "addPath",
                "addPath",
                "addPath",
                "addPath",
                "addPath",
                "addPath",
                "addPath",
                "addPath",
                "addPath",
                "addPath",
                "addPath",
                "addPath",
                "addPath",
                "addPath"
            ],
            "tags": [
                {
                    "name": "twig.loader",
                    "parameters": []
                }
            ],
            "usages": [
                "twig.loader.filesystem",
                "twig.loader",
                "twig",
                "ux.twig_component.component_template_finder"
            ]
        },
        "twig.profile": {
            "class": "Twig\\Profiler\\Profile",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "twig.extension.profiler",
                "data_collector.twig"
            ]
        },
        "twig.runtime.httpkernel": {
            "class": "Symfony\\Bridge\\Twig\\Extension\\HttpKernelRuntime",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Provides integration with the HttpKernel component.",
            "arguments": [
                {
                    "type": "service",
                    "id": "fragment.handler"
                },
                {
                    "type": "service",
                    "id": "fragment.uri_generator"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "twig.runtime",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.JnFobRQ"
            ]
        },
        "twig.runtime.security_csrf": {
            "class": "Symfony\\Bridge\\Twig\\Extension\\CsrfRuntime",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "security.csrf.token_manager"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "twig.runtime",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.JnFobRQ"
            ]
        },
        "twig.runtime.serializer": {
            "class": "Symfony\\Bridge\\Twig\\Extension\\SerializerRuntime",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "debug.serializer"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "twig.runtime",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.JnFobRQ"
            ]
        },
        "twig.runtime_loader": {
            "class": "Twig\\RuntimeLoader\\ContainerRuntimeLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Lazily loads Twig runtime implementations from a PSR-11 container.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.JnFobRQ"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "twig"
            ]
        },
        "twig.template_cache_warmer": {
            "class": "Symfony\\Bundle\\TwigBundle\\CacheWarmer\\TemplateCacheWarmer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Generates the Twig cache for all templates.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.lMv3Dwi.twig.template_cache_warmer"
                },
                {
                    "type": "service",
                    "id": "twig.template_iterator"
                },
                null
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.cache_warmer",
                    "parameters": []
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": {
                        "id": "twig"
                    }
                }
            ],
            "usages": []
        },
        "twig.template_iterator": {
            "class": "Symfony\\Bundle\\TwigBundle\\TemplateIterator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Iterator for all templates in bundles and in the application Resources directory.",
            "arguments": [
                {
                    "type": "service",
                    "id": "kernel"
                },
                [],
                "J:\\laragon\\www\\new3\/templates",
                [
                    "*.twig"
                ]
            ],
            "file": null,
            "tags": [],
            "usages": [
                "twig.template_cache_warmer",
                "ux.live_component.twig.cache_warmer"
            ]
        },
        "twig.validator": {
            "class": "Symfony\\Bridge\\Twig\\Validator\\Constraints\\TwigValidator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "twig"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "validator.constraint_validator",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.kCsWobb"
            ]
        },
        "type_info.resolver": {
            "class": "Symfony\\Component\\TypeInfo\\TypeResolver\\TypeResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Resolves type for a given subject by delegating resolving to nested type resolvers.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.riiCAol"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\TypeInfo\\TypeResolver\\TypeResolverInterface",
                "ux.live_component.metadata_factory"
            ]
        },
        "type_info.resolver.reflection_parameter": {
            "class": "Symfony\\Component\\TypeInfo\\TypeResolver\\ReflectionParameterTypeResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Resolves type for a given parameter reflection.",
            "arguments": [
                {
                    "type": "service",
                    "id": "type_info.resolver.reflection_type"
                },
                {
                    "type": "service",
                    "id": "type_info.type_context_factory"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "type_info.resolver.reflection_parameter.phpdoc_aware"
            ]
        },
        "type_info.resolver.reflection_parameter.phpdoc_aware": {
            "class": "Symfony\\Component\\TypeInfo\\TypeResolver\\PhpDocAwareReflectionTypeResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Resolves type on reflection prioriziting PHP documentation.",
            "arguments": [
                {
                    "type": "service",
                    "id": "type_info.resolver.reflection_parameter"
                },
                {
                    "type": "service",
                    "id": "type_info.resolver.string"
                },
                {
                    "type": "service",
                    "id": "type_info.type_context_factory"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                ".service_locator.riiCAol"
            ]
        },
        "type_info.resolver.reflection_property": {
            "class": "Symfony\\Component\\TypeInfo\\TypeResolver\\ReflectionPropertyTypeResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Resolves type for a given property reflection.",
            "arguments": [
                {
                    "type": "service",
                    "id": "type_info.resolver.reflection_type"
                },
                {
                    "type": "service",
                    "id": "type_info.type_context_factory"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "type_info.resolver.reflection_property.phpdoc_aware"
            ]
        },
        "type_info.resolver.reflection_property.phpdoc_aware": {
            "class": "Symfony\\Component\\TypeInfo\\TypeResolver\\PhpDocAwareReflectionTypeResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Resolves type on reflection prioriziting PHP documentation.",
            "arguments": [
                {
                    "type": "service",
                    "id": "type_info.resolver.reflection_property"
                },
                {
                    "type": "service",
                    "id": "type_info.resolver.string"
                },
                {
                    "type": "service",
                    "id": "type_info.type_context_factory"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                ".service_locator.riiCAol"
            ]
        },
        "type_info.resolver.reflection_return": {
            "class": "Symfony\\Component\\TypeInfo\\TypeResolver\\ReflectionReturnTypeResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Resolves return type for a given function reflection.",
            "arguments": [
                {
                    "type": "service",
                    "id": "type_info.resolver.reflection_type"
                },
                {
                    "type": "service",
                    "id": "type_info.type_context_factory"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "type_info.resolver.reflection_return.phpdoc_aware"
            ]
        },
        "type_info.resolver.reflection_return.phpdoc_aware": {
            "class": "Symfony\\Component\\TypeInfo\\TypeResolver\\PhpDocAwareReflectionTypeResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Resolves type on reflection prioriziting PHP documentation.",
            "arguments": [
                {
                    "type": "service",
                    "id": "type_info.resolver.reflection_return"
                },
                {
                    "type": "service",
                    "id": "type_info.resolver.string"
                },
                {
                    "type": "service",
                    "id": "type_info.type_context_factory"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                ".service_locator.riiCAol"
            ]
        },
        "type_info.resolver.reflection_type": {
            "class": "Symfony\\Component\\TypeInfo\\TypeResolver\\ReflectionTypeResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Resolves type for a given type reflection.",
            "arguments": [
                {
                    "type": "service",
                    "id": "type_info.type_context_factory"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "type_info.resolver.reflection_parameter",
                "type_info.resolver.reflection_property",
                "type_info.resolver.reflection_return",
                ".service_locator.riiCAol"
            ]
        },
        "type_info.resolver.string": {
            "class": "Symfony\\Component\\TypeInfo\\TypeResolver\\StringTypeResolver",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Resolves type for a given string.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "type_info.type_context_factory",
                "type_info.resolver.reflection_parameter.phpdoc_aware",
                "type_info.resolver.reflection_property.phpdoc_aware",
                "type_info.resolver.reflection_return.phpdoc_aware",
                ".service_locator.riiCAol"
            ]
        },
        "type_info.type_context_factory": {
            "class": "Symfony\\Component\\TypeInfo\\TypeContext\\TypeContextFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Creates a type resolving context.",
            "arguments": [
                {
                    "type": "service",
                    "id": "type_info.resolver.string"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "type_info.resolver.reflection_type",
                "type_info.resolver.reflection_parameter",
                "type_info.resolver.reflection_property",
                "type_info.resolver.reflection_return",
                "type_info.resolver.reflection_parameter.phpdoc_aware",
                "type_info.resolver.reflection_property.phpdoc_aware",
                "type_info.resolver.reflection_return.phpdoc_aware"
            ]
        },
        "ulid.factory": {
            "class": "Symfony\\Component\\Uid\\Factory\\UlidFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\Uid\\Factory\\UlidFactory",
                "doctrine.ulid_generator"
            ]
        },
        "uri_signer": {
            "class": "Symfony\\Component\\HttpFoundation\\UriSigner",
            "public": false,
            "synthetic": false,
            "lazy": true,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "%kernel.secret%",
                "_hash",
                "_expiration",
                {
                    "type": "service",
                    "id": "clock"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\HttpFoundation\\UriSigner",
                "fragment.uri_generator"
            ]
        },
        "url_helper": {
            "class": "Symfony\\Component\\HttpFoundation\\UrlHelper",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A helper service for manipulating URLs within and outside the request scope.",
            "arguments": [
                {
                    "type": "service",
                    "id": "request_stack"
                },
                {
                    "type": "service",
                    "id": "router.default"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\HttpFoundation\\UrlHelper",
                "twig.extension.httpfoundation"
            ]
        },
        "uuid.factory": {
            "class": "Symfony\\Component\\Uid\\Factory\\UuidFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                7,
                7,
                5,
                "Symfony\\Component\\Uid\\UuidV4",
                null,
                null
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\Uid\\Factory\\UuidFactory",
                "name_based_uuid.factory",
                "random_based_uuid.factory",
                "time_based_uuid.factory",
                "doctrine.uuid_generator"
            ]
        },
        "ux.live_component.add_attributes_subscriber": {
            "class": "Symfony\\UX\\LiveComponent\\EventListener\\AddLiveAttributesSubscriber",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Adds the extra attributes needed to activate a live controller.",
            "arguments": [
                {
                    "type": "service",
                    "id": "ux.twig_component.component_stack"
                },
                {
                    "type": "service",
                    "id": "ux.live_component.twig.template_mapper"
                },
                {
                    "type": "service",
                    "id": "twig"
                },
                {
                    "type": "service",
                    "id": ".service_locator.M6Pf5l9.ux.live_component.add_attributes_subscriber"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.service_subscriber",
                    "parameters": {
                        "key": "Symfony\\UX\\LiveComponent\\Util\\LiveControllerAttributesCreator",
                        "id": "ux.live_component.live_controller_attributes_creator"
                    }
                },
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "ux.live_component.attribute_helper_factory": {
            "class": "Symfony\\UX\\LiveComponent\\Util\\TwigAttributeHelperFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Helper for building an array of attributes for the live controller element.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "ux.live_component.child_component_partial_renderer",
                "ux.live_component.live_controller_attributes_creator"
            ]
        },
        "ux.live_component.batch_action_controller": {
            "class": "Symfony\\UX\\LiveComponent\\Controller\\BatchActionController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "http_kernel"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "ux.live_component.child_component_partial_renderer": {
            "class": "Symfony\\UX\\LiveComponent\\Util\\ChildComponentPartialRenderer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "ux.live_component.fingerprint_calculator"
                },
                {
                    "type": "service",
                    "id": "ux.live_component.attribute_helper_factory"
                },
                {
                    "type": "service",
                    "id": "twig"
                },
                {
                    "type": "service",
                    "id": ".service_locator.xQNzhD7.ux.live_component.child_component_partial_renderer"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.service_subscriber",
                    "parameters": {
                        "key": "Symfony\\UX\\TwigComponent\\ComponentFactory",
                        "id": "ux.twig_component.component_factory"
                    }
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": {
                        "key": "Symfony\\UX\\LiveComponent\\Metadata\\LiveComponentMetadataFactory",
                        "id": "ux.live_component.metadata_factory"
                    }
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": {
                        "key": "Symfony\\UX\\LiveComponent\\LiveComponentHydrator",
                        "id": "ux.live_component.component_hydrator"
                    }
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": {
                        "key": "Symfony\\UX\\LiveComponent\\Util\\LiveControllerAttributesCreator",
                        "id": "ux.live_component.live_controller_attributes_creator"
                    }
                }
            ],
            "usages": [
                ".service_locator.Pua8nx."
            ]
        },
        "ux.live_component.component_hydrator": {
            "class": "Symfony\\UX\\LiveComponent\\LiveComponentHydrator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                [],
                {
                    "type": "service",
                    "id": "property_accessor"
                },
                {
                    "type": "service",
                    "id": "ux.live_component.metadata_factory"
                },
                {
                    "type": "service",
                    "id": "debug.serializer"
                },
                "%env(APP_SECRET)%",
                {
                    "type": "service",
                    "id": "twig"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "ux.live_component.live_url_subscriber",
                "ux.live_component.twig.component_runtime",
                "ux.live_component.live_controller_attributes_creator",
                "ux.live_component.query_string_props_extractor",
                ".service_locator.KeMDz.J",
                ".service_locator.xQNzhD7"
            ]
        },
        "ux.live_component.defer_live_component_subscriber": {
            "class": "Symfony\\UX\\LiveComponent\\EventListener\\DeferLiveComponentSubscriber",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Handles the \"defer\" key, which causes the component to be rendered asynchronously.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "ux.live_component.deterministic_id_calculator": {
            "class": "Symfony\\UX\\LiveComponent\\Twig\\DeterministicTwigIdCalculator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "ux.live_component.reset_deterministic_id_subscriber",
                "ux.live_component.live_controller_attributes_creator",
                ".service_locator.Pua8nx."
            ]
        },
        "ux.live_component.doctrine_entity_hydration_extension": {
            "class": "Symfony\\UX\\LiveComponent\\Hydration\\DoctrineEntityHydrationExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Handles hydration of Doctrine entities.",
            "arguments": [
                [
                    {
                        "type": "service",
                        "id": "doctrine"
                    }
                ]
            ],
            "file": null,
            "tags": [
                {
                    "name": "live_component.hydration_extension",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "ux.live_component.event_listener.data_model_props_subscriber": {
            "class": "Symfony\\UX\\LiveComponent\\EventListener\\DataModelPropsSubscriber",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Parses the \"data-model\" key, which triggers extra props to be passed in.",
            "arguments": [
                {
                    "type": "service",
                    "id": "ux.twig_component.live_component_stack"
                },
                {
                    "type": "service",
                    "id": "property_accessor"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "ux.live_component.event_subscriber": {
            "class": "Symfony\\UX\\LiveComponent\\EventListener\\LiveComponentSubscriber",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.KeMDz.J.ux.live_component.event_subscriber"
                },
                false
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.service_subscriber",
                    "parameters": {
                        "key": "Symfony\\UX\\TwigComponent\\ComponentFactory",
                        "id": "ux.twig_component.component_factory"
                    }
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": {
                        "key": "Symfony\\UX\\TwigComponent\\ComponentRenderer",
                        "id": "ux.twig_component.component_renderer"
                    }
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": {
                        "key": "Symfony\\UX\\LiveComponent\\LiveComponentHydrator",
                        "id": "ux.live_component.component_hydrator"
                    }
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": {
                        "key": "Symfony\\UX\\LiveComponent\\Metadata\\LiveComponentMetadataFactory",
                        "id": "ux.live_component.metadata_factory"
                    }
                },
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "ux.live_component.fingerprint_calculator": {
            "class": "Symfony\\UX\\LiveComponent\\Util\\FingerprintCalculator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Calculates a fingerprint that is unique to the original input props passed into the component and that also set props that \"accept updates from parent\".",
            "arguments": [
                "%env(APP_SECRET)%"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "ux.live_component.child_component_partial_renderer",
                "ux.live_component.live_controller_attributes_creator"
            ]
        },
        "ux.live_component.intercept_child_component_render_subscriber": {
            "class": "Symfony\\UX\\LiveComponent\\EventListener\\InterceptChildComponentRenderSubscriber",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Responsible for rendering children as empty elements during a re-render.",
            "arguments": [
                {
                    "type": "service",
                    "id": "ux.twig_component.live_component_stack"
                },
                {
                    "type": "service",
                    "id": ".service_locator.Pua8nx..ux.live_component.intercept_child_component_render_subscriber"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.service_subscriber",
                    "parameters": {
                        "key": "Symfony\\UX\\LiveComponent\\Twig\\DeterministicTwigIdCalculator",
                        "id": "ux.live_component.deterministic_id_calculator"
                    }
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": {
                        "key": "Symfony\\UX\\LiveComponent\\Util\\ChildComponentPartialRenderer",
                        "id": "ux.live_component.child_component_partial_renderer"
                    }
                },
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "ux.live_component.live_controller_attributes_creator": {
            "class": "Symfony\\UX\\LiveComponent\\Util\\LiveControllerAttributesCreator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "ux.live_component.metadata_factory"
                },
                {
                    "type": "service",
                    "id": "ux.live_component.component_hydrator"
                },
                {
                    "type": "service",
                    "id": "ux.live_component.attribute_helper_factory"
                },
                {
                    "type": "service",
                    "id": "ux.live_component.deterministic_id_calculator"
                },
                {
                    "type": "service",
                    "id": "ux.live_component.fingerprint_calculator"
                },
                {
                    "type": "service",
                    "id": "router.default"
                },
                {
                    "type": "service",
                    "id": "ux.live_component.live_responder"
                },
                {
                    "type": "service",
                    "id": "ux.live_component.twig.template_mapper"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                ".service_locator.xQNzhD7",
                ".service_locator.M6Pf5l9"
            ]
        },
        "ux.live_component.live_responder": {
            "class": "Symfony\\UX\\LiveComponent\\LiveResponder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\UX\\LiveComponent\\LiveResponder",
                "ux.live_component.live_controller_attributes_creator"
            ]
        },
        "ux.live_component.live_url_subscriber": {
            "class": "Symfony\\UX\\LiveComponent\\EventListener\\LiveUrlSubscriber",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "ux.live_component.metadata_factory"
                },
                {
                    "type": "service",
                    "id": "ux.live_component.component_hydrator"
                },
                {
                    "type": "service",
                    "id": "router.default"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "ux.live_component.metadata_factory": {
            "class": "Symfony\\UX\\LiveComponent\\Metadata\\LiveComponentMetadataFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "ux.twig_component.component_factory"
                },
                {
                    "type": "service",
                    "id": "property_info"
                },
                {
                    "type": "service",
                    "id": "type_info.resolver"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "ux.live_component.component_hydrator",
                "ux.live_component.live_url_subscriber",
                "ux.live_component.twig.component_runtime",
                "ux.live_component.live_controller_attributes_creator",
                "ux.live_component.query_string_initializer_subscriber",
                ".service_locator.KeMDz.J",
                ".service_locator.xQNzhD7"
            ]
        },
        "ux.live_component.query_string_initializer_subscriber": {
            "class": "Symfony\\UX\\LiveComponent\\EventListener\\RequestInitializeSubscriber",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "request_stack"
                },
                {
                    "type": "service",
                    "id": "ux.live_component.metadata_factory"
                },
                {
                    "type": "service",
                    "id": "ux.live_component.query_string_props_extractor"
                },
                {
                    "type": "service",
                    "id": "property_accessor"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "ux.live_component.query_string_props_extractor": {
            "class": "Symfony\\UX\\LiveComponent\\Util\\RequestPropsExtractor",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "ux.live_component.component_hydrator"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "ux.live_component.query_string_initializer_subscriber"
            ]
        },
        "ux.live_component.reset_deterministic_id_subscriber": {
            "class": "Symfony\\UX\\LiveComponent\\EventListener\\ResetDeterministicIdSubscriber",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Resets the \"deterministic id calculator\" after each full \"parent\" component has finished rendering.",
            "arguments": [
                {
                    "type": "service",
                    "id": "ux.live_component.deterministic_id_calculator"
                },
                {
                    "type": "service",
                    "id": "ux.twig_component.component_stack"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "ux.live_component.twig.cache_warmer": {
            "class": "Symfony\\UX\\LiveComponent\\Twig\\TemplateCacheWarmer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "twig.template_iterator"
                },
                "live_components_twig_templates.map",
                "%container.build_hash%"
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.cache_warmer",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "ux.live_component.twig.component_extension": {
            "class": "Symfony\\UX\\LiveComponent\\Twig\\LiveComponentExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "ux.live_component.twig.component_runtime": {
            "class": "Symfony\\UX\\LiveComponent\\Twig\\LiveComponentRuntime",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "ux.live_component.component_hydrator"
                },
                {
                    "type": "service",
                    "id": "ux.twig_component.component_factory"
                },
                {
                    "type": "service",
                    "id": "router.default"
                },
                {
                    "type": "service",
                    "id": "ux.live_component.metadata_factory"
                },
                {
                    "type": "service",
                    "id": "stimulus.helper"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "twig.runtime",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.JnFobRQ"
            ]
        },
        "ux.live_component.twig.template_mapper": {
            "class": "Symfony\\UX\\LiveComponent\\Twig\\TemplateMap",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/live_components_twig_templates.map"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "ux.live_component.live_controller_attributes_creator",
                "ux.live_component.add_attributes_subscriber"
            ]
        },
        "ux.twig_component.cache_warmer": {
            "class": "Symfony\\UX\\TwigComponent\\CacheWarmer\\TwigComponentCacheWarmer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Warm the TwigComponent metadata caches.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.7vU95QS.ux.twig_component.cache_warmer"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.cache_warmer",
                    "parameters": []
                },
                {
                    "name": "container.service_subscriber",
                    "parameters": {
                        "id": "ux.twig_component.component_properties"
                    }
                }
            ],
            "usages": []
        },
        "ux.twig_component.command.debug": {
            "class": "Symfony\\UX\\TwigComponent\\Command\\TwigComponentDebugCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "%twig.default_path%",
                {
                    "type": "service",
                    "id": "ux.twig_component.component_factory"
                },
                {
                    "type": "service",
                    "id": "twig"
                },
                {
                    "App\\Twig\\Components\\CartCounter": "CartCounter"
                },
                "components\/"
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                "console.command.stimulus_component_debug",
                ".ux.twig_component.command.debug.lazy"
            ]
        },
        "ux.twig_component.component_factory": {
            "class": "Symfony\\UX\\TwigComponent\\ComponentFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "ux.twig_component.component_template_finder"
                },
                {
                    "type": "service",
                    "id": ".service_locator.1va4iYR"
                },
                {
                    "type": "service",
                    "id": "property_accessor"
                },
                {
                    "type": "service",
                    "id": "debug.event_dispatcher"
                },
                {
                    "CartCounter": {
                        "key": "CartCounter",
                        "expose_public_props": true,
                        "attributes_var": "attributes",
                        "service_id": "App\\Twig\\Components\\CartCounter",
                        "class": "App\\Twig\\Components\\CartCounter",
                        "template": "components\/CartCounter.html.twig",
                        "pre_mount": [],
                        "mount": [
                            "mount"
                        ],
                        "post_mount": []
                    }
                },
                {
                    "App\\Twig\\Components\\CartCounter": "CartCounter"
                },
                {
                    "type": "service",
                    "id": "twig"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                "ux.twig_component.component_renderer",
                "ux.twig_component.command.debug",
                "ux.live_component.twig.component_runtime",
                "ux.live_component.metadata_factory",
                ".service_locator.KeMDz.J",
                ".service_locator.xQNzhD7"
            ]
        },
        "ux.twig_component.component_logger_listener": {
            "class": "Symfony\\UX\\TwigComponent\\EventListener\\TwigComponentLoggerListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher",
                "ux.twig_component.data_collector"
            ]
        },
        "ux.twig_component.component_properties": {
            "class": "Symfony\\UX\\TwigComponent\\ComponentProperties",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "property_accessor"
                },
                {
                    "App\\Twig\\Components\\CartCounter": null
                },
                {
                    "type": "service",
                    "id": "cache.ux.twig_component"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "ux.twig_component.component_renderer",
                ".service_locator.7vU95QS"
            ]
        },
        "ux.twig_component.component_renderer": {
            "class": "Symfony\\UX\\TwigComponent\\ComponentRenderer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "twig"
                },
                {
                    "type": "service",
                    "id": "debug.event_dispatcher"
                },
                {
                    "type": "service",
                    "id": "ux.twig_component.component_factory"
                },
                {
                    "type": "service",
                    "id": "ux.twig_component.component_properties"
                },
                {
                    "type": "service",
                    "id": "ux.twig_component.component_stack"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "Symfony\\UX\\TwigComponent\\ComponentRendererInterface",
                "services_resetter",
                "ux.twig_component.twig.component_runtime",
                ".service_locator.KeMDz.J"
            ]
        },
        "ux.twig_component.component_stack": {
            "class": "Symfony\\UX\\TwigComponent\\ComponentStack",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "ux.twig_component.component_renderer",
                "ux.twig_component.live_component_stack",
                "ux.live_component.reset_deterministic_id_subscriber",
                "ux.live_component.add_attributes_subscriber"
            ]
        },
        "ux.twig_component.component_template_finder": {
            "class": "Symfony\\UX\\TwigComponent\\ComponentTemplateFinder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "twig.loader.native_filesystem"
                },
                "components\/"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "ux.twig_component.component_factory"
            ]
        },
        "ux.twig_component.data_collector": {
            "class": "Symfony\\UX\\TwigComponent\\DataCollector\\TwigComponentDataCollector",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "ux.twig_component.component_logger_listener"
                },
                {
                    "type": "service",
                    "id": "twig"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "data_collector",
                    "parameters": {
                        "template": "@TwigComponent\/Collector\/twig_component.html.twig",
                        "id": "twig_component",
                        "priority": 256
                    }
                }
            ],
            "usages": [
                "profiler"
            ]
        },
        "ux.twig_component.live_component_stack": {
            "class": "Symfony\\UX\\LiveComponent\\Util\\LiveComponentStack",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "This class decorates the TwigComponent\\ComponentStack adding specific Live component functionalities.",
            "arguments": [
                {
                    "type": "service",
                    "id": "ux.twig_component.component_stack"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "ux.live_component.event_listener.data_model_props_subscriber",
                "ux.live_component.intercept_child_component_render_subscriber"
            ]
        },
        "ux.twig_component.twig.component_extension": {
            "class": "Symfony\\UX\\TwigComponent\\Twig\\ComponentExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        },
        "ux.twig_component.twig.component_runtime": {
            "class": "Symfony\\UX\\TwigComponent\\Twig\\ComponentRuntime",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "ux.twig_component.component_renderer"
                },
                {
                    "type": "service",
                    "id": ".service_locator.GIuJv7e"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "twig.runtime",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.JnFobRQ"
            ]
        },
        "ux.twig_component.twig.environment_configurator": {
            "class": "Symfony\\UX\\TwigComponent\\Twig\\TwigEnvironmentConfigurator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "ux.twig_component.twig.environment_configurator.inner"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.decorator",
                    "parameters": {
                        "id": "twig.configurator.environment",
                        "inner": "ux.twig_component.twig.environment_configurator.inner"
                    }
                }
            ],
            "usages": [
                "twig.configurator.environment",
                "twig"
            ]
        },
        "ux.twig_component.twig.environment_configurator.inner": {
            "class": "Symfony\\Bundle\\TwigBundle\\DependencyInjection\\Configurator\\EnvironmentConfigurator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Twig environment configurator.",
            "arguments": [
                "F j, Y H:i",
                "%d days",
                null,
                0,
                ".",
                ","
            ],
            "file": null,
            "tags": [],
            "usages": [
                "ux.twig_component.twig.environment_configurator"
            ]
        },
        "ux.twig_component.twig.lexer": {
            "class": "Symfony\\UX\\TwigComponent\\Twig\\ComponentLexer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": []
        },
        "validate_request_listener": {
            "class": "Symfony\\Component\\HttpKernel\\EventListener\\ValidateRequestListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Validates Requests.",
            "arguments": [],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "validator.builder": {
            "class": "Symfony\\Component\\Validator\\ValidatorBuilder",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "factory_class": "Symfony\\Component\\Validator\\Validation",
            "factory_method": "createValidatorBuilder",
            "calls": [
                "setConstraintValidatorFactory",
                "setGroupProviderLocator",
                "setTranslationDomain",
                "enableAttributeMapping",
                "addMethodMapping",
                "addObjectInitializers",
                "addLoader",
                "addLoader"
            ],
            "tags": [],
            "usages": [
                "validator.mapping.cache_warmer",
                "debug.validator.inner"
            ]
        },
        "validator.email": {
            "class": "Symfony\\Component\\Validator\\Constraints\\EmailValidator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                "html5"
            ],
            "file": null,
            "tags": [
                {
                    "name": "validator.constraint_validator",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.kCsWobb"
            ]
        },
        "validator.expression": {
            "class": "Symfony\\Component\\Validator\\Constraints\\ExpressionValidator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "validator.expression_language"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "validator.constraint_validator",
                    "parameters": {
                        "alias": "validator.expression"
                    }
                }
            ],
            "usages": [
                ".service_locator.kCsWobb"
            ]
        },
        "validator.expression_language": {
            "class": "Symfony\\Component\\ExpressionLanguage\\ExpressionLanguage",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Allows to compile and evaluate expressions written in your own DSL.",
            "arguments": [
                {
                    "type": "service",
                    "id": "cache.validator_expression_language"
                }
            ],
            "file": null,
            "calls": [
                "registerProvider"
            ],
            "tags": [],
            "usages": [
                "validator.expression",
                "validator.when"
            ]
        },
        "validator.expression_language_provider": {
            "class": "Symfony\\Component\\Validator\\Constraints\\ExpressionLanguageProvider",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "validator.expression_language"
            ]
        },
        "validator.mapping.cache.adapter": {
            "class": "Symfony\\Component\\Cache\\Adapter\\PhpArrayAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Caches items at warm up time using a PHP array that is stored in shared memory by OPCache since PHP 7.0. Warmed up items are read-only and run-time discovered items are cached using a fallback adapter.",
            "arguments": [
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/validation.php",
                {
                    "type": "service",
                    "id": "cache.validator"
                }
            ],
            "file": null,
            "factory_class": null,
            "factory_method": "create",
            "tags": [],
            "usages": []
        },
        "validator.mapping.cache_warmer": {
            "class": "Symfony\\Bundle\\FrameworkBundle\\CacheWarmer\\ValidatorCacheWarmer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Warms up XML and YAML validator metadata.",
            "arguments": [
                {
                    "type": "service",
                    "id": "validator.builder"
                },
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/validation.php"
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.cache_warmer",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "validator.no_suspicious_characters": {
            "class": "Symfony\\Component\\Validator\\Constraints\\NoSuspiciousCharactersValidator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                []
            ],
            "file": null,
            "tags": [
                {
                    "name": "validator.constraint_validator",
                    "parameters": {
                        "alias": "Symfony\\Component\\Validator\\Constraints\\NoSuspiciousCharactersValidator"
                    }
                }
            ],
            "usages": [
                ".service_locator.kCsWobb"
            ]
        },
        "validator.not_compromised_password": {
            "class": "Symfony\\Component\\Validator\\Constraints\\NotCompromisedPasswordValidator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Checks if a password has been leaked in a data breach using haveibeenpwned.com's API. Use a k-anonymity model to protect the password being searched for.",
            "arguments": [
                null,
                "UTF-8",
                true,
                null
            ],
            "file": null,
            "tags": [
                {
                    "name": "validator.constraint_validator",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.kCsWobb"
            ]
        },
        "validator.property_info_loader": {
            "class": "Symfony\\Component\\Validator\\Mapping\\Loader\\PropertyInfoLoader",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Guesses and loads the appropriate constraints using PropertyInfo.",
            "arguments": [
                {
                    "type": "service",
                    "id": "property_info"
                },
                {
                    "type": "service",
                    "id": "property_info"
                },
                {
                    "type": "service",
                    "id": "property_info"
                },
                null
            ],
            "file": null,
            "tags": [
                {
                    "name": "validator.auto_mapper",
                    "parameters": []
                }
            ],
            "usages": [
                "validator.builder"
            ]
        },
        "validator.validator_factory": {
            "class": "Symfony\\Component\\Validator\\ContainerConstraintValidatorFactory",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Uses a service container to create constraint validators.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.kCsWobb"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "validator.builder"
            ]
        },
        "validator.when": {
            "class": "Symfony\\Component\\Validator\\Constraints\\WhenValidator",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "validator.expression_language"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "validator.constraint_validator",
                    "parameters": []
                }
            ],
            "usages": [
                ".service_locator.kCsWobb"
            ]
        },
        "var_dumper.cloner": {
            "class": "Symfony\\Component\\VarDumper\\Cloner\\VarCloner",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [],
            "file": null,
            "calls": [
                "setMaxItems",
                "setMinDepth",
                "setMaxString",
                "addCasters"
            ],
            "tags": [],
            "usages": [
                "twig.extension.dump",
                "debug.dump_listener"
            ]
        },
        "var_dumper.command.server_dump": {
            "class": "Symfony\\Component\\VarDumper\\Command\\ServerDumpCommand",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Starts a dump server to collect and output dumps on a single place with multiple formats support.",
            "arguments": [
                {
                    "type": "service",
                    "id": "var_dumper.dump_server"
                },
                {
                    "cli": {
                        "type": "service",
                        "id": ".34_CliDescriptor~4VeSJ51"
                    },
                    "html": {
                        "type": "service",
                        "id": ".35_HtmlDescriptor~4VeSJ51"
                    }
                }
            ],
            "file": null,
            "calls": [
                "setName",
                "setDescription"
            ],
            "tags": [
                {
                    "name": "console.command",
                    "parameters": []
                },
                {
                    "name": "container.no_preload",
                    "parameters": []
                }
            ],
            "usages": [
                ".var_dumper.command.server_dump.lazy"
            ]
        },
        "var_dumper.contextualized_cli_dumper": {
            "class": "Symfony\\Component\\VarDumper\\Dumper\\ContextualizedDumper",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "var_dumper.contextualized_cli_dumper.inner"
                },
                {
                    "source": {
                        "type": "service",
                        "id": ".30_SourceContextProvider~4VeSJ51"
                    }
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "container.decorator",
                    "parameters": {
                        "id": "var_dumper.cli_dumper",
                        "inner": "var_dumper.contextualized_cli_dumper.inner"
                    }
                }
            ],
            "usages": [
                "var_dumper.cli_dumper",
                "debug.dump_listener"
            ]
        },
        "var_dumper.contextualized_cli_dumper.inner": {
            "class": "Symfony\\Component\\VarDumper\\Dumper\\CliDumper",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "CliDumper dumps variables for command line output.",
            "arguments": [
                null,
                "UTF-8",
                0
            ],
            "file": null,
            "calls": [
                "setDisplayOptions"
            ],
            "tags": [],
            "usages": [
                ".34_CliDescriptor~4VeSJ51",
                "var_dumper.contextualized_cli_dumper"
            ]
        },
        "var_dumper.dump_server": {
            "class": "Symfony\\Component\\VarDumper\\Server\\DumpServer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "A server collecting Data clones sent by a ServerDumper.",
            "arguments": [
                "tcp:\/\/%env(VAR_DUMPER_SERVER)%",
                {
                    "type": "service",
                    "id": "monolog.logger.debug"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "monolog.logger",
                    "parameters": {
                        "channel": "debug"
                    }
                }
            ],
            "usages": [
                "var_dumper.command.server_dump"
            ]
        },
        "var_dumper.html_dumper": {
            "class": "Symfony\\Component\\VarDumper\\Dumper\\HtmlDumper",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "HtmlDumper dumps variables as HTML.",
            "arguments": [
                null,
                "UTF-8",
                0
            ],
            "file": null,
            "calls": [
                "setDisplayOptions"
            ],
            "tags": [],
            "usages": [
                ".35_HtmlDescriptor~4VeSJ51",
                "twig.extension.dump"
            ]
        },
        "var_dumper.server_connection": {
            "class": "Symfony\\Component\\VarDumper\\Server\\Connection",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Forwards serialized Data clones to a server.",
            "arguments": [
                "tcp:\/\/%env(VAR_DUMPER_SERVER)%",
                {
                    "source": {
                        "type": "service",
                        "id": ".31_SourceContextProvider~4VeSJ51"
                    },
                    "request": {
                        "type": "service",
                        "id": ".32_RequestContextProvider~4VeSJ51"
                    },
                    "cli": {
                        "type": "service",
                        "id": ".33_CliContextProvider~4VeSJ51"
                    }
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "data_collector.dump",
                "debug.dump_listener"
            ]
        },
        "web_link.add_link_header_listener": {
            "class": "Symfony\\Component\\WebLink\\EventListener\\AddLinkHeaderListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Adds the Link HTTP header to the response.",
            "arguments": [
                {
                    "type": "service",
                    "id": "web_link.http_header_serializer"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "web_link.http_header_serializer": {
            "class": "Symfony\\Component\\WebLink\\HttpHeaderSerializer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Serializes a list of Link instances to an HTTP Link header.",
            "arguments": [],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\Component\\WebLink\\HttpHeaderSerializer",
                "web_link.add_link_header_listener",
                ".service_locator.ZyP9f7K"
            ]
        },
        "web_profiler.controller.exception_panel": {
            "class": "Symfony\\Bundle\\WebProfilerBundle\\Controller\\ExceptionPanelController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Renders the exception panel.",
            "arguments": [
                {
                    "type": "service",
                    "id": "error_handler.error_renderer.html"
                },
                {
                    "type": "service",
                    "id": "profiler"
                }
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "web_profiler.controller.profiler": {
            "class": "Symfony\\Bundle\\WebProfilerBundle\\Controller\\ProfilerController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "router.default"
                },
                {
                    "type": "service",
                    "id": "profiler"
                },
                {
                    "type": "service",
                    "id": "twig"
                },
                "%data_collector.templates%",
                {
                    "type": "service",
                    "id": "web_profiler.csp.handler"
                },
                "J:\\laragon\\www\\new3"
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "web_profiler.controller.router": {
            "class": "Symfony\\Bundle\\WebProfilerBundle\\Controller\\RouterController",
            "public": true,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "profiler"
                },
                {
                    "type": "service",
                    "id": "twig"
                },
                {
                    "type": "service",
                    "id": "router.default"
                },
                null,
                []
            ],
            "file": null,
            "tags": [],
            "usages": []
        },
        "web_profiler.csp.handler": {
            "class": "Symfony\\Bundle\\WebProfilerBundle\\Csp\\ContentSecurityPolicyHandler",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Handles Content-Security-Policy HTTP header for the WebProfiler Bundle.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".23_NonceGenerator~4VeSJ51"
                }
            ],
            "file": null,
            "tags": [],
            "usages": [
                "web_profiler.controller.profiler",
                "web_profiler.debug_toolbar"
            ]
        },
        "web_profiler.debug_toolbar": {
            "class": "Symfony\\Bundle\\WebProfilerBundle\\EventListener\\WebDebugToolbarListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "WebDebugToolbarListener injects the Web Debug Toolbar.",
            "arguments": [
                {
                    "type": "service",
                    "id": "twig"
                },
                false,
                2,
                {
                    "type": "service",
                    "id": "router.default"
                },
                "^\/((index|app(_[\\w]+)?)\\.php\/)?_wdt",
                {
                    "type": "service",
                    "id": "web_profiler.csp.handler"
                },
                {
                    "type": "service",
                    "id": "data_collector.dump"
                },
                false
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_subscriber",
                    "parameters": []
                },
                {
                    "name": "container.hot_path",
                    "parameters": []
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "webpack_encore.cache": {
            "class": "Symfony\\Component\\Cache\\Adapter\\PhpArrayAdapter",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Caches items at warm up time using a PHP array that is stored in shared memory by OPCache since PHP 7.0. Warmed up items are read-only and run-time discovered items are cached using a fallback adapter.",
            "arguments": [
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/webpack_encore.cache.php",
                {
                    "type": "service",
                    "id": "cache.webpack_encore"
                }
            ],
            "file": null,
            "factory_class": null,
            "factory_method": "create",
            "tags": [],
            "usages": []
        },
        "webpack_encore.entrypoint_lookup.cache_warmer": {
            "class": "Symfony\\WebpackEncoreBundle\\CacheWarmer\\EntrypointCacheWarmer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "_default": "J:\\laragon\\www\\new3\/public\/build\/entrypoints.json"
                },
                null,
                "J:\/laragon\/www\/new3\/var\/cache\/dev\/webpack_encore.cache.php"
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.cache_warmer",
                    "parameters": []
                }
            ],
            "usages": []
        },
        "webpack_encore.entrypoint_lookup[_default]": {
            "class": "Symfony\\WebpackEncoreBundle\\Asset\\EntrypointLookup",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Returns the CSS or JavaScript files needed for a Webpack entry.",
            "arguments": [
                "J:\\laragon\\www\\new3\/public\/build\/entrypoints.json",
                null,
                "_default",
                true,
                null
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "Symfony\\WebpackEncoreBundle\\Asset\\EntrypointLookupInterface",
                "services_resetter",
                "console.command.error_dumper",
                ".service_locator.fKIsVqY"
            ]
        },
        "webpack_encore.entrypoint_lookup_collection": {
            "class": "Symfony\\WebpackEncoreBundle\\Asset\\EntrypointLookupCollection",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "description": "Aggregate the different entry points configured in the container.",
            "arguments": [
                {
                    "type": "service",
                    "id": ".service_locator.fKIsVqY"
                },
                "_default"
            ],
            "file": null,
            "tags": [],
            "usages": [
                "Symfony\\WebpackEncoreBundle\\Asset\\EntrypointLookupCollectionInterface",
                ".1_ServiceLocator~jVYYr.8",
                "webpack_encore.tag_renderer",
                "webpack_encore.exception_listener",
                "Symfony\\WebpackEncoreBundle\\EventListener\\ResetAssetsEventListener"
            ]
        },
        "webpack_encore.exception_listener": {
            "class": "Symfony\\WebpackEncoreBundle\\EventListener\\ExceptionListener",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "webpack_encore.entrypoint_lookup_collection"
                },
                [
                    "_default"
                ]
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.event_listener",
                    "parameters": {
                        "event": "kernel.exception"
                    }
                }
            ],
            "usages": [
                "debug.event_dispatcher"
            ]
        },
        "webpack_encore.tag_renderer": {
            "class": "Symfony\\WebpackEncoreBundle\\Asset\\TagRenderer",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": "webpack_encore.entrypoint_lookup_collection"
                },
                {
                    "type": "service",
                    "id": "assets.packages"
                },
                [],
                {
                    "defer": true
                },
                [],
                {
                    "type": "service",
                    "id": "debug.event_dispatcher"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "kernel.reset",
                    "parameters": {
                        "method": "reset"
                    }
                }
            ],
            "usages": [
                "services_resetter",
                ".1_ServiceLocator~jVYYr.8"
            ]
        },
        "webpack_encore.twig_entry_files_extension": {
            "class": "Symfony\\WebpackEncoreBundle\\Twig\\EntryFilesTwigExtension",
            "public": false,
            "synthetic": false,
            "lazy": false,
            "shared": true,
            "abstract": false,
            "autowire": false,
            "autoconfigure": false,
            "deprecated": false,
            "arguments": [
                {
                    "type": "service",
                    "id": ".1_ServiceLocator~jVYYr.8"
                }
            ],
            "file": null,
            "tags": [
                {
                    "name": "twig.extension",
                    "parameters": []
                }
            ],
            "usages": [
                "twig"
            ]
        }
    },
    "aliases": {
        "ApiPlatform\\Doctrine\\Common\\State\\PersistProcessor": {
            "service": "api_platform.doctrine.orm.state.persist_processor",
            "public": false
        },
        "ApiPlatform\\Doctrine\\Common\\State\\RemoveProcessor": {
            "service": "api_platform.doctrine.orm.state.remove_processor",
            "public": false
        },
        "ApiPlatform\\Doctrine\\Orm\\Extension\\EagerLoadingExtension": {
            "service": "api_platform.doctrine.orm.query_extension.eager_loading",
            "public": false
        },
        "ApiPlatform\\Doctrine\\Orm\\Extension\\FilterEagerLoadingExtension": {
            "service": "api_platform.doctrine.orm.query_extension.filter_eager_loading",
            "public": false
        },
        "ApiPlatform\\Doctrine\\Orm\\Extension\\FilterExtension": {
            "service": "api_platform.doctrine.orm.query_extension.filter",
            "public": false
        },
        "ApiPlatform\\Doctrine\\Orm\\Extension\\OrderExtension": {
            "service": "api_platform.doctrine.orm.query_extension.order",
            "public": false
        },
        "ApiPlatform\\Doctrine\\Orm\\Extension\\PaginationExtension": {
            "service": "api_platform.doctrine.orm.query_extension.pagination",
            "public": false
        },
        "ApiPlatform\\Doctrine\\Orm\\Extension\\ParameterExtension": {
            "service": "api_platform.doctrine.orm.extension.parameter_extension",
            "public": false
        },
        "ApiPlatform\\Doctrine\\Orm\\Filter\\BackedEnumFilter": {
            "service": "api_platform.doctrine.orm.backed_enum_filter",
            "public": false
        },
        "ApiPlatform\\Doctrine\\Orm\\Filter\\BooleanFilter": {
            "service": "api_platform.doctrine.orm.boolean_filter",
            "public": false
        },
        "ApiPlatform\\Doctrine\\Orm\\Filter\\DateFilter": {
            "service": "api_platform.doctrine.orm.date_filter",
            "public": false
        },
        "ApiPlatform\\Doctrine\\Orm\\Filter\\ExistsFilter": {
            "service": "api_platform.doctrine.orm.exists_filter",
            "public": false
        },
        "ApiPlatform\\Doctrine\\Orm\\Filter\\NumericFilter": {
            "service": "api_platform.doctrine.orm.numeric_filter",
            "public": false
        },
        "ApiPlatform\\Doctrine\\Orm\\Filter\\OrderFilter": {
            "service": "api_platform.doctrine.orm.order_filter",
            "public": false
        },
        "ApiPlatform\\Doctrine\\Orm\\Filter\\RangeFilter": {
            "service": "api_platform.doctrine.orm.range_filter",
            "public": false
        },
        "ApiPlatform\\Doctrine\\Orm\\Filter\\SearchFilter": {
            "service": "api_platform.doctrine.orm.search_filter",
            "public": false
        },
        "ApiPlatform\\Doctrine\\Orm\\State\\CollectionProvider": {
            "service": "api_platform.doctrine.orm.state.collection_provider",
            "public": false
        },
        "ApiPlatform\\Doctrine\\Orm\\State\\ItemProvider": {
            "service": "api_platform.doctrine.orm.state.item_provider",
            "public": false
        },
        "ApiPlatform\\JsonSchema\\SchemaFactoryInterface": {
            "service": "api_platform.json_schema.backward_compatible_schema_factory",
            "public": false
        },
        "ApiPlatform\\Metadata\\IdentifiersExtractorInterface": {
            "service": "api_platform.api.identifiers_extractor",
            "public": false
        },
        "ApiPlatform\\Metadata\\IriConverterInterface": {
            "service": "api_platform.symfony.iri_converter",
            "public": false
        },
        "ApiPlatform\\Metadata\\Operation\\Factory\\OperationMetadataFactoryInterface": {
            "service": "api_platform.metadata.operation.metadata_factory",
            "public": false
        },
        "ApiPlatform\\Metadata\\Property\\Factory\\PropertyMetadataFactoryInterface": {
            "service": "api_platform.metadata.property.metadata_factory.cached",
            "public": false
        },
        "ApiPlatform\\Metadata\\Property\\Factory\\PropertyNameCollectionFactoryInterface": {
            "service": "api_platform.metadata.property.name_collection_factory.cached",
            "public": false
        },
        "ApiPlatform\\Metadata\\ResourceAccessCheckerInterface": {
            "service": "api_platform.security.resource_access_checker",
            "public": false
        },
        "ApiPlatform\\Metadata\\ResourceClassResolverInterface": {
            "service": "api_platform.resource_class_resolver",
            "public": false
        },
        "ApiPlatform\\Metadata\\Resource\\Factory\\ResourceMetadataCollectionFactoryInterface": {
            "service": "api_platform.metadata.resource.metadata_collection_factory.cached",
            "public": false
        },
        "ApiPlatform\\Metadata\\Resource\\Factory\\ResourceNameCollectionFactoryInterface": {
            "service": "api_platform.metadata.resource.name_collection_factory.cached",
            "public": false
        },
        "ApiPlatform\\Metadata\\UrlGeneratorInterface": {
            "service": "api_platform.router",
            "public": false
        },
        "ApiPlatform\\OpenApi\\Factory\\OpenApiFactoryInterface": {
            "service": "api_platform.openapi.factory",
            "public": false
        },
        "ApiPlatform\\OpenApi\\Options": {
            "service": "api_platform.openapi.options",
            "public": false
        },
        "ApiPlatform\\OpenApi\\Serializer\\OpenApiNormalizer": {
            "service": "api_platform.openapi.normalizer.legacy",
            "public": false
        },
        "ApiPlatform\\Serializer\\Filter\\GroupFilter": {
            "service": "api_platform.serializer.group_filter",
            "public": false
        },
        "ApiPlatform\\Serializer\\Filter\\PropertyFilter": {
            "service": "api_platform.serializer.property_filter",
            "public": false
        },
        "ApiPlatform\\State\\CreateProvider": {
            "service": "api_platform.state_provider.create",
            "public": false
        },
        "ApiPlatform\\State\\ObjectProvider": {
            "service": "api_platform.state_provider.object",
            "public": false
        },
        "ApiPlatform\\State\\Pagination\\Pagination": {
            "service": "api_platform.pagination",
            "public": false
        },
        "ApiPlatform\\State\\Pagination\\PaginationOptions": {
            "service": "api_platform.pagination_options",
            "public": false
        },
        "ApiPlatform\\State\\SerializerContextBuilderInterface": {
            "service": "api_platform.openapi.serializer_context_builder",
            "public": false
        },
        "ApiPlatform\\Symfony\\Action\\NotExposedAction": {
            "service": "api_platform.action.not_exposed",
            "public": true
        },
        "ApiPlatform\\Symfony\\Action\\NotFoundAction": {
            "service": "api_platform.action.not_found",
            "public": true
        },
        "ApiPlatform\\Validator\\ValidatorInterface": {
            "service": "api_platform.validator",
            "public": false
        },
        "App\\Kernel": {
            "service": "kernel",
            "public": true
        },
        "Doctrine\\Common\\Persistence\\ManagerRegistry": {
            "service": "doctrine",
            "public": false
        },
        "Doctrine\\DBAL\\Connection": {
            "service": "doctrine.dbal.default_connection",
            "public": false
        },
        "Doctrine\\DBAL\\Connection $defaultConnection": {
            "service": "doctrine.dbal.default_connection",
            "public": false
        },
        "Doctrine\\ORM\\EntityManagerInterface": {
            "service": "doctrine.orm.default_entity_manager",
            "public": false
        },
        "Doctrine\\ORM\\EntityManagerInterface $defaultEntityManager": {
            "service": "doctrine.orm.default_entity_manager",
            "public": false
        },
        "Doctrine\\Persistence\\ManagerRegistry": {
            "service": "doctrine",
            "public": false
        },
        "Imagine\\Image\\ImagineInterface": {
            "service": "liip_imagine.gd",
            "public": false
        },
        "Lexik\\Bundle\\JWTAuthenticationBundle\\Encoder\\JWTEncoderInterface": {
            "service": "lexik_jwt_authentication.encoder.lcobucci",
            "public": false
        },
        "Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Http\\Authentication\\AuthenticationFailureHandler": {
            "service": "lexik_jwt_authentication.handler.authentication_failure",
            "public": false
        },
        "Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Http\\Authentication\\AuthenticationSuccessHandler": {
            "service": "lexik_jwt_authentication.handler.authentication_success",
            "public": false
        },
        "Lexik\\Bundle\\JWTAuthenticationBundle\\Services\\JWSProvider\\JWSProviderInterface": {
            "service": "lexik_jwt_authentication.jws_provider.lcobucci",
            "public": false
        },
        "Lexik\\Bundle\\JWTAuthenticationBundle\\Services\\JWTTokenManagerInterface": {
            "service": "lexik_jwt_authentication.jwt_manager",
            "public": false
        },
        "Lexik\\Bundle\\JWTAuthenticationBundle\\TokenExtractor\\TokenExtractorInterface": {
            "service": "lexik_jwt_authentication.extractor.chain_extractor",
            "public": false
        },
        "Liip\\ImagineBundle\\Config\\FilterFactoryCollection": {
            "service": "liip_imagine.config.filter_factory_collection",
            "public": false
        },
        "Liip\\ImagineBundle\\Config\\StackBuilder": {
            "service": "liip_imagine.config.stack_builder",
            "public": false
        },
        "Liip\\ImagineBundle\\Config\\StackCollection": {
            "service": "liip_imagine.config.stack_collection",
            "public": false
        },
        "Liip\\ImagineBundle\\Imagine\\Cache\\CacheManager": {
            "service": "liip_imagine.cache.manager",
            "public": false
        },
        "Liip\\ImagineBundle\\Imagine\\Data\\DataManager": {
            "service": "liip_imagine.data.manager",
            "public": false
        },
        "Liip\\ImagineBundle\\Imagine\\Filter\\FilterManager": {
            "service": "liip_imagine.filter.manager",
            "public": false
        },
        "Psr\\Cache\\CacheItemPoolInterface": {
            "service": "cache.app",
            "public": false
        },
        "Psr\\Clock\\ClockInterface": {
            "service": "clock",
            "public": false
        },
        "Psr\\Container\\ContainerInterface $parameterBag": {
            "service": "parameter_bag",
            "public": false
        },
        "Psr\\EventDispatcher\\EventDispatcherInterface": {
            "service": "debug.event_dispatcher",
            "public": false
        },
        "Psr\\Log\\LoggerInterface": {
            "service": "monolog.logger",
            "public": false
        },
        "Psr\\Log\\LoggerInterface $cacheLogger": {
            "service": "monolog.logger.cache",
            "public": false
        },
        "Psr\\Log\\LoggerInterface $consoleLogger": {
            "service": "monolog.logger.console",
            "public": false
        },
        "Psr\\Log\\LoggerInterface $debugLogger": {
            "service": "monolog.logger.debug",
            "public": false
        },
        "Psr\\Log\\LoggerInterface $deprecationLogger": {
            "service": "monolog.logger.deprecation",
            "public": false
        },
        "Psr\\Log\\LoggerInterface $doctrineLogger": {
            "service": "monolog.logger.doctrine",
            "public": false
        },
        "Psr\\Log\\LoggerInterface $eventLogger": {
            "service": "monolog.logger.event",
            "public": false
        },
        "Psr\\Log\\LoggerInterface $idempotencyLogger": {
            "service": "monolog.logger.idempotency",
            "public": false
        },
        "Psr\\Log\\LoggerInterface $lockLogger": {
            "service": "monolog.logger.lock",
            "public": false
        },
        "Psr\\Log\\LoggerInterface $phpLogger": {
            "service": "monolog.logger.php",
            "public": false
        },
        "Psr\\Log\\LoggerInterface $profilerLogger": {
            "service": "monolog.logger.profiler",
            "public": false
        },
        "Psr\\Log\\LoggerInterface $requestLogger": {
            "service": "monolog.logger.request",
            "public": false
        },
        "Psr\\Log\\LoggerInterface $routerLogger": {
            "service": "monolog.logger.router",
            "public": false
        },
        "Psr\\Log\\LoggerInterface $securityLogger": {
            "service": "monolog.logger.security",
            "public": false
        },
        "SessionHandlerInterface": {
            "service": "session.handler.native",
            "public": false
        },
        "Symfony\\Bundle\\SecurityBundle\\Security": {
            "service": "security.helper",
            "public": false
        },
        "Symfony\\Component\\Asset\\Packages": {
            "service": "assets.packages",
            "public": false
        },
        "Symfony\\Component\\Clock\\ClockInterface": {
            "service": "clock",
            "public": false
        },
        "Symfony\\Component\\DependencyInjection\\ParameterBag\\ContainerBagInterface": {
            "service": "parameter_bag",
            "public": false
        },
        "Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBagInterface": {
            "service": "parameter_bag",
            "public": false
        },
        "Symfony\\Component\\DependencyInjection\\ReverseContainer": {
            "service": "reverse_container",
            "public": false
        },
        "Symfony\\Component\\ErrorHandler\\ErrorRenderer\\FileLinkFormatter": {
            "service": "debug.file_link_formatter",
            "public": false
        },
        "Symfony\\Component\\EventDispatcher\\EventDispatcherInterface": {
            "service": "debug.event_dispatcher",
            "public": false
        },
        "Symfony\\Component\\Filesystem\\Filesystem": {
            "service": "filesystem",
            "public": false
        },
        "Symfony\\Component\\HttpFoundation\\RequestStack": {
            "service": "request_stack",
            "public": false
        },
        "Symfony\\Component\\HttpFoundation\\UriSigner": {
            "service": "uri_signer",
            "public": false
        },
        "Symfony\\Component\\HttpFoundation\\UrlHelper": {
            "service": "url_helper",
            "public": false
        },
        "Symfony\\Component\\HttpKernel\\Config\\FileLocator": {
            "service": "file_locator",
            "public": false
        },
        "Symfony\\Component\\HttpKernel\\DependencyInjection\\ServicesResetterInterface": {
            "service": "services_resetter",
            "public": false
        },
        "Symfony\\Component\\HttpKernel\\Fragment\\FragmentUriGeneratorInterface": {
            "service": "fragment.uri_generator",
            "public": false
        },
        "Symfony\\Component\\HttpKernel\\HttpCache\\StoreInterface": {
            "service": "http_cache.store",
            "public": false
        },
        "Symfony\\Component\\HttpKernel\\HttpKernelInterface": {
            "service": "http_kernel",
            "public": false
        },
        "Symfony\\Component\\HttpKernel\\KernelInterface": {
            "service": "kernel",
            "public": false
        },
        "Symfony\\Component\\Lock\\LockFactory": {
            "service": "lock.default.factory",
            "public": false
        },
        "Symfony\\Component\\Mime\\MimeTypeGuesserInterface": {
            "service": "mime_types",
            "public": false
        },
        "Symfony\\Component\\Mime\\MimeTypesInterface": {
            "service": "mime_types",
            "public": false
        },
        "Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactoryInterface": {
            "service": "security.password_hasher_factory",
            "public": false
        },
        "Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface": {
            "service": "security.user_password_hasher",
            "public": false
        },
        "Symfony\\Component\\PropertyAccess\\PropertyAccessorInterface": {
            "service": "property_accessor",
            "public": false
        },
        "Symfony\\Component\\PropertyInfo\\PropertyAccessExtractorInterface": {
            "service": "property_info",
            "public": false
        },
        "Symfony\\Component\\PropertyInfo\\PropertyDescriptionExtractorInterface": {
            "service": "property_info",
            "public": false
        },
        "Symfony\\Component\\PropertyInfo\\PropertyInfoExtractorInterface": {
            "service": "property_info",
            "public": false
        },
        "Symfony\\Component\\PropertyInfo\\PropertyInitializableExtractorInterface": {
            "service": "property_info",
            "public": false
        },
        "Symfony\\Component\\PropertyInfo\\PropertyListExtractorInterface": {
            "service": "property_info",
            "public": false
        },
        "Symfony\\Component\\PropertyInfo\\PropertyReadInfoExtractorInterface": {
            "service": "property_info.reflection_extractor",
            "public": false
        },
        "Symfony\\Component\\PropertyInfo\\PropertyTypeExtractorInterface": {
            "service": "property_info",
            "public": false
        },
        "Symfony\\Component\\PropertyInfo\\PropertyWriteInfoExtractorInterface": {
            "service": "property_info.reflection_extractor",
            "public": false
        },
        "Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface": {
            "service": "router.default",
            "public": false
        },
        "Symfony\\Component\\Routing\\Matcher\\UrlMatcherInterface": {
            "service": "router.default",
            "public": false
        },
        "Symfony\\Component\\Routing\\RequestContext": {
            "service": "router.request_context",
            "public": false
        },
        "Symfony\\Component\\Routing\\RequestContextAwareInterface": {
            "service": "router.default",
            "public": false
        },
        "Symfony\\Component\\Routing\\RouterInterface": {
            "service": "router.default",
            "public": false
        },
        "Symfony\\Component\\Security\\Core\\Authentication\\Token\\Storage\\TokenStorageInterface": {
            "service": "security.token_storage",
            "public": false
        },
        "Symfony\\Component\\Security\\Core\\Authorization\\AccessDecisionManagerInterface": {
            "service": "debug.security.access.decision_manager",
            "public": false
        },
        "Symfony\\Component\\Security\\Core\\Authorization\\AuthorizationCheckerInterface": {
            "service": "security.authorization_checker",
            "public": false
        },
        "Symfony\\Component\\Security\\Core\\Authorization\\UserAuthorizationCheckerInterface": {
            "service": "security.authorization_checker",
            "public": false
        },
        "Symfony\\Component\\Security\\Core\\Role\\RoleHierarchyInterface": {
            "service": "security.role_hierarchy",
            "public": false
        },
        "Symfony\\Component\\Security\\Core\\User\\UserCheckerInterface": {
            "service": "security.user_checker",
            "public": false
        },
        "Symfony\\Component\\Security\\Core\\User\\UserProviderInterface": {
            "service": "security.user.provider.concrete.app_user_provider",
            "public": false
        },
        "Symfony\\Component\\Security\\Csrf\\CsrfTokenManagerInterface": {
            "service": "security.csrf.token_manager",
            "public": false
        },
        "Symfony\\Component\\Security\\Csrf\\TokenGenerator\\TokenGeneratorInterface": {
            "service": "security.csrf.token_generator",
            "public": false
        },
        "Symfony\\Component\\Security\\Csrf\\TokenStorage\\TokenStorageInterface": {
            "service": "security.csrf.token_storage",
            "public": false
        },
        "Symfony\\Component\\Security\\Http\\Authentication\\AuthenticationUtils": {
            "service": "security.authentication_utils",
            "public": false
        },
        "Symfony\\Component\\Security\\Http\\Authentication\\UserAuthenticatorInterface": {
            "service": "security.user_authenticator",
            "public": false
        },
        "Symfony\\Component\\Security\\Http\\Firewall": {
            "service": "debug.security.firewall",
            "public": false
        },
        "Symfony\\Component\\Security\\Http\\FirewallMapInterface": {
            "service": "security.firewall.map",
            "public": false
        },
        "Symfony\\Component\\Security\\Http\\HttpUtils": {
            "service": "security.http_utils",
            "public": false
        },
        "Symfony\\Component\\Security\\Http\\Session\\SessionAuthenticationStrategyInterface": {
            "service": "security.authentication.session_strategy",
            "public": false
        },
        "Symfony\\Component\\Serializer\\Encoder\\DecoderInterface": {
            "service": "debug.serializer",
            "public": false
        },
        "Symfony\\Component\\Serializer\\Encoder\\EncoderInterface": {
            "service": "debug.serializer",
            "public": false
        },
        "Symfony\\Component\\Serializer\\Mapping\\ClassDiscriminatorResolverInterface": {
            "service": "serializer.mapping.class_discriminator_resolver",
            "public": false
        },
        "Symfony\\Component\\Serializer\\Mapping\\Factory\\ClassMetadataFactoryInterface": {
            "service": "api_platform.serializer.mapping.class_metadata_factory",
            "public": false
        },
        "Symfony\\Component\\Serializer\\Normalizer\\DenormalizerInterface": {
            "service": "debug.serializer",
            "public": false
        },
        "Symfony\\Component\\Serializer\\Normalizer\\NormalizerInterface": {
            "service": "debug.serializer",
            "public": false
        },
        "Symfony\\Component\\Serializer\\SerializerInterface": {
            "service": "debug.serializer",
            "public": false
        },
        "Symfony\\Component\\Stopwatch\\Stopwatch": {
            "service": "debug.stopwatch",
            "public": false
        },
        "Symfony\\Component\\String\\Slugger\\SluggerInterface": {
            "service": "slugger",
            "public": false
        },
        "Symfony\\Component\\TypeInfo\\TypeResolver\\TypeResolverInterface": {
            "service": "type_info.resolver",
            "public": false
        },
        "Symfony\\Component\\Uid\\Factory\\NameBasedUuidFactory": {
            "service": "name_based_uuid.factory",
            "public": false
        },
        "Symfony\\Component\\Uid\\Factory\\RandomBasedUuidFactory": {
            "service": "random_based_uuid.factory",
            "public": false
        },
        "Symfony\\Component\\Uid\\Factory\\TimeBasedUuidFactory": {
            "service": "time_based_uuid.factory",
            "public": false
        },
        "Symfony\\Component\\Uid\\Factory\\UlidFactory": {
            "service": "ulid.factory",
            "public": false
        },
        "Symfony\\Component\\Uid\\Factory\\UuidFactory": {
            "service": "uuid.factory",
            "public": false
        },
        "Symfony\\Component\\Validator\\Validator\\ValidatorInterface": {
            "service": "debug.validator",
            "public": false
        },
        "Symfony\\Component\\WebLink\\HttpHeaderSerializer": {
            "service": "web_link.http_header_serializer",
            "public": false
        },
        "Symfony\\Contracts\\Cache\\CacheInterface": {
            "service": "cache.app",
            "public": false
        },
        "Symfony\\Contracts\\Cache\\NamespacedPoolInterface": {
            "service": "cache.app",
            "public": false
        },
        "Symfony\\Contracts\\Cache\\TagAwareCacheInterface": {
            "service": "cache.app.taggable",
            "public": false
        },
        "Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface": {
            "service": "debug.event_dispatcher",
            "public": false
        },
        "Symfony\\UX\\LiveComponent\\ComponentValidatorInterface": {
            "service": "Symfony\\UX\\LiveComponent\\ComponentValidator",
            "public": false
        },
        "Symfony\\UX\\LiveComponent\\LiveResponder": {
            "service": "ux.live_component.live_responder",
            "public": false
        },
        "Symfony\\UX\\Turbo\\Broadcaster\\BroadcasterInterface": {
            "service": "turbo.broadcaster.action_renderer",
            "public": false
        },
        "Symfony\\UX\\TwigComponent\\ComponentRendererInterface": {
            "service": "ux.twig_component.component_renderer",
            "public": false
        },
        "Symfony\\WebpackEncoreBundle\\Asset\\EntrypointLookupCollectionInterface": {
            "service": "webpack_encore.entrypoint_lookup_collection",
            "public": false
        },
        "Symfony\\WebpackEncoreBundle\\Asset\\EntrypointLookupInterface": {
            "service": "webpack_encore.entrypoint_lookup[_default]",
            "public": false
        },
        "Twig\\Environment": {
            "service": "twig",
            "public": false
        },
        "api_platform.doctrine.orm.metadata.property.metadata_factory.inner": {
            "service": "api_platform.metadata.property.metadata_factory.property_info",
            "public": false
        },
        "api_platform.doctrine.orm.metadata.resource.metadata_collection_factory.inner": {
            "service": "api_platform.metadata.resource.metadata_collection_factory.php_doc",
            "public": false
        },
        "api_platform.http_cache.processor.add_headers.inner": {
            "service": "api_platform.state_processor.add_link_header",
            "public": false
        },
        "api_platform.hydra.name_converter.hydra_prefix.inner": {
            "service": "serializer.name_converter.metadata_aware",
            "public": false
        },
        "api_platform.hydra.normalizer.collection": {
            "service": "api_platform.hydra.normalizer.collection_filters",
            "public": false
        },
        "api_platform.hydra.normalizer.collection_filters.inner": {
            "service": "api_platform.hydra.normalizer.partial_collection_view",
            "public": false
        },
        "api_platform.identifiers_extractor": {
            "service": "api_platform.api.identifiers_extractor",
            "public": false
        },
        "api_platform.inflector": {
            "service": "api_platform.metadata.inflector",
            "public": false
        },
        "api_platform.iri_converter": {
            "service": "api_platform.symfony.iri_converter",
            "public": false
        },
        "api_platform.json_schema.backward_compatible_schema_factory.inner": {
            "service": "api_platform.hydra.json_schema.schema_factory",
            "public": false
        },
        "api_platform.json_schema.metadata.property.metadata_factory.schema.inner": {
            "service": "api_platform.metadata.property.metadata_factory.validator",
            "public": false
        },
        "api_platform.json_schema.schema_factory": {
            "service": "api_platform.json_schema.backward_compatible_schema_factory",
            "public": false
        },
        "api_platform.metadata.property.metadata_factory": {
            "service": "api_platform.metadata.property.metadata_factory.cached",
            "public": false
        },
        "api_platform.metadata.property.metadata_factory.attribute.inner": {
            "service": "api_platform.metadata.property.metadata_factory.identifier",
            "public": false
        },
        "api_platform.metadata.property.metadata_factory.cached.inner": {
            "service": "api_platform.json_schema.metadata.property.metadata_factory.schema",
            "public": false
        },
        "api_platform.metadata.property.metadata_factory.default_property.inner": {
            "service": "api_platform.metadata.property.metadata_factory.serializer",
            "public": false
        },
        "api_platform.metadata.property.metadata_factory.identifier.inner": {
            "service": "api_platform.metadata.property.metadata_factory.default_property",
            "public": false
        },
        "api_platform.metadata.property.metadata_factory.property_info.inner": {
            "service": "api_platform.metadata.property.metadata_factory.xml",
            "public": false
        },
        "api_platform.metadata.property.metadata_factory.serializer.inner": {
            "service": "api_platform.doctrine.orm.metadata.property.metadata_factory",
            "public": false
        },
        "api_platform.metadata.property.metadata_factory.validator.inner": {
            "service": "api_platform.metadata.property.metadata_factory.yaml",
            "public": false
        },
        "api_platform.metadata.property.metadata_factory.yaml.inner": {
            "service": "api_platform.metadata.property.metadata_factory.attribute",
            "public": false
        },
        "api_platform.metadata.property.name_collection_factory": {
            "service": "api_platform.metadata.property.name_collection_factory.cached",
            "public": false
        },
        "api_platform.metadata.property.name_collection_factory.cached.inner": {
            "service": "api_platform.metadata.property.name_collection_factory.yaml",
            "public": false
        },
        "api_platform.metadata.property.name_collection_factory.concerns.inner": {
            "service": "api_platform.metadata.property.name_collection_factory.xml",
            "public": false
        },
        "api_platform.metadata.property.name_collection_factory.xml.inner": {
            "service": "api_platform.metadata.property.name_collection_factory.property_info",
            "public": false
        },
        "api_platform.metadata.property.name_collection_factory.yaml.inner": {
            "service": "api_platform.metadata.property.name_collection_factory.concerns",
            "public": false
        },
        "api_platform.metadata.resource.link_factory": {
            "service": "api_platform.doctrine.orm.metadata.resource.link_factory",
            "public": false
        },
        "api_platform.metadata.resource.metadata_collection_factory": {
            "service": "api_platform.metadata.resource.metadata_collection_factory.cached",
            "public": false
        },
        "api_platform.metadata.resource.metadata_collection_factory.alternate_uri.inner": {
            "service": "api_platform.metadata.resource.metadata_collection_factory.filters",
            "public": false
        },
        "api_platform.metadata.resource.metadata_collection_factory.backed_enum.inner": {
            "service": "api_platform.metadata.resource.metadata_collection_factory.not_exposed_operation",
            "public": false
        },
        "api_platform.metadata.resource.metadata_collection_factory.cached.inner": {
            "service": "api_platform.doctrine.orm.metadata.resource.metadata_collection_factory",
            "public": false
        },
        "api_platform.metadata.resource.metadata_collection_factory.concerns.inner": {
            "service": "api_platform.metadata.resource.metadata_collection_factory.xml",
            "public": false
        },
        "api_platform.metadata.resource.metadata_collection_factory.filters.inner": {
            "service": "api_platform.metadata.resource.metadata_collection_factory.formats",
            "public": false
        },
        "api_platform.metadata.resource.metadata_collection_factory.formats.inner": {
            "service": "api_platform.metadata.resource.metadata_collection_factory.input_output",
            "public": false
        },
        "api_platform.metadata.resource.metadata_collection_factory.input_output.inner": {
            "service": "api_platform.metadata.resource.metadata_collection_factory.operation_name",
            "public": false
        },
        "api_platform.metadata.resource.metadata_collection_factory.link.inner": {
            "service": "api_platform.metadata.resource.metadata_collection_factory.main_controller",
            "public": false
        },
        "api_platform.metadata.resource.metadata_collection_factory.main_controller.inner": {
            "service": "api_platform.metadata.resource.metadata_collection_factory.uri_template",
            "public": false
        },
        "api_platform.metadata.resource.metadata_collection_factory.not_exposed_operation.inner": {
            "service": "api_platform.metadata.resource.metadata_collection_factory.yaml",
            "public": false
        },
        "api_platform.metadata.resource.metadata_collection_factory.operation_name.inner": {
            "service": "api_platform.metadata.resource.metadata_collection_factory.link",
            "public": false
        },
        "api_platform.metadata.resource.metadata_collection_factory.parameter.inner": {
            "service": "api_platform.metadata.resource.metadata_collection_factory.attributes",
            "public": false
        },
        "api_platform.metadata.resource.metadata_collection_factory.php_doc.inner": {
            "service": "api_platform.metadata.resource.metadata_collection_factory.alternate_uri",
            "public": false
        },
        "api_platform.metadata.resource.metadata_collection_factory.uri_template.inner": {
            "service": "api_platform.metadata.resource.metadata_collection_factory.backed_enum",
            "public": false
        },
        "api_platform.metadata.resource.metadata_collection_factory.xml.inner": {
            "service": "api_platform.validator.metadata.resource.metadata_collection_factory.parameter",
            "public": false
        },
        "api_platform.metadata.resource.metadata_collection_factory.yaml.inner": {
            "service": "api_platform.metadata.resource.metadata_collection_factory.concerns",
            "public": false
        },
        "api_platform.metadata.resource.name_collection_factory": {
            "service": "api_platform.metadata.resource.name_collection_factory.cached",
            "public": false
        },
        "api_platform.metadata.resource.name_collection_factory.attributes.inner": {
            "service": "api_platform.metadata.resource.name_collection_factory.concerns",
            "public": false
        },
        "api_platform.metadata.resource.name_collection_factory.cached.inner": {
            "service": "api_platform.metadata.resource.name_collection_factory.yaml",
            "public": false
        },
        "api_platform.metadata.resource.name_collection_factory.class_name.inner": {
            "service": "api_platform.metadata.resource.name_collection_factory.attributes",
            "public": false
        },
        "api_platform.metadata.resource.name_collection_factory.concerns.inner": {
            "service": "api_platform.metadata.resource.name_collection_factory.xml",
            "public": false
        },
        "api_platform.metadata.resource.name_collection_factory.yaml.inner": {
            "service": "api_platform.metadata.resource.name_collection_factory.class_name",
            "public": false
        },
        "api_platform.name_converter": {
            "service": "api_platform.hydra.name_converter.hydra_prefix",
            "public": false
        },
        "api_platform.openapi.normalizer": {
            "service": "api_platform.openapi.normalizer.legacy",
            "public": false
        },
        "api_platform.openapi.normalizer.api_gateway": {
            "service": "api_platform.openapi.normalizer.legacy",
            "public": false
        },
        "api_platform.openapi.serializer_context_builder.inner": {
            "service": "api_platform.serializer.context_builder.filter",
            "public": false
        },
        "api_platform.path_segment_name_generator": {
            "service": "api_platform.metadata.path_segment_name_generator.underscore",
            "public": false
        },
        "api_platform.property_accessor": {
            "service": "property_accessor",
            "public": false
        },
        "api_platform.property_info": {
            "service": "property_info",
            "public": false
        },
        "api_platform.security.expression_language": {
            "service": "security.expression_language",
            "public": false
        },
        "api_platform.serializer": {
            "service": "debug.serializer",
            "public": false
        },
        "api_platform.serializer.context_builder": {
            "service": "api_platform.openapi.serializer_context_builder",
            "public": false
        },
        "api_platform.state.item_provider": {
            "service": "api_platform.doctrine.orm.state.item_provider",
            "public": false
        },
        "api_platform.state_processor.add_link_header.inner": {
            "service": "api_platform.hydra.processor.link",
            "public": false
        },
        "api_platform.state_processor.main": {
            "service": "api_platform.state_processor.write",
            "public": false
        },
        "api_platform.state_processor.respond": {
            "service": "api_platform.http_cache.processor.add_headers",
            "public": false
        },
        "api_platform.state_processor.serialize.inner": {
            "service": "api_platform.http_cache.processor.add_headers",
            "public": false
        },
        "api_platform.state_processor.write.inner": {
            "service": "api_platform.state_processor.serialize",
            "public": false
        },
        "api_platform.state_provider": {
            "service": "api_platform.state_provider.locator",
            "public": false
        },
        "api_platform.state_provider.access_checker": {
            "service": "api_platform.state_provider.security_parameter",
            "public": false
        },
        "api_platform.state_provider.access_checker.inner": {
            "service": "api_platform.swagger_ui.provider",
            "public": false
        },
        "api_platform.state_provider.content_negotiation.inner": {
            "service": "api_platform.state_provider.parameter",
            "public": false
        },
        "api_platform.state_provider.deserialize": {
            "service": "api_platform.state_provider.access_checker.post_deserialize",
            "public": false
        },
        "api_platform.state_provider.deserialize.inner": {
            "service": "api_platform.state_provider.security_parameter",
            "public": false
        },
        "api_platform.state_provider.main": {
            "service": "api_platform.state_provider.content_negotiation",
            "public": false
        },
        "api_platform.state_provider.parameter.inner": {
            "service": "api_platform.state_provider.parameter_validator",
            "public": false
        },
        "api_platform.state_provider.parameter_validator.inner": {
            "service": "api_platform.state_provider.access_checker.post_validate",
            "public": false
        },
        "api_platform.state_provider.read": {
            "service": "api_platform.state_provider.security_parameter",
            "public": false
        },
        "api_platform.state_provider.read.inner": {
            "service": "api_platform.state_provider.locator",
            "public": false
        },
        "api_platform.state_provider.validate": {
            "service": "api_platform.state_provider.access_checker.post_validate",
            "public": false
        },
        "api_platform.state_provider.validate.inner": {
            "service": "api_platform.state_provider.access_checker.post_deserialize",
            "public": false
        },
        "api_platform.validator.metadata.resource.metadata_collection_factory.parameter.inner": {
            "service": "api_platform.metadata.resource.metadata_collection_factory.parameter",
            "public": false
        },
        "argument_resolver": {
            "service": "debug.argument_resolver",
            "public": false
        },
        "argument_resolver.controller_locator": {
            "service": ".service_locator.GyxOlJL",
            "public": false
        },
        "cache.adapter.valkey": {
            "service": "cache.adapter.redis",
            "public": false
        },
        "cache.adapter.valkey_tag_aware": {
            "service": "cache.adapter.redis_tag_aware",
            "public": false
        },
        "cache.app_clearer": {
            "service": "cache.default_clearer",
            "public": true
        },
        "cache.default_doctrine_dbal_provider": {
            "service": "doctrine.dbal.default_connection",
            "public": false
        },
        "cache.default_memcached_provider": {
            "service": ".cache_connection.8kvDmRs",
            "public": false
        },
        "cache.default_redis_provider": {
            "service": ".cache_connection.MfCypIA",
            "public": false
        },
        "cache.default_valkey_provider": {
            "service": ".cache_connection.H8vabc8",
            "public": false
        },
        "console.command.stimulus_component_debug": {
            "service": "ux.twig_component.command.debug",
            "public": false
        },
        "container.env_var_processors_locator": {
            "service": ".service_locator.pRu6x_4",
            "public": true
        },
        "controller_resolver": {
            "service": "debug.controller_resolver",
            "public": false
        },
        "database_connection": {
            "service": "doctrine.dbal.default_connection",
            "public": true
        },
        "doctrine.dbal.event_manager": {
            "service": "doctrine.dbal.default_connection.event_manager",
            "public": false
        },
        "doctrine.id_generator_locator": {
            "service": ".service_locator.BxSdgVt",
            "public": false
        },
        "doctrine.migrations.metadata_storage": {
            "service": "doctrine.migrations.storage.table_storage",
            "public": false
        },
        "doctrine.orm.default_entity_manager.event_manager": {
            "service": "doctrine.dbal.default_connection.event_manager",
            "public": false
        },
        "doctrine.orm.default_metadata_cache": {
            "service": "cache.doctrine.orm.default.metadata",
            "public": false
        },
        "doctrine.orm.default_metadata_driver": {
            "service": ".doctrine.orm.default_metadata_driver",
            "public": false
        },
        "doctrine.orm.default_query_cache": {
            "service": "cache.doctrine.orm.default.query",
            "public": false
        },
        "doctrine.orm.default_result_cache": {
            "service": "cache.doctrine.orm.default.result",
            "public": false
        },
        "doctrine.orm.entity_manager": {
            "service": "doctrine.orm.default_entity_manager",
            "public": true
        },
        "error_renderer": {
            "service": "error_handler.error_renderer.serializer",
            "public": false
        },
        "error_renderer.html": {
            "service": "twig.error_renderer.html",
            "public": false
        },
        "error_renderer.serializer": {
            "service": "error_handler.error_renderer.serializer",
            "public": false
        },
        "event_dispatcher": {
            "service": "debug.event_dispatcher",
            "public": true
        },
        "lexik_jwt_authentication.encoder": {
            "service": "lexik_jwt_authentication.encoder.lcobucci",
            "public": true
        },
        "lexik_jwt_authentication.key_loader": {
            "service": "lexik_jwt_authentication.key_loader.raw",
            "public": true
        },
        "liip_imagine": {
            "service": "liip_imagine.gd",
            "public": false
        },
        "liip_imagine.controller": {
            "service": "Liip\\ImagineBundle\\Controller\\ImagineController",
            "public": true
        },
        "liip_imagine.extension_guesser": {
            "service": "mime_types",
            "public": false
        },
        "liip_imagine.mime_type_guesser": {
            "service": "mime_types",
            "public": false
        },
        "lock.factory": {
            "service": "lock.default.factory",
            "public": false
        },
        "logger": {
            "service": "monolog.logger",
            "public": false
        },
        "router": {
            "service": "router.default",
            "public": true
        },
        "security.access.decision_manager": {
            "service": "debug.security.access.decision_manager",
            "public": false
        },
        "security.authentication.session_strategy.main": {
            "service": "security.authentication.session_strategy",
            "public": false
        },
        "security.event_dispatcher.main": {
            "service": "debug.security.event_dispatcher.main",
            "public": false
        },
        "security.firewall": {
            "service": "debug.security.firewall",
            "public": false
        },
        "security.firewall.authenticator.main": {
            "service": "debug.security.firewall.authenticator.main",
            "public": false
        },
        "security.firewall.context_locator": {
            "service": ".service_locator.Iyre4WN",
            "public": false
        },
        "security.password_hasher": {
            "service": "security.user_password_hasher",
            "public": false
        },
        "security.user_checker.main": {
            "service": "security.user_checker",
            "public": false
        },
        "security.user_providers": {
            "service": "security.user.provider.concrete.app_user_provider",
            "public": false
        },
        "serializer": {
            "service": "debug.serializer",
            "public": false
        },
        "serializer.mapping.class_metadata_factory": {
            "service": "api_platform.serializer.mapping.class_metadata_factory",
            "public": false
        },
        "serializer.property_accessor": {
            "service": "property_accessor",
            "public": false
        },
        "session.handler": {
            "service": "session.handler.native",
            "public": false
        },
        "session.storage.factory": {
            "service": "session.storage.factory.native",
            "public": false
        },
        "turbo.broadcaster.imux": {
            "service": "turbo.broadcaster.action_renderer",
            "public": false
        },
        "twig.configurator.environment": {
            "service": "ux.twig_component.twig.environment_configurator",
            "public": false
        },
        "twig.error_renderer.html.inner": {
            "service": "error_handler.error_renderer.html",
            "public": false
        },
        "twig.loader": {
            "service": "twig.loader.native_filesystem",
            "public": false
        },
        "twig.loader.filesystem": {
            "service": "twig.loader.native_filesystem",
            "public": false
        },
        "validator": {
            "service": "debug.validator",
            "public": false
        },
        "validator.mapping.class_metadata_factory": {
            "service": "debug.validator",
            "public": false
        },
        "var_dumper.cli_dumper": {
            "service": "var_dumper.contextualized_cli_dumper",
            "public": false
        }
    },
    "services": []
}

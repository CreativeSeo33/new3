openapi: 3.1.0
info:
  title: 'Hello API Platform'
  description: ''
  version: 1.0.0
servers:
  -
    url: /
    description: ''
paths:
  /api/attributes:
    get:
      operationId: api_attributes_get_collection
      tags:
        - Attribute
      responses:
        '200':
          description: 'Attribute collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/Attribute.jsonld-attribute.get' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attribute-attribute.get'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attribute-attribute.get'
      summary: 'Retrieves the collection of Attribute resources.'
      description: 'Retrieves the collection of Attribute resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_attributes_post
      tags:
        - Attribute
      responses:
        '201':
          description: 'Attribute resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Attribute.jsonld-attribute.get'
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute-attribute.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Attribute-attribute.get'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
      summary: 'Creates a Attribute resource.'
      description: 'Creates a Attribute resource.'
      parameters: []
      requestBody:
        description: 'The new Attribute resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Attribute.jsonld-attribute.post'
          application/json:
            schema:
              $ref: '#/components/schemas/Attribute-attribute.post'
          text/html:
            schema:
              $ref: '#/components/schemas/Attribute-attribute.post'
        required: true
      deprecated: false
  '/api/attributes/{id}':
    get:
      operationId: api_attributes_id_get
      tags:
        - Attribute
      responses:
        '200':
          description: 'Attribute resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Attribute.jsonld-attribute.get'
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute-attribute.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Attribute-attribute.get'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a Attribute resource.'
      description: 'Retrieves a Attribute resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Attribute identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      operationId: api_attributes_id_delete
      tags:
        - Attribute
      responses:
        '204':
          description: 'Attribute resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the Attribute resource.'
      description: 'Removes the Attribute resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Attribute identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_attributes_id_patch
      tags:
        - Attribute
      responses:
        '200':
          description: 'Attribute resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Attribute.jsonld-attribute.get'
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute-attribute.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Attribute-attribute.get'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the Attribute resource.'
      description: 'Updates the Attribute resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Attribute identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Attribute resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Attribute-attribute.patch'
        required: true
      deprecated: false
  /api/attribute_groups:
    get:
      operationId: api_attribute_groups_get_collection
      tags:
        - AttributeGroup
      responses:
        '200':
          description: 'AttributeGroup collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/AttributeGroup.jsonld-attribute_group.get' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeGroup-attribute_group.get'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeGroup-attribute_group.get'
      summary: 'Retrieves the collection of AttributeGroup resources.'
      description: 'Retrieves the collection of AttributeGroup resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_attribute_groups_post
      tags:
        - AttributeGroup
      responses:
        '201':
          description: 'AttributeGroup resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AttributeGroup.jsonld-attribute_group.get'
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeGroup-attribute_group.get'
            text/html:
              schema:
                $ref: '#/components/schemas/AttributeGroup-attribute_group.get'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
      summary: 'Creates a AttributeGroup resource.'
      description: 'Creates a AttributeGroup resource.'
      parameters: []
      requestBody:
        description: 'The new AttributeGroup resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AttributeGroup.jsonld-attribute_group.post'
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeGroup-attribute_group.post'
          text/html:
            schema:
              $ref: '#/components/schemas/AttributeGroup-attribute_group.post'
        required: true
      deprecated: false
  '/api/attribute_groups/{id}':
    get:
      operationId: api_attribute_groups_id_get
      tags:
        - AttributeGroup
      responses:
        '200':
          description: 'AttributeGroup resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AttributeGroup.jsonld-attribute_group.get'
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeGroup-attribute_group.get'
            text/html:
              schema:
                $ref: '#/components/schemas/AttributeGroup-attribute_group.get'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a AttributeGroup resource.'
      description: 'Retrieves a AttributeGroup resource.'
      parameters:
        -
          name: id
          in: path
          description: 'AttributeGroup identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      operationId: api_attribute_groups_id_delete
      tags:
        - AttributeGroup
      responses:
        '204':
          description: 'AttributeGroup resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the AttributeGroup resource.'
      description: 'Removes the AttributeGroup resource.'
      parameters:
        -
          name: id
          in: path
          description: 'AttributeGroup identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_attribute_groups_id_patch
      tags:
        - AttributeGroup
      responses:
        '200':
          description: 'AttributeGroup resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AttributeGroup.jsonld-attribute_group.get'
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeGroup-attribute_group.get'
            text/html:
              schema:
                $ref: '#/components/schemas/AttributeGroup-attribute_group.get'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the AttributeGroup resource.'
      description: 'Updates the AttributeGroup resource.'
      parameters:
        -
          name: id
          in: path
          description: 'AttributeGroup identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AttributeGroup resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AttributeGroup-attribute_group.patch'
        required: true
      deprecated: false
  /api/carousels:
    get:
      operationId: api_carousels_get_collection
      tags:
        - Carousel
      responses:
        '200':
          description: 'Carousel collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/Carousel.jsonld-carousel.get' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Carousel-carousel.get'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Carousel-carousel.get'
      summary: 'Retrieves the collection of Carousel resources.'
      description: 'Retrieves the collection of Carousel resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
        -
          name: place
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'place[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
  '/api/carousels/{id}':
    get:
      operationId: api_carousels_id_get
      tags:
        - Carousel
      responses:
        '200':
          description: 'Carousel resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Carousel.jsonld-carousel.get'
            application/json:
              schema:
                $ref: '#/components/schemas/Carousel-carousel.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Carousel-carousel.get'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a Carousel resource.'
      description: 'Retrieves a Carousel resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Carousel identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      operationId: api_carousels_id_delete
      tags:
        - Carousel
      responses:
        '204':
          description: 'Carousel resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the Carousel resource.'
      description: 'Removes the Carousel resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Carousel identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_carousels_id_patch
      tags:
        - Carousel
      responses:
        '200':
          description: 'Carousel resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Carousel.jsonld-carousel.get'
            application/json:
              schema:
                $ref: '#/components/schemas/Carousel-carousel.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Carousel-carousel.get'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the Carousel resource.'
      description: 'Updates the Carousel resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Carousel identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Carousel resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Carousel-carousel.patch'
        required: true
      deprecated: false
  /api/categories:
    get:
      operationId: api_categories_get_collection
      tags:
        - Category
      responses:
        '200':
          description: 'Category collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/Category.jsonld' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
      summary: 'Retrieves the collection of Category resources.'
      description: 'Retrieves the collection of Category resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_categories_post
      tags:
        - Category
      responses:
        '201':
          description: 'Category resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Category.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
            text/html:
              schema:
                $ref: '#/components/schemas/Category'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
      summary: 'Creates a Category resource.'
      description: 'Creates a Category resource.'
      parameters: []
      requestBody:
        description: 'The new Category resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Category.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          text/html:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      deprecated: false
  '/api/categories/{id}':
    get:
      operationId: api_categories_id_get
      tags:
        - Category
      responses:
        '200':
          description: 'Category resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Category.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
            text/html:
              schema:
                $ref: '#/components/schemas/Category'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a Category resource.'
      description: 'Retrieves a Category resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Category identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      operationId: api_categories_id_delete
      tags:
        - Category
      responses:
        '204':
          description: 'Category resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the Category resource.'
      description: 'Removes the Category resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Category identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_categories_id_patch
      tags:
        - Category
      responses:
        '200':
          description: 'Category resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Category.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
            text/html:
              schema:
                $ref: '#/components/schemas/Category'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the Category resource.'
      description: 'Updates the Category resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Category identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Category resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      deprecated: false
  /api/cities:
    get:
      operationId: api_cities_get_collection
      tags:
        - City
      responses:
        '200':
          description: 'City collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/City.jsonld-city.get' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/City-city.get'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/City-city.get'
      summary: 'Retrieves the collection of City resources.'
      description: 'Retrieves the collection of City resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
        -
          name: pagination
          in: query
          description: 'Enable or disable pagination'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[population]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: address
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_cities_post
      tags:
        - City
      responses:
        '201':
          description: 'City resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/City.jsonld-city.get'
            application/json:
              schema:
                $ref: '#/components/schemas/City-city.get'
            text/html:
              schema:
                $ref: '#/components/schemas/City-city.get'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
      summary: 'Creates a City resource.'
      description: 'Creates a City resource.'
      parameters: []
      requestBody:
        description: 'The new City resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/City.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/City'
          text/html:
            schema:
              $ref: '#/components/schemas/City'
        required: true
      deprecated: false
  '/api/cities/{id}':
    get:
      operationId: api_cities_id_get
      tags:
        - City
      responses:
        '200':
          description: 'City resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/City.jsonld-city.get'
            application/json:
              schema:
                $ref: '#/components/schemas/City-city.get'
            text/html:
              schema:
                $ref: '#/components/schemas/City-city.get'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a City resource.'
      description: 'Retrieves a City resource.'
      parameters:
        -
          name: id
          in: path
          description: 'City identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      operationId: api_cities_id_delete
      tags:
        - City
      responses:
        '204':
          description: 'City resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the City resource.'
      description: 'Removes the City resource.'
      parameters:
        -
          name: id
          in: path
          description: 'City identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_cities_id_patch
      tags:
        - City
      responses:
        '200':
          description: 'City resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/City.jsonld-city.get'
            application/json:
              schema:
                $ref: '#/components/schemas/City-city.get'
            text/html:
              schema:
                $ref: '#/components/schemas/City-city.get'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the City resource.'
      description: 'Updates the City resource.'
      parameters:
        -
          name: id
          in: path
          description: 'City identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated City resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/City'
        required: true
      deprecated: false
  /api/city_modals:
    get:
      operationId: api_city_modals_get_collection
      tags:
        - CityModal
      responses:
        '200':
          description: 'CityModal collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/CityModal.jsonld-cityModal.get' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CityModal-cityModal.get'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CityModal-cityModal.get'
      summary: 'Retrieves the collection of CityModal resources.'
      description: 'Retrieves the collection of CityModal resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
      deprecated: false
  /api/delivery_types:
    get:
      operationId: api_delivery_types_get_collection
      tags:
        - DeliveryType
      responses:
        '200':
          description: 'DeliveryType collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/DeliveryType.jsonld' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeliveryType'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeliveryType'
      summary: 'Retrieves the collection of DeliveryType resources.'
      description: 'Retrieves the collection of DeliveryType resources.'
      parameters: []
      deprecated: false
    post:
      operationId: api_delivery_types_post
      tags:
        - DeliveryType
      responses:
        '201':
          description: 'DeliveryType resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DeliveryType.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryType'
            text/html:
              schema:
                $ref: '#/components/schemas/DeliveryType'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
      summary: 'Creates a DeliveryType resource.'
      description: 'Creates a DeliveryType resource.'
      parameters: []
      requestBody:
        description: 'The new DeliveryType resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DeliveryType.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryType'
          text/html:
            schema:
              $ref: '#/components/schemas/DeliveryType'
        required: true
      deprecated: false
  '/api/delivery_types/{id}':
    get:
      operationId: api_delivery_types_id_get
      tags:
        - DeliveryType
      responses:
        '200':
          description: 'DeliveryType resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DeliveryType.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryType'
            text/html:
              schema:
                $ref: '#/components/schemas/DeliveryType'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a DeliveryType resource.'
      description: 'Retrieves a DeliveryType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'DeliveryType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      operationId: api_delivery_types_id_delete
      tags:
        - DeliveryType
      responses:
        '204':
          description: 'DeliveryType resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the DeliveryType resource.'
      description: 'Removes the DeliveryType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'DeliveryType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_delivery_types_id_patch
      tags:
        - DeliveryType
      responses:
        '200':
          description: 'DeliveryType resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DeliveryType.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryType'
            text/html:
              schema:
                $ref: '#/components/schemas/DeliveryType'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the DeliveryType resource.'
      description: 'Updates the DeliveryType resource.'
      parameters:
        -
          name: id
          in: path
          description: 'DeliveryType identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated DeliveryType resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/DeliveryType'
        required: true
      deprecated: false
  /api/admin/fias:
    get:
      operationId: api_adminfias_get_collection
      tags:
        - Fias
      responses:
        '200':
          description: 'Fias collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/Fias.jsonld-fias.admin.get' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fias-fias.admin.get'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fias-fias.admin.get'
      summary: 'Retrieves the collection of Fias resources.'
      description: 'Retrieves the collection of Fias resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
        -
          name: pagination
          in: query
          description: 'Enable or disable pagination'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
        -
          name: offname
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: shortname
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: postalcode
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: level
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'level[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        -
          name: parentId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'parentId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
      deprecated: false
  '/api/admin/fias/{id}':
    get:
      operationId: api_adminfias_id_get
      tags:
        - Fias
      responses:
        '200':
          description: 'Fias resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Fias.jsonld-fias.admin.get'
            application/json:
              schema:
                $ref: '#/components/schemas/Fias-fias.admin.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Fias-fias.admin.get'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a Fias resource.'
      description: 'Retrieves a Fias resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Fias identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
  /api/fias:
    get:
      operationId: api_fias_get_collection
      tags:
        - Fias
      responses:
        '200':
          description: 'Fias collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/Fias.jsonld-fias.get' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fias-fias.get'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fias-fias.get'
      summary: 'Retrieves the collection of Fias resources.'
      description: 'Retrieves the collection of Fias resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
        -
          name: pagination
          in: query
          description: 'Enable or disable pagination'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
        -
          name: offname
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: shortname
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: postalcode
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: level
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'level[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        -
          name: parentId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'parentId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
      deprecated: false
  /api/options:
    get:
      operationId: api_options_get_collection
      tags:
        - Option
      responses:
        '200':
          description: 'Option collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/Option.jsonld-options_only.getCollection' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Option-options_only.getCollection'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Option-options_only.getCollection'
      summary: 'Retrieves the collection of Option resources.'
      description: 'Retrieves the collection of Option resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_options_post
      tags:
        - Option
      responses:
        '201':
          description: 'Option resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Option.jsonld-options_only.getCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/Option-options_only.getCollection'
            text/html:
              schema:
                $ref: '#/components/schemas/Option-options_only.getCollection'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
      summary: 'Creates a Option resource.'
      description: 'Creates a Option resource.'
      parameters: []
      requestBody:
        description: 'The new Option resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Option.jsonld-options_only.post'
          application/json:
            schema:
              $ref: '#/components/schemas/Option-options_only.post'
          text/html:
            schema:
              $ref: '#/components/schemas/Option-options_only.post'
        required: true
      deprecated: false
  '/api/options/{id}':
    get:
      operationId: api_options_id_get
      tags:
        - Option
      responses:
        '200':
          description: 'Option resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Option.jsonld-options_only.get'
            application/json:
              schema:
                $ref: '#/components/schemas/Option-options_only.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Option-options_only.get'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a Option resource.'
      description: 'Retrieves a Option resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Option identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      operationId: api_options_id_delete
      tags:
        - Option
      responses:
        '204':
          description: 'Option resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the Option resource.'
      description: 'Removes the Option resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Option identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_options_id_patch
      tags:
        - Option
      responses:
        '200':
          description: 'Option resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Option.jsonld-options_only.getCollection'
            application/json:
              schema:
                $ref: '#/components/schemas/Option-options_only.getCollection'
            text/html:
              schema:
                $ref: '#/components/schemas/Option-options_only.getCollection'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the Option resource.'
      description: 'Updates the Option resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Option identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Option resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Option-options_only.patch'
        required: true
      deprecated: false
  /api/option_values:
    get:
      operationId: api_option_values_get_collection
      tags:
        - OptionValue
      responses:
        '200':
          description: 'OptionValue collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/OptionValue.jsonld' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptionValue'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptionValue'
      summary: 'Retrieves the collection of OptionValue resources.'
      description: 'Retrieves the collection of OptionValue resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
        -
          name: optionType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'optionType[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_option_values_post
      tags:
        - OptionValue
      responses:
        '201':
          description: 'OptionValue resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OptionValue.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/OptionValue'
            text/html:
              schema:
                $ref: '#/components/schemas/OptionValue'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
      summary: 'Creates a OptionValue resource.'
      description: 'Creates a OptionValue resource.'
      parameters: []
      requestBody:
        description: 'The new OptionValue resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/OptionValue.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/OptionValue'
          text/html:
            schema:
              $ref: '#/components/schemas/OptionValue'
        required: true
      deprecated: false
  '/api/option_values/{id}':
    get:
      operationId: api_option_values_id_get
      tags:
        - OptionValue
      responses:
        '200':
          description: 'OptionValue resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OptionValue.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/OptionValue'
            text/html:
              schema:
                $ref: '#/components/schemas/OptionValue'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a OptionValue resource.'
      description: 'Retrieves a OptionValue resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OptionValue identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      operationId: api_option_values_id_delete
      tags:
        - OptionValue
      responses:
        '204':
          description: 'OptionValue resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the OptionValue resource.'
      description: 'Removes the OptionValue resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OptionValue identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_option_values_id_patch
      tags:
        - OptionValue
      responses:
        '200':
          description: 'OptionValue resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OptionValue.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/OptionValue'
            text/html:
              schema:
                $ref: '#/components/schemas/OptionValue'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the OptionValue resource.'
      description: 'Updates the OptionValue resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OptionValue identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated OptionValue resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/OptionValue'
        required: true
      deprecated: false
  /api/orders:
    get:
      operationId: api_orders_get_collection
      tags:
        - Order
      responses:
        '200':
          description: 'Order collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/Order.jsonld-order.get' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-order.get'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order-order.get'
      summary: 'Retrieves the collection of Order resources.'
      description: 'Retrieves the collection of Order resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateAdded]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: orderId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: status
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'status[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        -
          name: customer.name
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: customer.phone
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
  '/api/orders/{id}':
    get:
      operationId: api_orders_id_get
      tags:
        - Order
      responses:
        '200':
          description: 'Order resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Order.jsonld-order.get'
            application/json:
              schema:
                $ref: '#/components/schemas/Order-order.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Order-order.get'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a Order resource.'
      description: 'Retrieves a Order resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Order identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      operationId: api_orders_id_delete
      tags:
        - Order
      responses:
        '204':
          description: 'Order resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the Order resource.'
      description: 'Removes the Order resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Order identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_orders_id_patch
      tags:
        - Order
      responses:
        '200':
          description: 'Order resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Order.jsonld-order.get'
            application/json:
              schema:
                $ref: '#/components/schemas/Order-order.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Order-order.get'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the Order resource.'
      description: 'Updates the Order resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Order identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Order resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Order-order.patch'
        required: true
      deprecated: false
  /api/order_customers:
    get:
      operationId: api_order_customers_get_collection
      tags:
        - OrderCustomer
      responses:
        '200':
          description: 'OrderCustomer collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/OrderCustomer.jsonld-orderCustomer.get' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderCustomer-orderCustomer.get'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderCustomer-orderCustomer.get'
      summary: 'Retrieves the collection of OrderCustomer resources.'
      description: 'Retrieves the collection of OrderCustomer resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_order_customers_post
      tags:
        - OrderCustomer
      responses:
        '201':
          description: 'OrderCustomer resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderCustomer.jsonld-orderCustomer.get'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCustomer-orderCustomer.get'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderCustomer-orderCustomer.get'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
      summary: 'Creates a OrderCustomer resource.'
      description: 'Creates a OrderCustomer resource.'
      parameters: []
      requestBody:
        description: 'The new OrderCustomer resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/OrderCustomer.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCustomer'
          text/html:
            schema:
              $ref: '#/components/schemas/OrderCustomer'
        required: true
      deprecated: false
  '/api/order_customers/{id}':
    get:
      operationId: api_order_customers_id_get
      tags:
        - OrderCustomer
      responses:
        '200':
          description: 'OrderCustomer resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderCustomer.jsonld-orderCustomer.get'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCustomer-orderCustomer.get'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderCustomer-orderCustomer.get'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a OrderCustomer resource.'
      description: 'Retrieves a OrderCustomer resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrderCustomer identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      operationId: api_order_customers_id_delete
      tags:
        - OrderCustomer
      responses:
        '204':
          description: 'OrderCustomer resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the OrderCustomer resource.'
      description: 'Removes the OrderCustomer resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrderCustomer identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_order_customers_id_patch
      tags:
        - OrderCustomer
      responses:
        '200':
          description: 'OrderCustomer resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderCustomer.jsonld-orderCustomer.get'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCustomer-orderCustomer.get'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderCustomer-orderCustomer.get'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the OrderCustomer resource.'
      description: 'Updates the OrderCustomer resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrderCustomer identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated OrderCustomer resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/OrderCustomer'
        required: true
      deprecated: false
  /api/order_deliveries:
    get:
      operationId: api_order_deliveries_get_collection
      tags:
        - OrderDelivery
      responses:
        '200':
          description: 'OrderDelivery collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/OrderDelivery.jsonld' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDelivery'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDelivery'
      summary: 'Retrieves the collection of OrderDelivery resources.'
      description: 'Retrieves the collection of OrderDelivery resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_order_deliveries_post
      tags:
        - OrderDelivery
      responses:
        '201':
          description: 'OrderDelivery resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderDelivery.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDelivery'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderDelivery'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
      summary: 'Creates a OrderDelivery resource.'
      description: 'Creates a OrderDelivery resource.'
      parameters: []
      requestBody:
        description: 'The new OrderDelivery resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/OrderDelivery.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDelivery'
          text/html:
            schema:
              $ref: '#/components/schemas/OrderDelivery'
        required: true
      deprecated: false
  '/api/order_deliveries/{id}':
    get:
      operationId: api_order_deliveries_id_get
      tags:
        - OrderDelivery
      responses:
        '200':
          description: 'OrderDelivery resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderDelivery.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDelivery'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderDelivery'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a OrderDelivery resource.'
      description: 'Retrieves a OrderDelivery resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrderDelivery identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      operationId: api_order_deliveries_id_delete
      tags:
        - OrderDelivery
      responses:
        '204':
          description: 'OrderDelivery resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the OrderDelivery resource.'
      description: 'Removes the OrderDelivery resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrderDelivery identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_order_deliveries_id_patch
      tags:
        - OrderDelivery
      responses:
        '200':
          description: 'OrderDelivery resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderDelivery.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDelivery'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderDelivery'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the OrderDelivery resource.'
      description: 'Updates the OrderDelivery resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrderDelivery identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated OrderDelivery resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/OrderDelivery'
        required: true
      deprecated: false
  /api/order_product_options:
    get:
      operationId: api_order_product_options_get_collection
      tags:
        - OrderProductOptions
      responses:
        '200':
          description: 'OrderProductOptions collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/OrderProductOptions.jsonld' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderProductOptions'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderProductOptions'
      summary: 'Retrieves the collection of OrderProductOptions resources.'
      description: 'Retrieves the collection of OrderProductOptions resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_order_product_options_post
      tags:
        - OrderProductOptions
      responses:
        '201':
          description: 'OrderProductOptions resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderProductOptions.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProductOptions'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderProductOptions'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
      summary: 'Creates a OrderProductOptions resource.'
      description: 'Creates a OrderProductOptions resource.'
      parameters: []
      requestBody:
        description: 'The new OrderProductOptions resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/OrderProductOptions.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/OrderProductOptions'
          text/html:
            schema:
              $ref: '#/components/schemas/OrderProductOptions'
        required: true
      deprecated: false
  '/api/order_product_options/{id}':
    get:
      operationId: api_order_product_options_id_get
      tags:
        - OrderProductOptions
      responses:
        '200':
          description: 'OrderProductOptions resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderProductOptions.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProductOptions'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderProductOptions'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a OrderProductOptions resource.'
      description: 'Retrieves a OrderProductOptions resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrderProductOptions identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      operationId: api_order_product_options_id_delete
      tags:
        - OrderProductOptions
      responses:
        '204':
          description: 'OrderProductOptions resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the OrderProductOptions resource.'
      description: 'Removes the OrderProductOptions resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrderProductOptions identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_order_product_options_id_patch
      tags:
        - OrderProductOptions
      responses:
        '200':
          description: 'OrderProductOptions resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderProductOptions.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProductOptions'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderProductOptions'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the OrderProductOptions resource.'
      description: 'Updates the OrderProductOptions resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrderProductOptions identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated OrderProductOptions resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/OrderProductOptions'
        required: true
      deprecated: false
  /api/order_products:
    get:
      operationId: api_order_products_get_collection
      tags:
        - OrderProducts
      responses:
        '200':
          description: 'OrderProducts collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/OrderProducts.jsonld' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderProducts'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderProducts'
      summary: 'Retrieves the collection of OrderProducts resources.'
      description: 'Retrieves the collection of OrderProducts resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_order_products_post
      tags:
        - OrderProducts
      responses:
        '201':
          description: 'OrderProducts resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderProducts.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProducts'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderProducts'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
      summary: 'Creates a OrderProducts resource.'
      description: 'Creates a OrderProducts resource.'
      parameters: []
      requestBody:
        description: 'The new OrderProducts resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/OrderProducts.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/OrderProducts'
          text/html:
            schema:
              $ref: '#/components/schemas/OrderProducts'
        required: true
      deprecated: false
  '/api/order_products/{id}':
    get:
      operationId: api_order_products_id_get
      tags:
        - OrderProducts
      responses:
        '200':
          description: 'OrderProducts resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderProducts.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProducts'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderProducts'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a OrderProducts resource.'
      description: 'Retrieves a OrderProducts resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrderProducts identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      operationId: api_order_products_id_delete
      tags:
        - OrderProducts
      responses:
        '204':
          description: 'OrderProducts resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the OrderProducts resource.'
      description: 'Removes the OrderProducts resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrderProducts identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_order_products_id_patch
      tags:
        - OrderProducts
      responses:
        '200':
          description: 'OrderProducts resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderProducts.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProducts'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderProducts'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the OrderProducts resource.'
      description: 'Updates the OrderProducts resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrderProducts identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated OrderProducts resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/OrderProducts'
        required: true
      deprecated: false
  /api/admin/order-statuses:
    get:
      operationId: api_adminorder-statuses_get_collection
      tags:
        - OrderStatus
      responses:
        '200':
          description: 'OrderStatus collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/OrderStatus.jsonld-orderStatus.admin.get' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderStatus-orderStatus.admin.get'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderStatus-orderStatus.admin.get'
      summary: 'Retrieves the collection of OrderStatus resources.'
      description: 'Retrieves the collection of OrderStatus resources.'
      parameters: []
      deprecated: false
    post:
      operationId: api_adminorder-statuses_post
      tags:
        - OrderStatus
      responses:
        '201':
          description: 'OrderStatus resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderStatus.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderStatus'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
      summary: 'Creates a OrderStatus resource.'
      description: 'Creates a OrderStatus resource.'
      parameters: []
      requestBody:
        description: 'The new OrderStatus resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/OrderStatus.jsonld-orderStatus.post'
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatus-orderStatus.post'
          text/html:
            schema:
              $ref: '#/components/schemas/OrderStatus-orderStatus.post'
        required: true
      deprecated: false
  '/api/admin/order-statuses/{id}':
    get:
      operationId: api_adminorder-statuses_id_get
      tags:
        - OrderStatus
      responses:
        '200':
          description: 'OrderStatus resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderStatus.jsonld-orderStatus.admin.get'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatus-orderStatus.admin.get'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderStatus-orderStatus.admin.get'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a OrderStatus resource.'
      description: 'Retrieves a OrderStatus resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrderStatus identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_adminorder-statuses_id_put
      tags:
        - OrderStatus
      responses:
        '200':
          description: 'OrderStatus resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderStatus.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderStatus'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Replaces the OrderStatus resource.'
      description: 'Replaces the OrderStatus resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrderStatus identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated OrderStatus resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/OrderStatus.jsonld-orderStatus.post'
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatus-orderStatus.post'
          text/html:
            schema:
              $ref: '#/components/schemas/OrderStatus-orderStatus.post'
        required: true
      deprecated: false
    delete:
      operationId: api_adminorder-statuses_id_delete
      tags:
        - OrderStatus
      responses:
        '204':
          description: 'OrderStatus resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the OrderStatus resource.'
      description: 'Removes the OrderStatus resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrderStatus identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_adminorder-statuses_id_patch
      tags:
        - OrderStatus
      responses:
        '200':
          description: 'OrderStatus resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderStatus.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderStatus'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the OrderStatus resource.'
      description: 'Updates the OrderStatus resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrderStatus identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated OrderStatus resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/OrderStatus-orderStatus.patch'
        required: true
      deprecated: false
  /api/order_statuses:
    get:
      operationId: api_order_statuses_get_collection
      tags:
        - OrderStatus
      responses:
        '200':
          description: 'OrderStatus collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/OrderStatus.jsonld-orderStatus.admin.get' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderStatus-orderStatus.admin.get'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderStatus-orderStatus.admin.get'
      summary: 'Retrieves the collection of OrderStatus resources.'
      description: 'Retrieves the collection of OrderStatus resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
        -
          name: pagination
          in: query
          description: 'Enable or disable pagination'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_order_statuses_post
      tags:
        - OrderStatus
      responses:
        '201':
          description: 'OrderStatus resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderStatus.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderStatus'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
      summary: 'Creates a OrderStatus resource.'
      description: 'Creates a OrderStatus resource.'
      parameters: []
      requestBody:
        description: 'The new OrderStatus resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/OrderStatus.jsonld-orderStatus.post'
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatus-orderStatus.post'
          text/html:
            schema:
              $ref: '#/components/schemas/OrderStatus-orderStatus.post'
        required: true
      deprecated: false
  '/api/order_statuses/{id}':
    get:
      operationId: api_order_statuses_id_get
      tags:
        - OrderStatus
      responses:
        '200':
          description: 'OrderStatus resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderStatus.jsonld-orderStatus.admin.get'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatus-orderStatus.admin.get'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderStatus-orderStatus.admin.get'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a OrderStatus resource.'
      description: 'Retrieves a OrderStatus resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrderStatus identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_order_statuses_id_put
      tags:
        - OrderStatus
      responses:
        '200':
          description: 'OrderStatus resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderStatus.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderStatus'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Replaces the OrderStatus resource.'
      description: 'Replaces the OrderStatus resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrderStatus identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated OrderStatus resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/OrderStatus.jsonld-orderStatus.post'
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatus-orderStatus.post'
          text/html:
            schema:
              $ref: '#/components/schemas/OrderStatus-orderStatus.post'
        required: true
      deprecated: false
    delete:
      operationId: api_order_statuses_id_delete
      tags:
        - OrderStatus
      responses:
        '204':
          description: 'OrderStatus resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the OrderStatus resource.'
      description: 'Removes the OrderStatus resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrderStatus identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_order_statuses_id_patch
      tags:
        - OrderStatus
      responses:
        '200':
          description: 'OrderStatus resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OrderStatus.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/OrderStatus'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the OrderStatus resource.'
      description: 'Updates the OrderStatus resource.'
      parameters:
        -
          name: id
          in: path
          description: 'OrderStatus identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated OrderStatus resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/OrderStatus-orderStatus.patch'
        required: true
      deprecated: false
  /api/products:
    get:
      operationId: api_products_get_collection
      tags:
        - Product
      responses:
        '200':
          description: 'Product collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/Product.jsonld-product.list' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-product.list'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-product.list'
      summary: 'Retrieves the collection of Product resources.'
      description: 'Retrieves the collection of Product resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[status]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[sortOrder]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[effectivePrice]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: attributeAssignments.attribute.code
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'attributeAssignments.attribute.code[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: attributeAssignments.attributeGroup.code
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'attributeAssignments.attributeGroup.code[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: category.category
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'category.category[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: attributeAssignments.boolValue
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
        -
          name: 'attributeAssignments.intValue[between]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'attributeAssignments.intValue[gt]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'attributeAssignments.intValue[gte]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'attributeAssignments.intValue[lt]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'attributeAssignments.intValue[lte]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'attributeAssignments.decimalValue[between]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'attributeAssignments.decimalValue[gt]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'attributeAssignments.decimalValue[gte]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'attributeAssignments.decimalValue[lt]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'attributeAssignments.decimalValue[lte]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_products_post
      tags:
        - Product
      responses:
        '201':
          description: 'Product resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Product.jsonld-product.read'
            application/json:
              schema:
                $ref: '#/components/schemas/Product-product.read'
            text/html:
              schema:
                $ref: '#/components/schemas/Product-product.read'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
      summary: 'Creates a Product resource.'
      description: 'Creates a Product resource.'
      parameters: []
      requestBody:
        description: 'The new Product resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Product.jsonld-product.create'
          application/json:
            schema:
              $ref: '#/components/schemas/Product-product.create'
          text/html:
            schema:
              $ref: '#/components/schemas/Product-product.create'
        required: true
      deprecated: false
  '/api/products/{id}':
    get:
      operationId: api_products_id_get
      tags:
        - Product
      responses:
        '200':
          description: 'Product resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Product.jsonld-product.read'
            application/json:
              schema:
                $ref: '#/components/schemas/Product-product.read'
            text/html:
              schema:
                $ref: '#/components/schemas/Product-product.read'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a Product resource.'
      description: 'Retrieves a Product resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Product identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      operationId: api_products_id_delete
      tags:
        - Product
      responses:
        '204':
          description: 'Product resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the Product resource.'
      description: 'Removes the Product resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Product identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_products_id_patch
      tags:
        - Product
      responses:
        '200':
          description: 'Product resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Product.jsonld-product.read'
            application/json:
              schema:
                $ref: '#/components/schemas/Product-product.read'
            text/html:
              schema:
                $ref: '#/components/schemas/Product-product.read'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the Product resource.'
      description: 'Updates the Product resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Product identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Product resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Product-product.update'
        required: true
      deprecated: false
  /api/v2/products:
    get:
      operationId: api_v2products_get_collection
      tags:
        - Product
      responses:
        '200':
          description: 'Product collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/Product.jsonld-product.read' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-product.read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product-product.read'
      summary: 'Retrieves the collection of Product resources.'
      description: 'Retrieves the collection of Product resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_v2products_post
      tags:
        - Product
      responses:
        '201':
          description: 'Product resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Product.jsonld-product.read'
            application/json:
              schema:
                $ref: '#/components/schemas/Product-product.read'
            text/html:
              schema:
                $ref: '#/components/schemas/Product-product.read'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
      summary: 'Creates a Product resource.'
      description: 'Creates a Product resource.'
      parameters: []
      requestBody:
        description: 'The new Product resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Product.jsonld-product.write'
          application/json:
            schema:
              $ref: '#/components/schemas/Product-product.write'
          text/html:
            schema:
              $ref: '#/components/schemas/Product-product.write'
        required: true
      deprecated: false
  '/api/v2/products/{id}':
    get:
      operationId: api_v2products_id_get
      tags:
        - Product
      responses:
        '200':
          description: 'Product resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Product.jsonld-product.read'
            application/json:
              schema:
                $ref: '#/components/schemas/Product-product.read'
            text/html:
              schema:
                $ref: '#/components/schemas/Product-product.read'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a Product resource.'
      description: 'Retrieves a Product resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Product identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      operationId: api_v2products_id_delete
      tags:
        - Product
      responses:
        '204':
          description: 'Product resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the Product resource.'
      description: 'Removes the Product resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Product identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_v2products_id_patch
      tags:
        - Product
      responses:
        '200':
          description: 'Product resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Product.jsonld-product.read'
            application/json:
              schema:
                $ref: '#/components/schemas/Product-product.read'
            text/html:
              schema:
                $ref: '#/components/schemas/Product-product.read'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the Product resource.'
      description: 'Updates the Product resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Product identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Product resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Product-product.write'
        required: true
      deprecated: false
  /api/product_attribute_assignments:
    get:
      operationId: api_product_attribute_assignments_get_collection
      tags:
        - ProductAttributeAssignment
      responses:
        '200':
          description: 'ProductAttributeAssignment collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/ProductAttributeAssignment.jsonld-paa.read' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductAttributeAssignment-paa.read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductAttributeAssignment-paa.read'
      summary: 'Retrieves the collection of ProductAttributeAssignment resources.'
      description: 'Retrieves the collection of ProductAttributeAssignment resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_product_attribute_assignments_post
      tags:
        - ProductAttributeAssignment
      responses:
        '201':
          description: 'ProductAttributeAssignment resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProductAttributeAssignment.jsonld-paa.read'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAttributeAssignment-paa.read'
            text/html:
              schema:
                $ref: '#/components/schemas/ProductAttributeAssignment-paa.read'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
      summary: 'Creates a ProductAttributeAssignment resource.'
      description: 'Creates a ProductAttributeAssignment resource.'
      parameters: []
      requestBody:
        description: 'The new ProductAttributeAssignment resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ProductAttributeAssignment.jsonld-paa.write'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductAttributeAssignment-paa.write'
          text/html:
            schema:
              $ref: '#/components/schemas/ProductAttributeAssignment-paa.write'
        required: true
      deprecated: false
  '/api/product_attribute_assignments/{id}':
    get:
      operationId: api_product_attribute_assignments_id_get
      tags:
        - ProductAttributeAssignment
      responses:
        '200':
          description: 'ProductAttributeAssignment resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProductAttributeAssignment.jsonld-paa.read'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAttributeAssignment-paa.read'
            text/html:
              schema:
                $ref: '#/components/schemas/ProductAttributeAssignment-paa.read'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a ProductAttributeAssignment resource.'
      description: 'Retrieves a ProductAttributeAssignment resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProductAttributeAssignment identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      operationId: api_product_attribute_assignments_id_delete
      tags:
        - ProductAttributeAssignment
      responses:
        '204':
          description: 'ProductAttributeAssignment resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the ProductAttributeAssignment resource.'
      description: 'Removes the ProductAttributeAssignment resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProductAttributeAssignment identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_product_attribute_assignments_id_patch
      tags:
        - ProductAttributeAssignment
      responses:
        '200':
          description: 'ProductAttributeAssignment resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProductAttributeAssignment.jsonld-paa.read'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAttributeAssignment-paa.read'
            text/html:
              schema:
                $ref: '#/components/schemas/ProductAttributeAssignment-paa.read'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the ProductAttributeAssignment resource.'
      description: 'Updates the ProductAttributeAssignment resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProductAttributeAssignment identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ProductAttributeAssignment resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ProductAttributeAssignment-paa.write'
        required: true
      deprecated: false
  /api/v2/product_images:
    get:
      operationId: api_v2product_images_get_collection
      tags:
        - ProductImage
      responses:
        '200':
          description: 'ProductImage collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/ProductImage.jsonld' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductImage'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductImage'
      summary: 'Retrieves the collection of ProductImage resources.'
      description: 'Retrieves the collection of ProductImage resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_v2product_images_post
      tags:
        - ProductImage
      responses:
        '201':
          description: 'ProductImage resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProductImage.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
            text/html:
              schema:
                $ref: '#/components/schemas/ProductImage'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
      summary: 'Creates a ProductImage resource.'
      description: 'Creates a ProductImage resource.'
      parameters: []
      requestBody:
        description: 'The new ProductImage resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ProductImage.jsonld-product.post'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductImage-product.post'
          text/html:
            schema:
              $ref: '#/components/schemas/ProductImage-product.post'
        required: true
      deprecated: false
  '/api/v2/product_images/{id}':
    get:
      operationId: api_v2product_images_id_get
      tags:
        - ProductImage
      responses:
        '200':
          description: 'ProductImage resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProductImage.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
            text/html:
              schema:
                $ref: '#/components/schemas/ProductImage'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a ProductImage resource.'
      description: 'Retrieves a ProductImage resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProductImage identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      operationId: api_v2product_images_id_delete
      tags:
        - ProductImage
      responses:
        '204':
          description: 'ProductImage resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the ProductImage resource.'
      description: 'Removes the ProductImage resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProductImage identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_v2product_images_id_patch
      tags:
        - ProductImage
      responses:
        '200':
          description: 'ProductImage resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProductImage.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
            text/html:
              schema:
                $ref: '#/components/schemas/ProductImage'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the ProductImage resource.'
      description: 'Updates the ProductImage resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProductImage identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ProductImage resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ProductImage-product.post'
        required: true
      deprecated: false
  /api/product_to_categories:
    get:
      operationId: api_product_to_categories_get_collection
      tags:
        - ProductToCategory
      responses:
        '200':
          description: 'ProductToCategory collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/ProductToCategory.jsonld-product.get' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductToCategory-product.get'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductToCategory-product.get'
      summary: 'Retrieves the collection of ProductToCategory resources.'
      description: 'Retrieves the collection of ProductToCategory resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
        -
          name: product
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'product[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: category
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'category[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: api_product_to_categories_post
      tags:
        - ProductToCategory
      responses:
        '201':
          description: 'ProductToCategory resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProductToCategory.jsonld-product.get'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductToCategory-product.get'
            text/html:
              schema:
                $ref: '#/components/schemas/ProductToCategory-product.get'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
      summary: 'Creates a ProductToCategory resource.'
      description: 'Creates a ProductToCategory resource.'
      parameters: []
      requestBody:
        description: 'The new ProductToCategory resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ProductToCategory.jsonld-product_category.post'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductToCategory-product_category.post'
          text/html:
            schema:
              $ref: '#/components/schemas/ProductToCategory-product_category.post'
        required: true
      deprecated: false
  '/api/product_to_categories/{id}':
    get:
      operationId: api_product_to_categories_id_get
      tags:
        - ProductToCategory
      responses:
        '200':
          description: 'ProductToCategory resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProductToCategory.jsonld-product.get'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductToCategory-product.get'
            text/html:
              schema:
                $ref: '#/components/schemas/ProductToCategory-product.get'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a ProductToCategory resource.'
      description: 'Retrieves a ProductToCategory resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProductToCategory identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      operationId: api_product_to_categories_id_delete
      tags:
        - ProductToCategory
      responses:
        '204':
          description: 'ProductToCategory resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the ProductToCategory resource.'
      description: 'Removes the ProductToCategory resource.'
      parameters:
        -
          name: id
          in: path
          description: 'ProductToCategory identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
  /api/admin/pvz-points:
    get:
      operationId: api_adminpvz-points_get_collection
      tags:
        - PvzPoints
      responses:
        '200':
          description: 'PvzPoints collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/PvzPoints.jsonld-pvzPoint.admin.get' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PvzPoints-pvzPoint.admin.get'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PvzPoints-pvzPoint.admin.get'
      summary: 'Retrieves the collection of PvzPoints resources.'
      description: 'Retrieves the collection of PvzPoints resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
        -
          name: pagination
          in: query
          description: 'Enable or disable pagination'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
        -
          name: city
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: cityFias.id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'cityFias.id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        -
          name: region
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
  '/api/admin/pvz-points/{id}':
    get:
      operationId: api_adminpvz-points_id_get
      tags:
        - PvzPoints
      responses:
        '200':
          description: 'PvzPoints resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PvzPoints.jsonld-pvzPoint.admin.get'
            application/json:
              schema:
                $ref: '#/components/schemas/PvzPoints-pvzPoint.admin.get'
            text/html:
              schema:
                $ref: '#/components/schemas/PvzPoints-pvzPoint.admin.get'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a PvzPoints resource.'
      description: 'Retrieves a PvzPoints resource.'
      parameters:
        -
          name: id
          in: path
          description: 'PvzPoints identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_adminpvz-points_id_put
      tags:
        - PvzPoints
      responses:
        '200':
          description: 'PvzPoints resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PvzPoints.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/PvzPoints'
            text/html:
              schema:
                $ref: '#/components/schemas/PvzPoints'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Replaces the PvzPoints resource.'
      description: 'Replaces the PvzPoints resource.'
      parameters:
        -
          name: id
          in: path
          description: 'PvzPoints identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated PvzPoints resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/PvzPoints.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/PvzPoints'
          text/html:
            schema:
              $ref: '#/components/schemas/PvzPoints'
        required: true
      deprecated: false
    delete:
      operationId: api_adminpvz-points_id_delete
      tags:
        - PvzPoints
      responses:
        '204':
          description: 'PvzPoints resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the PvzPoints resource.'
      description: 'Removes the PvzPoints resource.'
      parameters:
        -
          name: id
          in: path
          description: 'PvzPoints identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_adminpvz-points_id_patch
      tags:
        - PvzPoints
      responses:
        '200':
          description: 'PvzPoints resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PvzPoints.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/PvzPoints'
            text/html:
              schema:
                $ref: '#/components/schemas/PvzPoints'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the PvzPoints resource.'
      description: 'Updates the PvzPoints resource.'
      parameters:
        -
          name: id
          in: path
          description: 'PvzPoints identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated PvzPoints resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/PvzPoints'
        required: true
      deprecated: false
  /api/admin/pvz-prices:
    get:
      operationId: api_adminpvz-prices_get_collection
      tags:
        - PvzPrice
      responses:
        '200':
          description: 'PvzPrice collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/PvzPrice.jsonld-pvzPrice.admin.get' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PvzPrice-pvzPrice.admin.get'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PvzPrice-pvzPrice.admin.get'
      summary: 'Retrieves the collection of PvzPrice resources.'
      description: 'Retrieves the collection of PvzPrice resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
        -
          name: pagination
          in: query
          description: 'Enable or disable pagination'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
        -
          name: city
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: cityFias.id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'cityFias.id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        -
          name: region
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
  '/api/admin/pvz-prices/{id}':
    get:
      operationId: api_adminpvz-prices_id_get
      tags:
        - PvzPrice
      responses:
        '200':
          description: 'PvzPrice resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PvzPrice.jsonld-pvzPrice.admin.get'
            application/json:
              schema:
                $ref: '#/components/schemas/PvzPrice-pvzPrice.admin.get'
            text/html:
              schema:
                $ref: '#/components/schemas/PvzPrice-pvzPrice.admin.get'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a PvzPrice resource.'
      description: 'Retrieves a PvzPrice resource.'
      parameters:
        -
          name: id
          in: path
          description: 'PvzPrice identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_adminpvz-prices_id_put
      tags:
        - PvzPrice
      responses:
        '200':
          description: 'PvzPrice resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PvzPrice.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/PvzPrice'
            text/html:
              schema:
                $ref: '#/components/schemas/PvzPrice'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Replaces the PvzPrice resource.'
      description: 'Replaces the PvzPrice resource.'
      parameters:
        -
          name: id
          in: path
          description: 'PvzPrice identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated PvzPrice resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/PvzPrice.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/PvzPrice'
          text/html:
            schema:
              $ref: '#/components/schemas/PvzPrice'
        required: true
      deprecated: false
    delete:
      operationId: api_adminpvz-prices_id_delete
      tags:
        - PvzPrice
      responses:
        '204':
          description: 'PvzPrice resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the PvzPrice resource.'
      description: 'Removes the PvzPrice resource.'
      parameters:
        -
          name: id
          in: path
          description: 'PvzPrice identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_adminpvz-prices_id_patch
      tags:
        - PvzPrice
      responses:
        '200':
          description: 'PvzPrice resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PvzPrice.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/PvzPrice'
            text/html:
              schema:
                $ref: '#/components/schemas/PvzPrice'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the PvzPrice resource.'
      description: 'Updates the PvzPrice resource.'
      parameters:
        -
          name: id
          in: path
          description: 'PvzPrice identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated PvzPrice resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/PvzPrice'
        required: true
      deprecated: false
  /api/pvz_prices:
    get:
      operationId: api_pvz_prices_get_collection
      tags:
        - PvzPrice
      responses:
        '200':
          description: 'PvzPrice collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/PvzPrice.jsonld-pvzPrice.get' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PvzPrice-pvzPrice.get'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PvzPrice-pvzPrice.get'
      summary: 'Retrieves the collection of PvzPrice resources.'
      description: 'Retrieves the collection of PvzPrice resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
        -
          name: city
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: cityFias.id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'cityFias.id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        -
          name: region
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_pvz_prices_post
      tags:
        - PvzPrice
      responses:
        '201':
          description: 'PvzPrice resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PvzPrice.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/PvzPrice'
            text/html:
              schema:
                $ref: '#/components/schemas/PvzPrice'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
      summary: 'Creates a PvzPrice resource.'
      description: 'Creates a PvzPrice resource.'
      parameters: []
      requestBody:
        description: 'The new PvzPrice resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/PvzPrice.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/PvzPrice'
          text/html:
            schema:
              $ref: '#/components/schemas/PvzPrice'
        required: true
      deprecated: false
  '/api/pvz_prices/{id}':
    get:
      operationId: api_pvz_prices_id_get
      tags:
        - PvzPrice
      responses:
        '200':
          description: 'PvzPrice resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PvzPrice.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/PvzPrice'
            text/html:
              schema:
                $ref: '#/components/schemas/PvzPrice'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a PvzPrice resource.'
      description: 'Retrieves a PvzPrice resource.'
      parameters:
        -
          name: id
          in: path
          description: 'PvzPrice identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_pvz_prices_id_put
      tags:
        - PvzPrice
      responses:
        '200':
          description: 'PvzPrice resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PvzPrice.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/PvzPrice'
            text/html:
              schema:
                $ref: '#/components/schemas/PvzPrice'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Replaces the PvzPrice resource.'
      description: 'Replaces the PvzPrice resource.'
      parameters:
        -
          name: id
          in: path
          description: 'PvzPrice identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated PvzPrice resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/PvzPrice.jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/PvzPrice'
          text/html:
            schema:
              $ref: '#/components/schemas/PvzPrice'
        required: true
      deprecated: false
    delete:
      operationId: api_pvz_prices_id_delete
      tags:
        - PvzPrice
      responses:
        '204':
          description: 'PvzPrice resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the PvzPrice resource.'
      description: 'Removes the PvzPrice resource.'
      parameters:
        -
          name: id
          in: path
          description: 'PvzPrice identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_pvz_prices_id_patch
      tags:
        - PvzPrice
      responses:
        '200':
          description: 'PvzPrice resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PvzPrice.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/PvzPrice'
            text/html:
              schema:
                $ref: '#/components/schemas/PvzPrice'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the PvzPrice resource.'
      description: 'Updates the PvzPrice resource.'
      parameters:
        -
          name: id
          in: path
          description: 'PvzPrice identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated PvzPrice resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/PvzPrice'
        required: true
      deprecated: false
  /api/admin/settings:
    get:
      operationId: api_adminsettings_get_collection
      tags:
        - Settings
      responses:
        '200':
          description: 'Settings collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/Settings.jsonld-settings.admin.get' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Settings-settings.admin.get'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Settings-settings.admin.get'
      summary: 'Retrieves the collection of Settings resources.'
      description: 'Retrieves the collection of Settings resources.'
      parameters: []
      deprecated: false
    post:
      operationId: api_adminsettings_post
      tags:
        - Settings
      responses:
        '201':
          description: 'Settings resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Settings.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
            text/html:
              schema:
                $ref: '#/components/schemas/Settings'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
      summary: 'Creates a Settings resource.'
      description: 'Creates a Settings resource.'
      parameters: []
      requestBody:
        description: 'The new Settings resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Settings.jsonld-settings.admin.write'
          application/json:
            schema:
              $ref: '#/components/schemas/Settings-settings.admin.write'
          text/html:
            schema:
              $ref: '#/components/schemas/Settings-settings.admin.write'
        required: true
      deprecated: false
  '/api/admin/settings/{id}':
    get:
      operationId: api_adminsettings_id_get
      tags:
        - Settings
      responses:
        '200':
          description: 'Settings resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Settings.jsonld-settings.admin.get'
            application/json:
              schema:
                $ref: '#/components/schemas/Settings-settings.admin.get'
            text/html:
              schema:
                $ref: '#/components/schemas/Settings-settings.admin.get'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a Settings resource.'
      description: 'Retrieves a Settings resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Settings identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: api_adminsettings_id_put
      tags:
        - Settings
      responses:
        '200':
          description: 'Settings resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Settings.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
            text/html:
              schema:
                $ref: '#/components/schemas/Settings'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Replaces the Settings resource.'
      description: 'Replaces the Settings resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Settings identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Settings resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Settings.jsonld-settings.admin.write'
          application/json:
            schema:
              $ref: '#/components/schemas/Settings-settings.admin.write'
          text/html:
            schema:
              $ref: '#/components/schemas/Settings-settings.admin.write'
        required: true
      deprecated: false
    delete:
      operationId: api_adminsettings_id_delete
      tags:
        - Settings
      responses:
        '204':
          description: 'Settings resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the Settings resource.'
      description: 'Removes the Settings resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Settings identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_adminsettings_id_patch
      tags:
        - Settings
      responses:
        '200':
          description: 'Settings resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Settings.jsonld'
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
            text/html:
              schema:
                $ref: '#/components/schemas/Settings'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the Settings resource.'
      description: 'Updates the Settings resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Settings identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Settings resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Settings-settings.admin.write'
        required: true
      deprecated: false
  /api/users:
    get:
      operationId: api_users_get_collection
      tags:
        - User
      responses:
        '200':
          description: 'User collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  member: { type: array, items: { $ref: '#/components/schemas/User.jsonld-user.get' } }
                  totalItems: { type: integer, minimum: 0 }
                  view: { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, first: { type: string, format: iri-reference }, last: { type: string, format: iri-reference }, previous: { type: string, format: iri-reference }, next: { type: string, format: iri-reference } }, example: { '@id': string, type: string, first: string, last: string, previous: string, next: string } }
                  search: { type: object, properties: { '@type': { type: string }, template: { type: string }, variableRepresentation: { type: string }, mapping: { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: [string, 'null'] }, required: { type: boolean } } } } } }
                required:
                  - member
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-user.get'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-user.get'
      summary: 'Retrieves the collection of User resources.'
      description: 'Retrieves the collection of User resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: itemsPerPage
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 5
            minimum: 0
            maximum: 100
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: api_users_post
      tags:
        - User
      responses:
        '201':
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-user.get'
            application/json:
              schema:
                $ref: '#/components/schemas/User-user.get'
            text/html:
              schema:
                $ref: '#/components/schemas/User-user.get'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
      summary: 'Creates a User resource.'
      description: 'Creates a User resource.'
      parameters: []
      requestBody:
        description: 'The new User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld-user.post'
          application/json:
            schema:
              $ref: '#/components/schemas/User-user.post'
          text/html:
            schema:
              $ref: '#/components/schemas/User-user.post'
        required: true
      deprecated: false
  '/api/users/{id}':
    get:
      operationId: api_users_id_get
      tags:
        - User
      responses:
        '200':
          description: 'User resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-user.get'
            application/json:
              schema:
                $ref: '#/components/schemas/User-user.get'
            text/html:
              schema:
                $ref: '#/components/schemas/User-user.get'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    delete:
      operationId: api_users_id_delete
      tags:
        - User
      responses:
        '204':
          description: 'User resource deleted'
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Removes the User resource.'
      description: 'Removes the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: api_users_id_patch
      tags:
        - User
      responses:
        '200':
          description: 'User resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-user.get'
            application/json:
              schema:
                $ref: '#/components/schemas/User-user.get'
            text/html:
              schema:
                $ref: '#/components/schemas/User-user.get'
          links: {  }
        '400':
          description: 'Invalid input'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
        '422':
          description: 'An error occurred'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation.jsonld-jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
            application/json:
              schema:
                $ref: '#/components/schemas/ConstraintViolation-json'
          links: {  }
        '404':
          description: 'Not found'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Error.jsonld'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          links: {  }
      summary: 'Updates the User resource.'
      description: 'Updates the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'User identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated User resource'
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/User-user.patch'
        required: true
      deprecated: false
components:
  schemas:
    Attribute-attribute.get:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 255
          type:
            - string
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        showInCategory:
          type:
            - boolean
            - 'null'
        shortName:
          type:
            - string
            - 'null'
        attributeGroup:
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        code:
          type:
            - string
            - 'null'
    Attribute-attribute.patch:
      type: object
      description: ''
      deprecated: false
      properties:
        name:
          maxLength: 255
          type:
            - string
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        attributeGroup:
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        code:
          type:
            - string
            - 'null'
    Attribute-attribute.post:
      type: object
      description: ''
      deprecated: false
      properties:
        name:
          maxLength: 255
          type:
            - string
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        attributeGroup:
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        code:
          type:
            - string
            - 'null'
    Attribute-attribute_group.get:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 255
          type:
            - string
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        showInCategory:
          type:
            - boolean
            - 'null'
        shortName:
          type:
            - string
            - 'null'
    Attribute.jsonld-attribute.get:
      type: object
      description: ''
      deprecated: false
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 255
          type:
            - string
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        showInCategory:
          type:
            - boolean
            - 'null'
        shortName:
          type:
            - string
            - 'null'
        attributeGroup:
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        code:
          type:
            - string
            - 'null'
    Attribute.jsonld-attribute.post:
      type: object
      description: ''
      deprecated: false
      properties:
        name:
          maxLength: 255
          type:
            - string
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        attributeGroup:
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        code:
          type:
            - string
            - 'null'
    Attribute.jsonld-attribute_group.get:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 255
          type:
            - string
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        showInCategory:
          type:
            - boolean
            - 'null'
        shortName:
          type:
            - string
            - 'null'
    AttributeGroup-attribute_group.get:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 255
          type:
            - string
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        code:
          type:
            - string
            - 'null'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute-attribute_group.get'
    AttributeGroup-attribute_group.patch:
      type: object
      description: ''
      deprecated: false
      properties:
        name:
          maxLength: 255
          type:
            - string
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        code:
          type:
            - string
            - 'null'
    AttributeGroup-attribute_group.post:
      type: object
      description: ''
      deprecated: false
      properties:
        name:
          maxLength: 255
          type:
            - string
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        code:
          type:
            - string
            - 'null'
    AttributeGroup.jsonld-attribute_group.get:
      type: object
      description: ''
      deprecated: false
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 255
          type:
            - string
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        code:
          type:
            - string
            - 'null'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute.jsonld-attribute_group.get'
    AttributeGroup.jsonld-attribute_group.post:
      type: object
      description: ''
      deprecated: false
      properties:
        name:
          maxLength: 255
          type:
            - string
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        code:
          type:
            - string
            - 'null'
    Carousel-carousel.get:
      type: object
      description: 'не хватает attributes={"order"={"sort": "ASC"}}'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 255
          type: string
        productsId:
          type:
            - array
            - 'null'
          items:
            type: string
        product:
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        sort:
          type:
            - integer
            - 'null'
        place:
          maxLength: 255
          type:
            - string
            - 'null'
    Carousel-carousel.patch:
      type: object
      description: 'не хватает attributes={"order"={"sort": "ASC"}}'
      deprecated: false
      properties:
        name:
          maxLength: 255
          type: string
        productsId:
          type:
            - array
            - 'null'
          items:
            type: string
        product:
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        sort:
          type:
            - integer
            - 'null'
        place:
          maxLength: 255
          type:
            - string
            - 'null'
    Carousel.jsonld-carousel.get:
      type: object
      description: 'не хватает attributes={"order"={"sort": "ASC"}}'
      deprecated: false
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 255
          type: string
        productsId:
          type:
            - array
            - 'null'
          items:
            type: string
        product:
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        sort:
          type:
            - integer
            - 'null'
        place:
          maxLength: 255
          type:
            - string
            - 'null'
    Category:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 255
          type:
            - string
            - 'null'
        slug:
          type:
            - string
            - 'null'
        visibility:
          type:
            - boolean
            - 'null'
        parentCategoryId:
          type:
            - integer
            - 'null'
        metaTitle:
          type:
            - string
            - 'null'
        metaDescription:
          type:
            - string
            - 'null'
        metaKeywords:
          type:
            - string
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        metaH1:
          type:
            - string
            - 'null'
        description:
          type:
            - string
            - 'null'
        navbarVisibility:
          type:
            - boolean
            - 'null'
        footerVisibility:
          type:
            - boolean
            - 'null'
        product:
          type: array
          items:
            type: string
            format: iri-reference
            example: 'https://example.com/'
    Category.jsonld:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 255
          type:
            - string
            - 'null'
        slug:
          type:
            - string
            - 'null'
        visibility:
          type:
            - boolean
            - 'null'
        parentCategoryId:
          type:
            - integer
            - 'null'
        metaTitle:
          type:
            - string
            - 'null'
        metaDescription:
          type:
            - string
            - 'null'
        metaKeywords:
          type:
            - string
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        metaH1:
          type:
            - string
            - 'null'
        description:
          type:
            - string
            - 'null'
        navbarVisibility:
          type:
            - boolean
            - 'null'
        footerVisibility:
          type:
            - boolean
            - 'null'
        product:
          type: array
          items:
            type: string
            format: iri-reference
            example: 'https://example.com/'
    City:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        address:
          type:
            - string
            - 'null'
        postalCode:
          type:
            - string
            - 'null'
        federalDistrict:
          type:
            - string
            - 'null'
        regionType:
          type:
            - string
            - 'null'
        region:
          type:
            - string
            - 'null'
        cityType:
          type:
            - string
            - 'null'
        city:
          type:
            - string
            - 'null'
        kladrId:
          type:
            - string
            - 'null'
        fiasLevel:
          type:
            - integer
            - 'null'
        capitalMarker:
          type:
            - integer
            - 'null'
        geoLat:
          type:
            - number
            - 'null'
        geoLon:
          type:
            - number
            - 'null'
        population:
          type:
            - string
            - 'null'
    City-city.get:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        address:
          type:
            - string
            - 'null'
        city:
          type:
            - string
            - 'null'
        kladrId:
          type:
            - string
            - 'null'
    City.jsonld:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        address:
          type:
            - string
            - 'null'
        postalCode:
          type:
            - string
            - 'null'
        federalDistrict:
          type:
            - string
            - 'null'
        regionType:
          type:
            - string
            - 'null'
        region:
          type:
            - string
            - 'null'
        cityType:
          type:
            - string
            - 'null'
        city:
          type:
            - string
            - 'null'
        kladrId:
          type:
            - string
            - 'null'
        fiasLevel:
          type:
            - integer
            - 'null'
        capitalMarker:
          type:
            - integer
            - 'null'
        geoLat:
          type:
            - number
            - 'null'
        geoLon:
          type:
            - number
            - 'null'
        population:
          type:
            - string
            - 'null'
    City.jsonld-city.get:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        address:
          type:
            - string
            - 'null'
        city:
          type:
            - string
            - 'null'
        kladrId:
          type:
            - string
            - 'null'
    CityModal-cityModal.get:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        fiasId:
          type:
            - string
            - 'null'
        name:
          type: string
        sort:
          type: integer
    CityModal.jsonld-cityModal.get:
      type: object
      description: ''
      deprecated: false
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        fiasId:
          type:
            - string
            - 'null'
        name:
          type: string
        sort:
          type: integer
    ConstraintViolation-json:
      type: object
      description: 'Unprocessable entity'
      deprecated: false
      properties:
        status:
          default: 422
          example: 422
          type: integer
        violations:
          type: array
          items:
            type: object
            properties:
              propertyPath:
                type: string
                description: 'The property path of the violation'
              message:
                type: string
                description: 'The message associated with the violation'
        detail:
          readOnly: true
          type: string
        type:
          readOnly: true
          type: string
        title:
          readOnly: true
          type:
            - string
            - 'null'
        instance:
          readOnly: true
          type:
            - string
            - 'null'
    ConstraintViolation.jsonld-jsonld:
      type: object
      description: 'Unprocessable entity'
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        status:
          default: 422
          example: 422
          type: integer
        violations:
          type: array
          items:
            type: object
            properties:
              propertyPath:
                type: string
                description: 'The property path of the violation'
              message:
                type: string
                description: 'The message associated with the violation'
        detail:
          readOnly: true
          type: string
        description:
          readOnly: true
          type: string
        type:
          readOnly: true
          type: string
        title:
          readOnly: true
          type:
            - string
            - 'null'
        instance:
          readOnly: true
          type:
            - string
            - 'null'
    DeliveryType:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        code:
          type: string
        active:
          default: true
          example: true
          type: boolean
        sortOrder:
          default: 0
          example: 0
          type: integer
        default:
          default: false
          example: false
          type: boolean
    DeliveryType.jsonld:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        name:
          type: string
        code:
          type: string
        active:
          default: true
          example: true
          type: boolean
        sortOrder:
          default: 0
          example: 0
          type: integer
        default:
          default: false
          example: false
          type: boolean
    Error:
      type: object
      description: 'A representation of common errors.'
      deprecated: false
      properties:
        title:
          readOnly: true
          description: 'A short, human-readable summary of the problem.'
          type: string
        detail:
          readOnly: true
          description: 'A human-readable explanation specific to this occurrence of the problem.'
          type: string
        status:
          type: number
          examples:
            - 404
          default: 400
        instance:
          readOnly: true
          description: 'A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.'
          type:
            - string
            - 'null'
        type:
          readOnly: true
          description: 'A URI reference that identifies the problem type'
          type: string
    Error.jsonld:
      type: object
      description: 'A representation of common errors.'
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        title:
          readOnly: true
          description: 'A short, human-readable summary of the problem.'
          type: string
        detail:
          readOnly: true
          description: 'A human-readable explanation specific to this occurrence of the problem.'
          type: string
        status:
          type: number
          examples:
            - 404
          default: 400
        instance:
          readOnly: true
          description: 'A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.'
          type:
            - string
            - 'null'
        type:
          readOnly: true
          description: 'A URI reference that identifies the problem type'
          type: string
        description:
          readOnly: true
          type:
            - string
            - 'null'
    Fias-fias.admin.get:
      type: object
      description: 'FIAS (Федеральная Информационная Адресная Система)'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        parentId:
          type: integer
        postalcode:
          type:
            - string
            - 'null'
        offname:
          type:
            - string
            - 'null'
        shortname:
          type:
            - string
            - 'null'
        level:
          type: integer
    Fias-fias.get:
      type: object
      description: 'FIAS (Федеральная Информационная Адресная Система)'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        postalcode:
          type:
            - string
            - 'null'
        offname:
          type:
            - string
            - 'null'
        shortname:
          type:
            - string
            - 'null'
    Fias-order.get:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        offname:
          type:
            - string
            - 'null'
        shortname:
          type:
            - string
            - 'null'
    Fias-pvzPoint.admin.get:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        offname:
          type:
            - string
            - 'null'
        shortname:
          type:
            - string
            - 'null'
    Fias-pvzPrice.admin.get:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        offname:
          type:
            - string
            - 'null'
        shortname:
          type:
            - string
            - 'null'
    Fias.jsonld-fias.admin.get:
      type: object
      description: 'FIAS (Федеральная Информационная Адресная Система)'
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        parentId:
          type: integer
        postalcode:
          type:
            - string
            - 'null'
        offname:
          type:
            - string
            - 'null'
        shortname:
          type:
            - string
            - 'null'
        level:
          type: integer
    Fias.jsonld-fias.get:
      type: object
      description: 'FIAS (Федеральная Информационная Адресная Система)'
      deprecated: false
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        postalcode:
          type:
            - string
            - 'null'
        offname:
          type:
            - string
            - 'null'
        shortname:
          type:
            - string
            - 'null'
    Fias.jsonld-order.get:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        offname:
          type:
            - string
            - 'null'
        shortname:
          type:
            - string
            - 'null'
    Fias.jsonld-pvzPoint.admin.get:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        offname:
          type:
            - string
            - 'null'
        shortname:
          type:
            - string
            - 'null'
    Fias.jsonld-pvzPrice.admin.get:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        offname:
          type:
            - string
            - 'null'
        shortname:
          type:
            - string
            - 'null'
    Manufacturer-product.create:
      type: object
      description: ''
      deprecated: false
    Manufacturer-product.update:
      type: object
      description: ''
      deprecated: false
    Manufacturer.jsonld-product.create:
      type: object
      description: ''
      deprecated: false
    Option-options_only.get:
      type: object
      description: 'не хватает attributes={"order"={"sortOrder": "ASC"}}'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        sortOrder:
          type: integer
        code:
          type:
            - string
            - 'null'
    Option-options_only.getCollection:
      type: object
      description: 'не хватает attributes={"order"={"sortOrder": "ASC"}}'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        sortOrder:
          type: integer
        code:
          type:
            - string
            - 'null'
        optionValues:
          type: array
          items:
            $ref: '#/components/schemas/OptionValue-options_only.getCollection'
    Option-options_only.patch:
      type: object
      description: 'не хватает attributes={"order"={"sortOrder": "ASC"}}'
      deprecated: false
      properties:
        name:
          type: string
        sortOrder:
          type: integer
        code:
          type:
            - string
            - 'null'
    Option-options_only.post:
      type: object
      description: 'не хватает attributes={"order"={"sortOrder": "ASC"}}'
      deprecated: false
      properties:
        name:
          type: string
        sortOrder:
          type: integer
        code:
          type:
            - string
            - 'null'
    Option.jsonld-options_only.get:
      type: object
      description: 'не хватает attributes={"order"={"sortOrder": "ASC"}}'
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        name:
          type: string
        sortOrder:
          type: integer
        code:
          type:
            - string
            - 'null'
    Option.jsonld-options_only.getCollection:
      type: object
      description: 'не хватает attributes={"order"={"sortOrder": "ASC"}}'
      deprecated: false
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        id:
          readOnly: true
          type: integer
        name:
          type: string
        sortOrder:
          type: integer
        code:
          type:
            - string
            - 'null'
        optionValues:
          type: array
          items:
            $ref: '#/components/schemas/OptionValue.jsonld-options_only.getCollection'
    Option.jsonld-options_only.post:
      type: object
      description: 'не хватает attributes={"order"={"sortOrder": "ASC"}}'
      deprecated: false
      properties:
        name:
          type: string
        sortOrder:
          type: integer
        code:
          type:
            - string
            - 'null'
    OptionValue:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        value:
          type: string
        sortOrder:
          type: integer
        code:
          type:
            - string
            - 'null'
        optionType:
          type: string
          format: iri-reference
          example: 'https://example.com/'
    OptionValue-options_only.getCollection:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        value:
          type: string
        sortOrder:
          type: integer
        code:
          type:
            - string
            - 'null'
    OptionValue.jsonld:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        value:
          type: string
        sortOrder:
          type: integer
        code:
          type:
            - string
            - 'null'
        optionType:
          type: string
          format: iri-reference
          example: 'https://example.com/'
    OptionValue.jsonld-options_only.getCollection:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        value:
          type: string
        sortOrder:
          type: integer
        code:
          type:
            - string
            - 'null'
    Order-order.get:
      type: object
      description: 'не хватает attributes={"order"={"dateAdded": "DESC"}}'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        orderId:
          type: integer
        dateAdded:
          readOnly: true
          type: string
          format: date-time
        comment:
          type:
            - string
            - 'null'
        products:
          type: array
          items:
            $ref: '#/components/schemas/OrderProducts-order.get'
        customer:
          anyOf:
            -
              $ref: '#/components/schemas/OrderCustomer-order.get'
            -
              type: 'null'
        delivery:
          anyOf:
            -
              $ref: '#/components/schemas/OrderDelivery-order.get'
            -
              type: 'null'
        status:
          type:
            - integer
            - 'null'
        total:
          type:
            - integer
            - 'null'
    Order-order.patch:
      type: object
      description: 'не хватает attributes={"order"={"dateAdded": "DESC"}}'
      deprecated: false
      properties:
        status:
          type:
            - integer
            - 'null'
    Order.jsonld-order.get:
      type: object
      description: 'не хватает attributes={"order"={"dateAdded": "DESC"}}'
      deprecated: false
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        id:
          readOnly: true
          type: integer
        orderId:
          type: integer
        dateAdded:
          readOnly: true
          type: string
          format: date-time
        comment:
          type:
            - string
            - 'null'
        products:
          type: array
          items:
            $ref: '#/components/schemas/OrderProducts.jsonld-order.get'
        customer:
          anyOf:
            -
              $ref: '#/components/schemas/OrderCustomer.jsonld-order.get'
            -
              type: 'null'
        delivery:
          anyOf:
            -
              $ref: '#/components/schemas/OrderDelivery.jsonld-order.get'
            -
              type: 'null'
        status:
          type:
            - integer
            - 'null'
        total:
          type:
            - integer
            - 'null'
    OrderCustomer:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type:
            - string
            - 'null'
        phone:
          type:
            - string
            - 'null'
        email:
          type:
            - string
            - 'null'
        ip:
          type:
            - string
            - 'null'
        userAgent:
          type:
            - string
            - 'null'
        orders:
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        phoneNormal:
          type:
            - string
            - 'null'
        comment:
          type:
            - string
            - 'null'
      required:
        - name
        - phone
    OrderCustomer-order.get:
      type: object
      description: ''
      deprecated: false
      required:
        - name
        - phone
      properties:
        name:
          type:
            - string
            - 'null'
        phone:
          type:
            - string
            - 'null'
        email:
          type:
            - string
            - 'null'
        ip:
          type:
            - string
            - 'null'
        userAgent:
          type:
            - string
            - 'null'
        comment:
          type:
            - string
            - 'null'
    OrderCustomer-orderCustomer.get:
      type: object
      description: ''
      deprecated: false
      required:
        - name
        - phone
      properties:
        name:
          type:
            - string
            - 'null'
        phone:
          type:
            - string
            - 'null'
        email:
          type:
            - string
            - 'null'
        ip:
          type:
            - string
            - 'null'
        userAgent:
          type:
            - string
            - 'null'
        comment:
          type:
            - string
            - 'null'
    OrderCustomer.jsonld:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type:
            - string
            - 'null'
        phone:
          type:
            - string
            - 'null'
        email:
          type:
            - string
            - 'null'
        ip:
          type:
            - string
            - 'null'
        userAgent:
          type:
            - string
            - 'null'
        orders:
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        phoneNormal:
          type:
            - string
            - 'null'
        comment:
          type:
            - string
            - 'null'
      required:
        - name
        - phone
    OrderCustomer.jsonld-order.get:
      type: object
      description: ''
      deprecated: false
      required:
        - name
        - phone
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          type:
            - string
            - 'null'
        phone:
          type:
            - string
            - 'null'
        email:
          type:
            - string
            - 'null'
        ip:
          type:
            - string
            - 'null'
        userAgent:
          type:
            - string
            - 'null'
        comment:
          type:
            - string
            - 'null'
    OrderCustomer.jsonld-orderCustomer.get:
      type: object
      description: ''
      deprecated: false
      required:
        - name
        - phone
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          type:
            - string
            - 'null'
        phone:
          type:
            - string
            - 'null'
        email:
          type:
            - string
            - 'null'
        ip:
          type:
            - string
            - 'null'
        userAgent:
          type:
            - string
            - 'null'
        comment:
          type:
            - string
            - 'null'
    OrderDelivery:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        type:
          type:
            - string
            - 'null'
        address:
          type:
            - string
            - 'null'
        city:
          type:
            - string
            - 'null'
        cityFias:
          description: 'FK на FIAS. Необязательный, оставляем строковый city для БК совместимости.'
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        cost:
          type:
            - integer
            - 'null'
        orders:
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        pvz:
          type:
            - string
            - 'null'
        isFree:
          default: false
          example: false
          type: boolean
        isCustomCalculate:
          default: false
          example: false
          type: boolean
        pricingSource:
          type:
            - string
            - 'null'
        pricingTrace:
          type:
            - array
            - 'null'
          items:
            type: string
        pvzCode:
          type:
            - string
            - 'null'
        delivery_date:
          type:
            - string
            - 'null'
          format: date-time
        delivery_time:
          type:
            - string
            - 'null'
          format: date-time
        cityId:
          readOnly: true
          type:
            - integer
            - 'null'
        deliveryDate:
          type:
            - string
            - 'null'
          format: date-time
        deliveryTime:
          type:
            - string
            - 'null'
          format: date-time
    OrderDelivery-order.get:
      type: object
      description: ''
      deprecated: false
      properties:
        type:
          type:
            - string
            - 'null'
        address:
          type:
            - string
            - 'null'
        city:
          type:
            - string
            - 'null'
        cityFias:
          description: 'FK на FIAS. Необязательный, оставляем строковый city для БК совместимости.'
          anyOf:
            -
              $ref: '#/components/schemas/Fias-order.get'
            -
              type: 'null'
        cost:
          type:
            - integer
            - 'null'
        pvz:
          type:
            - string
            - 'null'
        isFree:
          default: false
          example: false
          type: boolean
        isCustomCalculate:
          default: false
          example: false
          type: boolean
        pricingSource:
          type:
            - string
            - 'null'
        pricingTrace:
          type:
            - array
            - 'null'
          items:
            type: string
        cityId:
          readOnly: true
          type:
            - integer
            - 'null'
    OrderDelivery.jsonld:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        type:
          type:
            - string
            - 'null'
        address:
          type:
            - string
            - 'null'
        city:
          type:
            - string
            - 'null'
        cityFias:
          description: 'FK на FIAS. Необязательный, оставляем строковый city для БК совместимости.'
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        cost:
          type:
            - integer
            - 'null'
        orders:
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        pvz:
          type:
            - string
            - 'null'
        isFree:
          default: false
          example: false
          type: boolean
        isCustomCalculate:
          default: false
          example: false
          type: boolean
        pricingSource:
          type:
            - string
            - 'null'
        pricingTrace:
          type:
            - array
            - 'null'
          items:
            type: string
        pvzCode:
          type:
            - string
            - 'null'
        delivery_date:
          type:
            - string
            - 'null'
          format: date-time
        delivery_time:
          type:
            - string
            - 'null'
          format: date-time
        cityId:
          readOnly: true
          type:
            - integer
            - 'null'
        deliveryDate:
          type:
            - string
            - 'null'
          format: date-time
        deliveryTime:
          type:
            - string
            - 'null'
          format: date-time
    OrderDelivery.jsonld-order.get:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        type:
          type:
            - string
            - 'null'
        address:
          type:
            - string
            - 'null'
        city:
          type:
            - string
            - 'null'
        cityFias:
          description: 'FK на FIAS. Необязательный, оставляем строковый city для БК совместимости.'
          anyOf:
            -
              $ref: '#/components/schemas/Fias.jsonld-order.get'
            -
              type: 'null'
        cost:
          type:
            - integer
            - 'null'
        pvz:
          type:
            - string
            - 'null'
        isFree:
          default: false
          example: false
          type: boolean
        isCustomCalculate:
          default: false
          example: false
          type: boolean
        pricingSource:
          type:
            - string
            - 'null'
        pricingTrace:
          type:
            - array
            - 'null'
          items:
            type: string
        cityId:
          readOnly: true
          type:
            - integer
            - 'null'
    OrderProductOptions:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        product_id:
          type:
            - integer
            - 'null'
        optionName:
          type:
            - string
            - 'null'
        value:
          type: array
          items:
            type: string
        price:
          type:
            - integer
            - 'null'
        product:
          type: string
          format: iri-reference
          example: 'https://example.com/'
        productId:
          type:
            - integer
            - 'null'
    OrderProductOptions-order.get:
      type: object
      description: ''
      deprecated: false
      properties:
        optionName:
          type:
            - string
            - 'null'
        value:
          type: array
          items:
            type: string
        price:
          type:
            - integer
            - 'null'
    OrderProductOptions.jsonld:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        product_id:
          type:
            - integer
            - 'null'
        optionName:
          type:
            - string
            - 'null'
        value:
          type: array
          items:
            type: string
        price:
          type:
            - integer
            - 'null'
        product:
          type: string
          format: iri-reference
          example: 'https://example.com/'
        productId:
          type:
            - integer
            - 'null'
    OrderProductOptions.jsonld-order.get:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        optionName:
          type:
            - string
            - 'null'
        value:
          type: array
          items:
            type: string
        price:
          type:
            - integer
            - 'null'
    OrderProducts:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        product_id:
          type: integer
        product_name:
          type: string
        price:
          type:
            - integer
            - 'null'
        quantity:
          type: integer
        orders:
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        options:
          type: array
          items:
            type: string
            format: iri-reference
            example: 'https://example.com/'
        salePrice:
          type:
            - integer
            - 'null'
        productId:
          type: integer
        productName:
          type: string
    OrderProducts-order.get:
      type: object
      description: ''
      deprecated: false
      properties:
        product_id:
          type: integer
        product_name:
          type: string
        price:
          type:
            - integer
            - 'null'
        quantity:
          type: integer
        options:
          type: array
          items:
            $ref: '#/components/schemas/OrderProductOptions-order.get'
        salePrice:
          type:
            - integer
            - 'null'
    OrderProducts.jsonld:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        product_id:
          type: integer
        product_name:
          type: string
        price:
          type:
            - integer
            - 'null'
        quantity:
          type: integer
        orders:
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        options:
          type: array
          items:
            type: string
            format: iri-reference
            example: 'https://example.com/'
        salePrice:
          type:
            - integer
            - 'null'
        productId:
          type: integer
        productName:
          type: string
    OrderProducts.jsonld-order.get:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        product_id:
          type: integer
        product_name:
          type: string
        price:
          type:
            - integer
            - 'null'
        quantity:
          type: integer
        options:
          type: array
          items:
            $ref: '#/components/schemas/OrderProductOptions.jsonld-order.get'
        salePrice:
          type:
            - integer
            - 'null'
    OrderStatus:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        sort:
          type: integer
    OrderStatus-orderStatus.admin.get:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        sort:
          type: integer
    OrderStatus-orderStatus.patch:
      type: object
      description: ''
      deprecated: false
      properties:
        name:
          type: string
        sort:
          type: integer
    OrderStatus-orderStatus.post:
      type: object
      description: ''
      deprecated: false
      properties:
        name:
          type: string
        sort:
          type: integer
    OrderStatus.jsonld:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        name:
          type: string
        sort:
          type: integer
    OrderStatus.jsonld-orderStatus.admin.get:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        name:
          type: string
        sort:
          type: integer
    OrderStatus.jsonld-orderStatus.post:
      type: object
      description: ''
      deprecated: false
      properties:
        name:
          type: string
        sort:
          type: integer
    Product-product.create:
      type: object
      description: ''
      deprecated: false
      required:
        - name
      properties:
        name:
          type: string
        slug:
          type:
            - string
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        manufacturerRef:
          anyOf:
            -
              $ref: '#/components/schemas/Manufacturer-product.create'
            -
              type: 'null'
        status:
          default: false
          example: false
          type: boolean
        type:
          default: simple
          example: simple
          type: string
        quantity:
          type:
            - integer
            - 'null'
        category:
          type: array
          items:
            type: string
            format: iri-reference
            example: 'https://example.com/'
        image:
          type: array
          items:
            type: string
            format: iri-reference
            example: 'https://example.com/'
        optionsJson:
          type:
            - array
            - 'null'
          items:
            type: string
        attributeJson:
          type:
            - array
            - 'null'
          items:
            type: string
        carousels:
          type: array
          items:
            type: string
            format: iri-reference
            example: 'https://example.com/'
        optionAssignments:
          type: array
          items:
            $ref: '#/components/schemas/ProductOptionValueAssignment-product.create'
        attributeAssignments:
          type: array
          items:
            type: string
            format: iri-reference
            example: 'https://example.com/'
        metaTitle:
          type:
            - string
            - 'null'
        metaDescription:
          type:
            - string
            - 'null'
        metaKeywords:
          type:
            - string
            - 'null'
        metaH1:
          type:
            - string
            - 'null'
    Product-product.list:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 255
          type: string
        slug:
          maxLength: 255
          type:
            - string
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        effectivePrice:
          type:
            - integer
            - 'null'
        status:
          default: false
          example: false
          type: boolean
        type:
          enum:
            - simple
            - variable
          default: simple
          example: simple
          type: string
        metaTitle:
          type:
            - string
            - 'null'
        metaDescription:
          type:
            - string
            - 'null'
        metaKeywords:
          type:
            - string
            - 'null'
        metaH1:
          type:
            - string
            - 'null'
      required:
        - type
    Product-product.read:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          type:
            - integer
            - 'null'
        code:
          type:
            - string
            - 'null'
        name:
          type:
            - string
            - 'null'
        slug:
          type:
            - string
            - 'null'
        price:
          type:
            - integer
            - 'null'
        salePrice:
          type:
            - integer
            - 'null'
        effectivePrice:
          type:
            - integer
            - 'null'
        status:
          type:
            - boolean
            - 'null'
        quantity:
          type:
            - integer
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        type:
          type:
            - string
            - 'null'
        description:
          type:
            - string
            - 'null'
        metaTitle:
          type:
            - string
            - 'null'
        metaDescription:
          type:
            - string
            - 'null'
        metaKeywords:
          type:
            - string
            - 'null'
        h1:
          type:
            - string
            - 'null'
        manufacturerId:
          type:
            - integer
            - 'null'
        manufacturerName:
          type:
            - string
            - 'null'
        image:
          type: array
          items:
            type: string
        firstImageUrl:
          type:
            - string
            - 'null'
        createdAt:
          type:
            - string
            - 'null'
          format: date-time
        categoryNames:
          type: array
          items:
            type: string
        optionsJson:
          type:
            - array
            - 'null'
          items:
            type: string
        optionAssignments:
          type:
            - array
            - 'null'
          items:
            type: string
    Product-product.update:
      type: object
      description: ''
      deprecated: false
      properties:
        name:
          type: string
        slug:
          type:
            - string
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        manufacturerRef:
          anyOf:
            -
              $ref: '#/components/schemas/Manufacturer-product.update'
            -
              type: 'null'
        status:
          default: false
          example: false
          type: boolean
        type:
          default: simple
          example: simple
          type: string
        quantity:
          type:
            - integer
            - 'null'
        optionsJson:
          type:
            - array
            - 'null'
          items:
            type: string
        attributeJson:
          type:
            - array
            - 'null'
          items:
            type: string
        description:
          type:
            - string
            - 'null'
        optionAssignments:
          type: array
          items:
            $ref: '#/components/schemas/ProductOptionValueAssignment-product.update'
        attributeAssignments:
          type: array
          items:
            type: string
            format: iri-reference
            example: 'https://example.com/'
        metaTitle:
          type:
            - string
            - 'null'
        metaDescription:
          type:
            - string
            - 'null'
        metaKeywords:
          type:
            - string
            - 'null'
        metaH1:
          type:
            - string
            - 'null'
    Product-product.write:
      type: object
      description: ''
      deprecated: false
      properties:
        name:
          type:
            - string
            - 'null'
        slug:
          type:
            - string
            - 'null'
        price:
          type:
            - integer
            - 'null'
        salePrice:
          type:
            - integer
            - 'null'
        status:
          type:
            - boolean
            - 'null'
        quantity:
          type:
            - integer
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        type:
          type:
            - string
            - 'null'
        description:
          type:
            - string
            - 'null'
        metaTitle:
          type:
            - string
            - 'null'
        metaDescription:
          type:
            - string
            - 'null'
        metaKeywords:
          type:
            - string
            - 'null'
        h1:
          type:
            - string
            - 'null'
        manufacturerId:
          type:
            - integer
            - 'null'
        optionsJson:
          type:
            - array
            - 'null'
          items:
            type: string
        optionAssignments:
          type:
            - array
            - 'null'
          items:
            type: string
    Product.jsonld-product.create:
      type: object
      description: ''
      deprecated: false
      required:
        - name
      properties:
        name:
          type: string
        slug:
          type:
            - string
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        manufacturerRef:
          anyOf:
            -
              $ref: '#/components/schemas/Manufacturer.jsonld-product.create'
            -
              type: 'null'
        status:
          default: false
          example: false
          type: boolean
        type:
          default: simple
          example: simple
          type: string
        quantity:
          type:
            - integer
            - 'null'
        category:
          type: array
          items:
            type: string
            format: iri-reference
            example: 'https://example.com/'
        image:
          type: array
          items:
            type: string
            format: iri-reference
            example: 'https://example.com/'
        optionsJson:
          type:
            - array
            - 'null'
          items:
            type: string
        attributeJson:
          type:
            - array
            - 'null'
          items:
            type: string
        carousels:
          type: array
          items:
            type: string
            format: iri-reference
            example: 'https://example.com/'
        optionAssignments:
          type: array
          items:
            $ref: '#/components/schemas/ProductOptionValueAssignment.jsonld-product.create'
        attributeAssignments:
          type: array
          items:
            type: string
            format: iri-reference
            example: 'https://example.com/'
        metaTitle:
          type:
            - string
            - 'null'
        metaDescription:
          type:
            - string
            - 'null'
        metaKeywords:
          type:
            - string
            - 'null'
        metaH1:
          type:
            - string
            - 'null'
    Product.jsonld-product.list:
      type: object
      description: ''
      deprecated: false
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        name:
          maxLength: 255
          type: string
        slug:
          maxLength: 255
          type:
            - string
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        effectivePrice:
          type:
            - integer
            - 'null'
        status:
          default: false
          example: false
          type: boolean
        type:
          enum:
            - simple
            - variable
          default: simple
          example: simple
          type: string
        metaTitle:
          type:
            - string
            - 'null'
        metaDescription:
          type:
            - string
            - 'null'
        metaKeywords:
          type:
            - string
            - 'null'
        metaH1:
          type:
            - string
            - 'null'
      required:
        - type
    Product.jsonld-product.read:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          type:
            - integer
            - 'null'
        code:
          type:
            - string
            - 'null'
        name:
          type:
            - string
            - 'null'
        slug:
          type:
            - string
            - 'null'
        price:
          type:
            - integer
            - 'null'
        salePrice:
          type:
            - integer
            - 'null'
        effectivePrice:
          type:
            - integer
            - 'null'
        status:
          type:
            - boolean
            - 'null'
        quantity:
          type:
            - integer
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        type:
          type:
            - string
            - 'null'
        description:
          type:
            - string
            - 'null'
        metaTitle:
          type:
            - string
            - 'null'
        metaDescription:
          type:
            - string
            - 'null'
        metaKeywords:
          type:
            - string
            - 'null'
        h1:
          type:
            - string
            - 'null'
        manufacturerId:
          type:
            - integer
            - 'null'
        manufacturerName:
          type:
            - string
            - 'null'
        image:
          type: array
          items:
            type: string
        firstImageUrl:
          type:
            - string
            - 'null'
        createdAt:
          type:
            - string
            - 'null'
          format: date-time
        categoryNames:
          type: array
          items:
            type: string
        optionsJson:
          type:
            - array
            - 'null'
          items:
            type: string
        optionAssignments:
          type:
            - array
            - 'null'
          items:
            type: string
    Product.jsonld-product.write:
      type: object
      description: ''
      deprecated: false
      properties:
        name:
          type:
            - string
            - 'null'
        slug:
          type:
            - string
            - 'null'
        price:
          type:
            - integer
            - 'null'
        salePrice:
          type:
            - integer
            - 'null'
        status:
          type:
            - boolean
            - 'null'
        quantity:
          type:
            - integer
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        type:
          type:
            - string
            - 'null'
        description:
          type:
            - string
            - 'null'
        metaTitle:
          type:
            - string
            - 'null'
        metaDescription:
          type:
            - string
            - 'null'
        metaKeywords:
          type:
            - string
            - 'null'
        h1:
          type:
            - string
            - 'null'
        manufacturerId:
          type:
            - integer
            - 'null'
        optionsJson:
          type:
            - array
            - 'null'
          items:
            type: string
        optionAssignments:
          type:
            - array
            - 'null'
          items:
            type: string
    ProductAttributeAssignment-paa.read:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        product:
          type: string
          format: iri-reference
          example: 'https://example.com/'
        attribute:
          type: string
          format: iri-reference
          example: 'https://example.com/'
        attributeGroup:
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        dataType:
          enum:
            - string
            - text
            - int
            - decimal
            - bool
            - json
            - date
          default: string
          example: string
          type: string
        stringValue:
          type:
            - string
            - 'null'
        textValue:
          type:
            - string
            - 'null'
        intValue:
          type:
            - integer
            - 'null'
        decimalValue:
          type:
            - string
            - 'null'
        boolValue:
          type:
            - boolean
            - 'null'
        dateValue:
          type:
            - string
            - 'null'
          format: date-time
        jsonValue:
          type:
            - array
            - 'null'
          items:
            type: string
        unit:
          type:
            - string
            - 'null'
        position:
          minimum: 0
          default: 0
          example: 0
          type: integer
        sortOrder:
          type:
            - integer
            - 'null'
      required:
        - product
        - attribute
    ProductAttributeAssignment-paa.write:
      type: object
      description: ''
      deprecated: false
      required:
        - product
        - attribute
      properties:
        product:
          type: string
          format: iri-reference
          example: 'https://example.com/'
        attribute:
          type: string
          format: iri-reference
          example: 'https://example.com/'
        attributeGroup:
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        dataType:
          enum:
            - string
            - text
            - int
            - decimal
            - bool
            - json
            - date
          default: string
          example: string
          type: string
        stringValue:
          type:
            - string
            - 'null'
        textValue:
          type:
            - string
            - 'null'
        intValue:
          type:
            - integer
            - 'null'
        decimalValue:
          type:
            - string
            - 'null'
        boolValue:
          type:
            - boolean
            - 'null'
        dateValue:
          type:
            - string
            - 'null'
          format: date-time
        jsonValue:
          type:
            - array
            - 'null'
          items:
            type: string
        unit:
          type:
            - string
            - 'null'
        position:
          minimum: 0
          default: 0
          example: 0
          type: integer
        sortOrder:
          type:
            - integer
            - 'null'
    ProductAttributeAssignment.jsonld-paa.read:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        product:
          type: string
          format: iri-reference
          example: 'https://example.com/'
        attribute:
          type: string
          format: iri-reference
          example: 'https://example.com/'
        attributeGroup:
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        dataType:
          enum:
            - string
            - text
            - int
            - decimal
            - bool
            - json
            - date
          default: string
          example: string
          type: string
        stringValue:
          type:
            - string
            - 'null'
        textValue:
          type:
            - string
            - 'null'
        intValue:
          type:
            - integer
            - 'null'
        decimalValue:
          type:
            - string
            - 'null'
        boolValue:
          type:
            - boolean
            - 'null'
        dateValue:
          type:
            - string
            - 'null'
          format: date-time
        jsonValue:
          type:
            - array
            - 'null'
          items:
            type: string
        unit:
          type:
            - string
            - 'null'
        position:
          minimum: 0
          default: 0
          example: 0
          type: integer
        sortOrder:
          type:
            - integer
            - 'null'
      required:
        - product
        - attribute
    ProductAttributeAssignment.jsonld-paa.write:
      type: object
      description: ''
      deprecated: false
      required:
        - product
        - attribute
      properties:
        product:
          type: string
          format: iri-reference
          example: 'https://example.com/'
        attribute:
          type: string
          format: iri-reference
          example: 'https://example.com/'
        attributeGroup:
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        dataType:
          enum:
            - string
            - text
            - int
            - decimal
            - bool
            - json
            - date
          default: string
          example: string
          type: string
        stringValue:
          type:
            - string
            - 'null'
        textValue:
          type:
            - string
            - 'null'
        intValue:
          type:
            - integer
            - 'null'
        decimalValue:
          type:
            - string
            - 'null'
        boolValue:
          type:
            - boolean
            - 'null'
        dateValue:
          type:
            - string
            - 'null'
          format: date-time
        jsonValue:
          type:
            - array
            - 'null'
          items:
            type: string
        unit:
          type:
            - string
            - 'null'
        position:
          minimum: 0
          default: 0
          example: 0
          type: integer
        sortOrder:
          type:
            - integer
            - 'null'
    ProductImage:
      type: object
      description: 'не хватает attributes={"order"={"sortOrder": "ASC"}}'
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        imageUrl:
          maxLength: 255
          type: string
        sortOrder:
          type: integer
        product:
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        productId:
          type:
            - integer
            - 'null'
    ProductImage-product.post:
      type: object
      description: 'не хватает attributes={"order"={"sortOrder": "ASC"}}'
      deprecated: false
      properties:
        imageUrl:
          maxLength: 255
          type: string
        sortOrder:
          type: integer
        productId:
          type:
            - integer
            - 'null'
    ProductImage.jsonld:
      type: object
      description: 'не хватает attributes={"order"={"sortOrder": "ASC"}}'
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        imageUrl:
          maxLength: 255
          type: string
        sortOrder:
          type: integer
        product:
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        productId:
          type:
            - integer
            - 'null'
    ProductImage.jsonld-product.post:
      type: object
      description: 'не хватает attributes={"order"={"sortOrder": "ASC"}}'
      deprecated: false
      properties:
        imageUrl:
          maxLength: 255
          type: string
        sortOrder:
          type: integer
        productId:
          type:
            - integer
            - 'null'
    ProductOptionValueAssignment-product.create:
      type: object
      description: ''
      deprecated: false
      properties:
        option:
          type: string
          format: iri-reference
          example: 'https://example.com/'
        value:
          type: string
          format: iri-reference
          example: 'https://example.com/'
        height:
          type:
            - integer
            - 'null'
        price:
          type:
            - integer
            - 'null'
        setPrice:
          type:
            - boolean
            - 'null'
        bulbsCount:
          type:
            - integer
            - 'null'
        lightingArea:
          type:
            - integer
            - 'null'
        sku:
          type:
            - string
            - 'null'
        attributes:
          type:
            - array
            - 'null'
          items:
            type: string
        originalSku:
          type:
            - string
            - 'null'
        salePrice:
          type:
            - integer
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        quantity:
          type:
            - integer
            - 'null'
    ProductOptionValueAssignment-product.update:
      type: object
      description: ''
      deprecated: false
      properties:
        option:
          type: string
          format: iri-reference
          example: 'https://example.com/'
        value:
          type: string
          format: iri-reference
          example: 'https://example.com/'
        height:
          type:
            - integer
            - 'null'
        price:
          type:
            - integer
            - 'null'
        setPrice:
          type:
            - boolean
            - 'null'
        bulbsCount:
          type:
            - integer
            - 'null'
        lightingArea:
          type:
            - integer
            - 'null'
        sku:
          type:
            - string
            - 'null'
        attributes:
          type:
            - array
            - 'null'
          items:
            type: string
        originalSku:
          type:
            - string
            - 'null'
        salePrice:
          type:
            - integer
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        quantity:
          type:
            - integer
            - 'null'
    ProductOptionValueAssignment.jsonld-product.create:
      type: object
      description: ''
      deprecated: false
      properties:
        option:
          type: string
          format: iri-reference
          example: 'https://example.com/'
        value:
          type: string
          format: iri-reference
          example: 'https://example.com/'
        height:
          type:
            - integer
            - 'null'
        price:
          type:
            - integer
            - 'null'
        setPrice:
          type:
            - boolean
            - 'null'
        bulbsCount:
          type:
            - integer
            - 'null'
        lightingArea:
          type:
            - integer
            - 'null'
        sku:
          type:
            - string
            - 'null'
        attributes:
          type:
            - array
            - 'null'
          items:
            type: string
        originalSku:
          type:
            - string
            - 'null'
        salePrice:
          type:
            - integer
            - 'null'
        sortOrder:
          type:
            - integer
            - 'null'
        quantity:
          type:
            - integer
            - 'null'
    ProductToCategory-product.get:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        isParent:
          type:
            - boolean
            - 'null'
        position:
          minimum: 0
          type:
            - integer
            - 'null'
        visibility:
          type:
            - boolean
            - 'null'
        category:
          type: string
          format: iri-reference
          example: 'https://example.com/'
    ProductToCategory-product_category.post:
      type: object
      description: ''
      deprecated: false
      properties:
        isParent:
          type:
            - boolean
            - 'null'
        position:
          minimum: 0
          type:
            - integer
            - 'null'
        visibility:
          type:
            - boolean
            - 'null'
        product:
          type: string
          format: iri-reference
          example: 'https://example.com/'
        category:
          type: string
          format: iri-reference
          example: 'https://example.com/'
        productId:
          type:
            - integer
            - 'null'
        categoryId:
          type:
            - integer
            - 'null'
    ProductToCategory.jsonld-product.get:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        isParent:
          type:
            - boolean
            - 'null'
        position:
          minimum: 0
          type:
            - integer
            - 'null'
        visibility:
          type:
            - boolean
            - 'null'
        category:
          type: string
          format: iri-reference
          example: 'https://example.com/'
    ProductToCategory.jsonld-product_category.post:
      type: object
      description: ''
      deprecated: false
      properties:
        isParent:
          type:
            - boolean
            - 'null'
        position:
          minimum: 0
          type:
            - integer
            - 'null'
        visibility:
          type:
            - boolean
            - 'null'
        product:
          type: string
          format: iri-reference
          example: 'https://example.com/'
        category:
          type: string
          format: iri-reference
          example: 'https://example.com/'
        productId:
          type:
            - integer
            - 'null'
        categoryId:
          type:
            - integer
            - 'null'
    PvzPoints:
      type: object
      description: PvzPoints
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        code:
          type:
            - string
            - 'null'
        name:
          type:
            - string
            - 'null'
        cityCode:
          type:
            - string
            - 'null'
        address:
          type:
            - string
            - 'null'
        tariffZone:
          type:
            - string
            - 'null'
        price:
          type:
            - integer
            - 'null'
        deliveryPeriod:
          type:
            - integer
            - 'null'
        phone:
          type:
            - string
            - 'null'
        region:
          type:
            - string
            - 'null'
        typeOfOffice:
          type:
            - string
            - 'null'
        metro:
          type:
            - string
            - 'null'
        onlyPrepaidOrders:
          type:
            - string
            - 'null'
        postal:
          type:
            - integer
            - 'null'
        city:
          type:
            - string
            - 'null'
        time:
          type:
            - string
            - 'null'
        card:
          type:
            - integer
            - 'null'
        shirota:
          type:
            - number
            - 'null'
        dolgota:
          type:
            - number
            - 'null'
        company:
          type:
            - string
            - 'null'
        cityFias:
          description: 'Связь с FIAS (город). Оставляем строковый city для обратной совместимости.'
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        cityId:
          readOnly: true
          type:
            - integer
            - 'null'
    PvzPoints-pvzPoint.admin.get:
      type: object
      description: PvzPoints
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        cityCode:
          type:
            - string
            - 'null'
        address:
          type:
            - string
            - 'null'
        region:
          type:
            - string
            - 'null'
        city:
          type:
            - string
            - 'null'
        cityFias:
          description: 'Связь с FIAS (город). Оставляем строковый city для обратной совместимости.'
          anyOf:
            -
              $ref: '#/components/schemas/Fias-pvzPoint.admin.get'
            -
              type: 'null'
        cityId:
          readOnly: true
          type:
            - integer
            - 'null'
    PvzPoints.jsonld:
      type: object
      description: PvzPoints
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        code:
          type:
            - string
            - 'null'
        name:
          type:
            - string
            - 'null'
        cityCode:
          type:
            - string
            - 'null'
        address:
          type:
            - string
            - 'null'
        tariffZone:
          type:
            - string
            - 'null'
        price:
          type:
            - integer
            - 'null'
        deliveryPeriod:
          type:
            - integer
            - 'null'
        phone:
          type:
            - string
            - 'null'
        region:
          type:
            - string
            - 'null'
        typeOfOffice:
          type:
            - string
            - 'null'
        metro:
          type:
            - string
            - 'null'
        onlyPrepaidOrders:
          type:
            - string
            - 'null'
        postal:
          type:
            - integer
            - 'null'
        city:
          type:
            - string
            - 'null'
        time:
          type:
            - string
            - 'null'
        card:
          type:
            - integer
            - 'null'
        shirota:
          type:
            - number
            - 'null'
        dolgota:
          type:
            - number
            - 'null'
        company:
          type:
            - string
            - 'null'
        cityFias:
          description: 'Связь с FIAS (город). Оставляем строковый city для обратной совместимости.'
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        cityId:
          readOnly: true
          type:
            - integer
            - 'null'
    PvzPoints.jsonld-pvzPoint.admin.get:
      type: object
      description: PvzPoints
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        cityCode:
          type:
            - string
            - 'null'
        address:
          type:
            - string
            - 'null'
        region:
          type:
            - string
            - 'null'
        city:
          type:
            - string
            - 'null'
        cityFias:
          description: 'Связь с FIAS (город). Оставляем строковый city для обратной совместимости.'
          anyOf:
            -
              $ref: '#/components/schemas/Fias.jsonld-pvzPoint.admin.get'
            -
              type: 'null'
        cityId:
          readOnly: true
          type:
            - integer
            - 'null'
    PvzPrice:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        city:
          type: string
        srok:
          type:
            - string
            - 'null'
        city2:
          type:
            - string
            - 'null'
        code:
          type:
            - string
            - 'null'
        alias:
          type:
            - string
            - 'null'
        region:
          type:
            - string
            - 'null'
        cost:
          type:
            - integer
            - 'null'
        free:
          type:
            - integer
            - 'null'
        calculatePrice:
          type:
            - integer
            - 'null'
        calculateDeliveryPeriod:
          type:
            - string
            - 'null'
        cityFias:
          description: 'Связь с FIAS (город). Оставляем строковый city для обратной совместимости.'
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        cityId:
          readOnly: true
          type:
            - integer
            - 'null'
    PvzPrice-pvzPrice.admin.get:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        city:
          type: string
        srok:
          type:
            - string
            - 'null'
        city2:
          type:
            - string
            - 'null'
        alias:
          type:
            - string
            - 'null'
        cost:
          type:
            - integer
            - 'null'
        free:
          type:
            - integer
            - 'null'
        cityFias:
          description: 'Связь с FIAS (город). Оставляем строковый city для обратной совместимости.'
          anyOf:
            -
              $ref: '#/components/schemas/Fias-pvzPrice.admin.get'
            -
              type: 'null'
        cityId:
          readOnly: true
          type:
            - integer
            - 'null'
    PvzPrice-pvzPrice.get:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        city:
          type: string
        srok:
          type:
            - string
            - 'null'
        city2:
          type:
            - string
            - 'null'
        alias:
          type:
            - string
            - 'null'
        cost:
          type:
            - integer
            - 'null'
        free:
          type:
            - integer
            - 'null'
    PvzPrice.jsonld:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        city:
          type: string
        srok:
          type:
            - string
            - 'null'
        city2:
          type:
            - string
            - 'null'
        code:
          type:
            - string
            - 'null'
        alias:
          type:
            - string
            - 'null'
        region:
          type:
            - string
            - 'null'
        cost:
          type:
            - integer
            - 'null'
        free:
          type:
            - integer
            - 'null'
        calculatePrice:
          type:
            - integer
            - 'null'
        calculateDeliveryPeriod:
          type:
            - string
            - 'null'
        cityFias:
          description: 'Связь с FIAS (город). Оставляем строковый city для обратной совместимости.'
          type:
            - string
            - 'null'
          format: iri-reference
          example: 'https://example.com/'
        cityId:
          readOnly: true
          type:
            - integer
            - 'null'
    PvzPrice.jsonld-pvzPrice.admin.get:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        city:
          type: string
        srok:
          type:
            - string
            - 'null'
        city2:
          type:
            - string
            - 'null'
        alias:
          type:
            - string
            - 'null'
        cost:
          type:
            - integer
            - 'null'
        free:
          type:
            - integer
            - 'null'
        cityFias:
          description: 'Связь с FIAS (город). Оставляем строковый city для обратной совместимости.'
          anyOf:
            -
              $ref: '#/components/schemas/Fias.jsonld-pvzPrice.admin.get'
            -
              type: 'null'
        cityId:
          readOnly: true
          type:
            - integer
            - 'null'
    PvzPrice.jsonld-pvzPrice.get:
      type: object
      description: ''
      deprecated: false
      properties:
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        city:
          type: string
        srok:
          type:
            - string
            - 'null'
        city2:
          type:
            - string
            - 'null'
        alias:
          type:
            - string
            - 'null'
        cost:
          type:
            - integer
            - 'null'
        free:
          type:
            - integer
            - 'null'
    Settings:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        value:
          type:
            - string
            - 'null'
    Settings-settings.admin.get:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        value:
          type:
            - string
            - 'null'
    Settings-settings.admin.write:
      type: object
      description: ''
      deprecated: false
      properties:
        name:
          type: string
        value:
          type:
            - string
            - 'null'
    Settings.jsonld:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        name:
          type: string
        value:
          type:
            - string
            - 'null'
    Settings.jsonld-settings.admin.get:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        name:
          type: string
        value:
          type:
            - string
            - 'null'
    Settings.jsonld-settings.admin.write:
      type: object
      description: ''
      deprecated: false
      properties:
        name:
          type: string
        value:
          type:
            - string
            - 'null'
    User-user.get:
      type: object
      description: ''
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
        name:
          minLength: 2
          default: ''
          example: ''
          type: string
        roles:
          type: array
          items:
            type: string
    User-user.patch:
      type: object
      description: ''
      deprecated: false
      properties:
        name:
          minLength: 2
          default: ''
          example: ''
          type: string
        roles:
          type: array
          items:
            type: string
        plainPassword:
          type:
            - string
            - 'null'
    User-user.post:
      type: object
      description: ''
      deprecated: false
      properties:
        name:
          minLength: 2
          default: ''
          example: ''
          type: string
        roles:
          type: array
          items:
            type: string
        plainPassword:
          type:
            - string
            - 'null'
    User.jsonld-user.get:
      type: object
      description: ''
      deprecated: false
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: integer
        name:
          minLength: 2
          default: ''
          example: ''
          type: string
        roles:
          type: array
          items:
            type: string
    User.jsonld-user.post:
      type: object
      description: ''
      deprecated: false
      properties:
        name:
          minLength: 2
          default: ''
          example: ''
          type: string
        roles:
          type: array
          items:
            type: string
        plainPassword:
          type:
            - string
            - 'null'
  responses: {  }
  parameters: {  }
  examples: {  }
  requestBodies: {  }
  headers: {  }
  securitySchemes: {  }
security: []
tags:
  -
    name: Product
  -
    name: Attribute
  -
    name: AttributeGroup
  -
    name: Carousel
    description: 'не хватает attributes={"order"={"sort": "ASC"}}'
  -
    name: Category
  -
    name: City
  -
    name: CityModal
  -
    name: DeliveryType
  -
    name: Fias
    description: 'FIAS (Федеральная Информационная Адресная Система)'
  -
    name: Option
    description: 'не хватает attributes={"order"={"sortOrder": "ASC"}}'
  -
    name: OptionValue
  -
    name: Order
    description: 'не хватает attributes={"order"={"dateAdded": "DESC"}}'
  -
    name: OrderCustomer
  -
    name: OrderDelivery
  -
    name: OrderProductOptions
  -
    name: OrderProducts
  -
    name: OrderStatus
  -
    name: ProductAttributeAssignment
  -
    name: ProductImage
    description: 'не хватает attributes={"order"={"sortOrder": "ASC"}}'
  -
    name: ProductToCategory
  -
    name: PvzPoints
    description: PvzPoints
  -
    name: PvzPrice
  -
    name: Settings
  -
    name: User
webhooks: {  }


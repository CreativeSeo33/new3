---
alwaysApply: true
---

# Архитектурные роли: Frontend vs Backend

## Frontend (Vue 3, SPA)
- Только представление, роутинг и UI‑состояние; без бизнес‑логики
- API‑вызовы к API Platform; параметры фильтров/сортировки/пагинации — в query
- Пагинация синхронизируется с URL (`page`, `itemsPerPage`), состояние берётся из ответа API
- Ошибки/загрузка/валидация — на уровне UX; бизнес‑валидация — на бэкенде

## Backend (Symfony + API Platform)
- Вся бизнес‑логика, валидация, фильтры, сортировки, поиск
- Пагинация: вычисления и метаданные целиком на сервере
- Doctrine ORM/DBAL; транзакции; конфигурация через ENV/параметры/DI
- Аутентификация/авторизация, ACL; сериализация/группы; ограничения запросов

## Запрещённые паттерны во фронтенде
- Клиентская фильтрация/сортировка/пагинация данных коллекций
- Дублирование бизнес‑правил и проверок на клиенте
- Жёстко заданные URL/константы вместо конфигурации

## Требуемые паттерны во фронтенде
- Делегируй фильтры/сортировку/пагинацию бэкенду (API Platform)
- Управляй query‑параметрами через Vue Router; обеспечь прямые ссылки
- Отображай пагинацию по данным ответа API; не пересчитывай на клиенте


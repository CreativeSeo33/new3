{% extends 'catalog/base.html.twig' %}

{% block title %}
  {{ product.metaTitle ?? product.name }} — {{ parent() }}
{% endblock %}

{% block catalog_body %}
  <!-- Основная информация о товаре -->
  <div class="bg-gradient-to-b from-gray-50 to-white">
    <div class="container mx-auto px-4 py-8">
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 lg:gap-12">

        <!-- Галерея изображений -->
        <div class="space-y-4">
          {% set sortedImages = product.image|sort((a,b) => a.sortOrder <=> b.sortOrder) %}
          {% set mainImage = sortedImages|first %}

          <!-- Основное изображение -->
          <div class="relative overflow-hidden rounded-xl shadow-lg bg-white group">
            {% if mainImage %}
              {% set raw = mainImage.imageUrl %}
              {% set rel = raw|replace({'/media/cache/':''})|split('/')|last %}
              {% set imgSrc = asset('/img/' ~ rel) | imagine_filter('xl') %}
              <img id="main-product-image" src="{{ imgSrc }}" alt="{{ product.name }}"
                   class="w-full h-auto object-cover cursor-zoom-in transition-transform duration-300 group-hover:scale-105"
                   data-zoom-src="{{ asset('/img/' ~ rel) }}" />
            {% else %}
              <img id="main-product-image" src="https://via.placeholder.com/600x600" alt="{{ product.name }}"
                   class="w-full h-auto object-cover" />
            {% endif %}

            <!-- Акционная наклейка -->
            <div class="absolute top-4 left-4">
              <span class="bg-red-500 text-white px-3 py-1 rounded-full text-sm font-medium shadow-lg">
                Новинка
              </span>
            </div>

            <!-- Иконка зума -->
            <div class="absolute bottom-4 right-4 opacity-0 group-hover:opacity-100 transition-opacity">
              <div class="bg-black bg-opacity-50 text-white p-2 rounded-full">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM10 7v3m0 0v3m0-3h3m-3 0H7"/>
                </svg>
              </div>
            </div>
          </div>

          <!-- Миниатюры (если есть дополнительные изображения) -->
          {% if sortedImages|length > 1 %}
            <div class="grid grid-cols-4 gap-2">
              {% for image in sortedImages %}
                {% set raw = image.imageUrl %}
                {% set rel = raw|replace({'/media/cache/':''})|split('/')|last %}
                {% set thumbSrc = asset('/img/' ~ rel) | imagine_filter('sm') %}
                {% set fullSrc = asset('/img/' ~ rel) | imagine_filter('xl') %}
                <div class="aspect-square overflow-hidden rounded-lg border-2 border-gray-200 hover:border-blue-400 cursor-pointer transition-all thumbnail-item {% if loop.first %}border-blue-500{% endif %}"
                     data-image-src="{{ fullSrc }}"
                     data-zoom-src="{{ asset('/img/' ~ rel) }}">
                  <img src="{{ thumbSrc }}" alt="" class="w-full h-full object-cover" />
                </div>
              {% endfor %}
            </div>
          {% endif %}
        </div>

        <!-- Модальное окно для зума -->
        <div id="image-zoom-modal" class="fixed inset-0 bg-black bg-opacity-90 z-50 hidden items-center justify-center">
          <div class="relative max-w-4xl max-h-screen p-4">
            <img id="zoom-image" src="" alt="" class="max-w-full max-h-full object-contain" />

            <!-- Кнопка закрытия -->
            <button id="close-zoom" class="absolute top-4 right-4 text-white hover:text-gray-300 transition-colors">
              <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
              </svg>
            </button>

            <!-- Кнопки навигации -->
            {% if sortedImages|length > 1 %}
              <button id="prev-image" class="absolute left-4 top-1/2 transform -translate-y-1/2 text-white hover:text-gray-300 transition-colors opacity-75 hover:opacity-100">
                <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
                </svg>
              </button>
              <button id="next-image" class="absolute right-4 top-1/2 transform -translate-y-1/2 text-white hover:text-gray-300 transition-colors opacity-75 hover:opacity-100">
                <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                </svg>
              </button>
            {% endif %}
          </div>
        </div>

        <!-- Информация о товаре -->
        <div class="space-y-6">
          <!-- Заголовок и рейтинг -->
          <div class="space-y-3">
            <div class="flex items-center gap-2 text-sm text-gray-600">
              <span class="bg-blue-100 text-blue-800 px-2 py-1 rounded">Артикул: {{ product.sku ?? '—' }}</span>
              <span class="bg-green-100 text-green-800 px-2 py-1 rounded">В наличии</span>
            </div>

            <h1 class="text-3xl lg:text-4xl font-bold text-gray-900 leading-tight">
              {{ product.metaH1 ?? product.name }}
            </h1>

            <!-- Рейтинг -->
            <div class="flex items-center gap-2">
              <div class="flex text-yellow-400">
                {% for i in 1..5 %}
                  <svg class="w-5 h-5 fill-current" viewBox="0 0 24 24">
                    <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                  </svg>
                {% endfor %}
              </div>
              <span class="text-sm text-gray-600">(12 отзывов)</span>
            </div>
          </div>

          <!-- Цена -->
          <div class="bg-gray-50 rounded-xl p-6 space-y-2">
            {% if product.getEffectivePrice() %}
              <div class="flex items-baseline gap-3">
                <span id="product-price" class="text-4xl font-bold text-gray-900" data-base-price="{{ product.getEffectivePrice() }}">
                  {{ product.getEffectivePrice() }}
                </span>
                <span class="text-lg text-gray-500 line-through" id="old-price" data-old-price="45000">₽ 45 000</span>
                <span class="bg-red-500 text-white px-2 py-1 rounded text-sm font-medium" id="discount-badge">-15%</span>
              </div>
              <p class="text-sm text-gray-600" id="price-description">Цена включает НДС и доставку по Москве</p>
            {% endif %}
          </div>

          <!-- Быстрые преимущества -->
          <div class="grid grid-cols-2 gap-4">
            <div class="flex items-center gap-3 p-3 bg-blue-50 rounded-lg">
              <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"/>
              </svg>
              <span class="text-sm font-medium text-gray-900">Быстрая доставка</span>
            </div>
            <div class="flex items-center gap-3 p-3 bg-green-50 rounded-lg">
              <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
              </svg>
              <span class="text-sm font-medium text-gray-900">Гарантия 3 года</span>
            </div>
          </div>

          <!-- Опции товара -->
          <form class="space-y-6">
            {% if product.optionAssignments is defined and product.optionAssignments|length > 0 %}
              <div class="space-y-4">
                <h3 class="text-lg font-semibold text-gray-900">Выберите вариант</h3>
                {% set items = product.optionAssignments|sort((a,b) => (a.option.sortOrder <=> b.option.sortOrder) ?: ((a.sortOrder ?? 2147483647) <=> (b.sortOrder ?? 2147483647))) %}

                {# Группируем опции по типам #}
                {% set groupedOptions = {} %}
                {% for a in items %}
                  {% set optionName = a.option.name ?? ('Опция #' ~ a.option.id) %}
                  {% if groupedOptions[optionName] is not defined %}
                    {% set groupedOptions = groupedOptions|merge({ (optionName): [] }) %}
                  {% endif %}
                  {% set groupedOptions = groupedOptions|merge({ (optionName): groupedOptions[optionName]|merge([a]) }) %}
                {% endfor %}

                {# Выводим радио-кнопки для каждой группы опций #}
                {% for optionName, optionValues in groupedOptions %}
                  <div class="space-y-3">
                    <div class="text-sm font-medium text-gray-700">{{ optionName }}</div>
                    <div class="grid grid-cols-1 gap-2">
                      {% for a in optionValues %}
                        <div class="relative">
                          <input
                            type="radio"
                            id="option-{{ a.id }}"
                            name="option-{{ a.option.id }}"
                            value="{{ a.id }}"
                            class="sr-only peer"
                            data-option-name="{{ optionName }}"
                            data-option-price="{{ a.price|default(0) }}"
                            data-option-value="{{ a.value.value ?? ('Значение #' ~ a.value.id) }}"
                            {% if loop.first %}checked{% endif %}
                          >
                          <label for="option-{{ a.id }}" class="flex items-center justify-between p-3 border-2 border-gray-200 rounded-lg cursor-pointer hover:border-blue-400 peer-checked:border-blue-500 peer-checked:bg-blue-50 transition-all">
                            <div class="flex items-center">
                              <div class="w-4 h-4 border-2 border-gray-300 rounded-full mr-3 peer-checked:border-blue-500 peer-checked:bg-blue-500">
                                <div class="w-2 h-2 bg-white rounded-full m-0.5 peer-checked:bg-white"></div>
                              </div>
                              <span class="text-sm font-medium text-gray-900">
                                {{ a.value.value ?? ('Значение #' ~ a.value.id) }}
                              </span>
                            </div>
                            {% if a.price is not null and a.price > 0 %}
                              <span class="text-sm font-medium text-gray-900">+{{ a.price }}</span>
                            {% endif %}
                          </label>
                        </div>
                      {% endfor %}
                    </div>
                  </div>
                {% endfor %}
              </div>
            {% endif %}

            <!-- Кнопка покупки -->
            <div class="space-y-4">
              <button type="button" data-product-id="{{ product.id }}"
                      class="js-add-to-cart w-full bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white font-semibold py-4 px-6 rounded-xl shadow-lg hover:shadow-xl transform hover:scale-[1.02] transition-all duration-200 disabled:opacity-50 disabled:pointer-events-none disabled:transform-none relative overflow-hidden group">
                <!-- Анимированный фон -->
                <div class="absolute inset-0 bg-gradient-to-r from-blue-400 to-blue-500 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>

                <!-- Основное содержимое -->
                <div class="relative flex items-center justify-center gap-3">
                  <!-- Иконка корзины с анимацией -->
                  <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 transition-transform duration-200 group-hover:scale-110" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-1.1 5H19M7 13v8a2 2 0 002 2h10a2 2 0 002-2v-3"/>
                  </svg>

                  <!-- Текст с анимацией -->
                  <span class="text-lg transition-all duration-200 group-hover:tracking-wide">Добавить в корзину</span>
                </div>

                <!-- Эффект пульсации -->
                <div class="absolute inset-0 rounded-xl bg-blue-400 opacity-0 group-hover:opacity-20 animate-pulse"></div>

                <!-- Loading state -->
                <div class="loading-spinner absolute inset-0 flex items-center justify-center opacity-0">
                  <svg class="w-5 h-5 animate-spin text-white" fill="none" viewBox="0 0 24 24">
                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                  </svg>
                </div>
              </button>

              <div class="flex gap-3">
                <button class="flex-1 bg-gray-100 hover:bg-gray-200 text-gray-700 font-medium py-3 px-4 rounded-lg transition-colors">
                  <div class="flex items-center justify-center gap-2">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"/>
                    </svg>
                    <span>В избранное</span>
                  </div>
                </button>
                <button class="flex-1 bg-gray-100 hover:bg-gray-200 text-gray-700 font-medium py-3 px-4 rounded-lg transition-colors">
                  <div class="flex items-center justify-center gap-2">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"/>
                    </svg>
                    <span>Поделиться</span>
                  </div>
                </button>
              </div>
            </div>
          </form>

          <!-- Дополнительная информация -->
          <div class="border-t pt-6 space-y-4">
            <div class="flex items-center gap-3 text-sm text-gray-600">
              <svg class="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
              </svg>
              <span>Бесплатная доставка при заказе от 10 000 ₽</span>
            </div>
            <div class="flex items-center gap-3 text-sm text-gray-600">
              <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
              </svg>
              <span>Доставка в течение 2-5 рабочих дней</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Описание товара -->
  {% if product.description %}
    <div class="bg-white">
      <div class="container mx-auto px-4 py-12">
        <div class="max-w-4xl mx-auto">
          <h2 class="text-2xl font-bold text-gray-900 mb-6">Описание</h2>
          <div class="prose prose-lg max-w-none text-gray-700 leading-relaxed">
            {{ product.description }}
          </div>
        </div>
      </div>
    </div>
  {% endif %}
  
  <!-- Характеристики товара -->
  {% if product.attributeAssignments is defined and product.attributeAssignments|length > 0 %}
    <div class="bg-gray-50">
      <div class="container mx-auto px-4 py-12">
        <div class="max-w-4xl mx-auto">
          <h2 class="text-2xl font-bold text-gray-900 mb-8">Технические характеристики</h2>

          {# Группируем атрибуты по группам #}
          {% set grouped_attrs = {} %}
          {% for pa in product.attributeAssignments %}
            {% set groupName = pa.attributeGroup ? pa.attributeGroup.name : 'Основные характеристики' %}

            {% if grouped_attrs[groupName] is not defined %}
              {% set grouped_attrs = grouped_attrs|merge({ (groupName): [] }) %}
            {% endif %}

            {% set grouped_attrs = grouped_attrs|merge({ (groupName): grouped_attrs[groupName]|merge([pa]) }) %}
          {% endfor %}

          {# Сортируем группы и выводим атрибуты #}
          {% for groupName, attributes in grouped_attrs|sort((a, b) => a <=> b) %}
            <div class="bg-white rounded-xl shadow-sm border border-gray-200 mb-6 overflow-hidden">
              <div class="bg-gradient-to-r from-gray-50 to-gray-100 px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-semibold text-gray-900">{{ groupName }}</h3>
              </div>
              <div class="p-6">
                <dl class="grid grid-cols-1 md:grid-cols-2 gap-4">
                  {% for pa in attributes|sort((a, b) => (a.attribute.sortOrder ?? 0) <=> (b.attribute.sortOrder ?? 0)) %}
                    <div class="flex flex-col sm:flex-row sm:justify-between sm:items-center py-2 border-b border-gray-100 last:border-b-0">
                      <dt class="text-sm font-medium text-gray-600 mb-1 sm:mb-0">{{ pa.attribute.name }}</dt>
                      <dd class="text-sm font-semibold text-gray-900">{{ pa.stringValue ?? '—' }}</dd>
                    </div>
                  {% endfor %}
                </dl>
              </div>
            </div>
          {% endfor %}
        </div>
      </div>
    </div>
  {% endif %}

  <!-- Дополнительные блоки -->
  <div class="bg-white">
    <div class="container mx-auto px-4 py-12">
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8">

        <!-- Доставка и оплата -->
        <div class="space-y-6">
          <h3 class="text-xl font-bold text-gray-900">Доставка и оплата</h3>

          <div class="space-y-4">
            <div class="flex items-start gap-4">
              <div class="flex-shrink-0 w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center">
                <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4"/>
                </svg>
              </div>
              <div>
                <h4 class="font-semibold text-gray-900">Бесплатная доставка</h4>
                <p class="text-sm text-gray-600 mt-1">При заказе от 10 000 ₽ по Москве и МО</p>
              </div>
            </div>

            <div class="flex items-start gap-4">
              <div class="flex-shrink-0 w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center">
                <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 0h10a2 2 0 002-2v-2a2 2 0 00-2-2H9a2 2 0 00-2 2v2a2 2 0 002 2z"/>
                </svg>
              </div>
              <div>
                <h4 class="font-semibold text-gray-900">Оплата при получении</h4>
                <p class="text-sm text-gray-600 mt-1">Наличными или картой курьеру</p>
              </div>
            </div>

            <div class="flex items-start gap-4">
              <div class="flex-shrink-0 w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center">
                <svg class="w-6 h-6 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"/>
                </svg>
              </div>
              <div>
                <h4 class="font-semibold text-gray-900">Безналичная оплата</h4>
                <p class="text-sm text-gray-600 mt-1">Для юридических лиц и ИП</p>
              </div>
            </div>
          </div>
        </div>

        <!-- Гарантия -->
        <div class="space-y-6">
          <h3 class="text-xl font-bold text-gray-900">Гарантия и сервис</h3>

          <div class="space-y-4">
            <div class="flex items-start gap-4">
              <div class="flex-shrink-0 w-12 h-12 bg-yellow-100 rounded-lg flex items-center justify-center">
                <svg class="w-6 h-6 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                </svg>
              </div>
              <div>
                <h4 class="font-semibold text-gray-900">Официальная гарантия</h4>
                <p class="text-sm text-gray-600 mt-1">3 года на всю продукцию</p>
              </div>
            </div>

            <div class="flex items-start gap-4">
              <div class="flex-shrink-0 w-12 h-12 bg-red-100 rounded-lg flex items-center justify-center">
                <svg class="w-6 h-6 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"/>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                </svg>
              </div>
              <div>
                <h4 class="font-semibold text-gray-900">Техническая поддержка</h4>
                <p class="text-sm text-gray-600 mt-1">Консультации и помощь 24/7</p>
              </div>
            </div>

            <div class="flex items-start gap-4">
              <div class="flex-shrink-0 w-12 h-12 bg-indigo-100 rounded-lg flex items-center justify-center">
                <svg class="w-6 h-6 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"/>
                </svg>
              </div>
              <div>
                <h4 class="font-semibold text-gray-900">Сертифицированный товар</h4>
                <p class="text-sm text-gray-600 mt-1">Все товары имеют необходимые сертификаты</p>
              </div>
            </div>
          </div>
        </div>

        <!-- Отзывы -->
        <div class="space-y-6">
          <h3 class="text-xl font-bold text-gray-900">Отзывы покупателей</h3>

          <div class="space-y-4">
            <div class="bg-gray-50 rounded-lg p-4">
              <div class="flex items-center gap-2 mb-2">
                <div class="flex text-yellow-400">
                  {% for i in 1..5 %}
                    <svg class="w-4 h-4 fill-current" viewBox="0 0 24 24">
                      <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                    </svg>
                  {% endfor %}
                </div>
                <span class="text-sm font-medium text-gray-900">Анна К.</span>
                <span class="text-xs text-gray-500">2 недели назад</span>
              </div>
              <p class="text-sm text-gray-700">"Отличное качество, доставили вовремя. Светильник выглядит гораздо лучше, чем на фото!"</p>
            </div>

            <div class="bg-gray-50 rounded-lg p-4">
              <div class="flex items-center gap-2 mb-2">
                <div class="flex text-yellow-400">
                  {% for i in 1..4 %}
                    <svg class="w-4 h-4 fill-current" viewBox="0 0 24 24">
                      <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                    </svg>
                  {% endfor %}
                  <svg class="w-4 h-4 text-gray-300" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                  </svg>
                </div>
                <span class="text-sm font-medium text-gray-900">Михаил Д.</span>
                <span class="text-xs text-gray-500">месяц назад</span>
              </div>
              <p class="text-sm text-gray-700">"Хороший товар, но хотелось бы больше цветовых вариантов. В целом доволен покупкой."</p>
            </div>

            <div class="text-center">
              <button class="text-blue-600 hover:text-blue-800 font-medium text-sm transition-colors">
                Читать все отзывы (12)
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- JavaScript для галереи изображений -->
  <script>
  document.addEventListener('DOMContentLoaded', function() {
    const mainImage = document.getElementById('main-product-image');
    const zoomModal = document.getElementById('image-zoom-modal');
    const zoomImage = document.getElementById('zoom-image');
    const closeZoom = document.getElementById('close-zoom');
    const prevImage = document.getElementById('prev-image');
    const nextImage = document.getElementById('next-image');
    const thumbnails = document.querySelectorAll('.thumbnail-item');

    let currentImageIndex = 0;
    const imageSources = Array.from(thumbnails).map(thumb => ({
      main: thumb.dataset.imageSrc,
      zoom: thumb.dataset.zoomSrc
    }));

    // Добавляем основное изображение в массив
    if (mainImage && mainImage.dataset.zoomSrc) {
      imageSources.unshift({
        main: mainImage.src,
        zoom: mainImage.dataset.zoomSrc
      });
    }

    // Обработчик клика по основному изображению
    if (mainImage) {
      mainImage.addEventListener('click', function() {
        if (zoomImage && zoomModal) {
          zoomImage.src = this.dataset.zoomSrc || this.src;
          zoomModal.classList.remove('hidden');
          zoomModal.classList.add('flex');
          document.body.style.overflow = 'hidden';
        }
      });
    }

    // Обработчики для миниатюр
    thumbnails.forEach((thumbnail, index) => {
      thumbnail.addEventListener('click', function() {
        // Убираем активный класс со всех миниатюр
        thumbnails.forEach(t => t.classList.remove('border-blue-500'));
        // Добавляем активный класс к текущей
        this.classList.add('border-blue-500');

        // Меняем основное изображение
        if (mainImage && this.dataset.imageSrc) {
          mainImage.src = this.dataset.imageSrc;
          mainImage.dataset.zoomSrc = this.dataset.zoomSrc;
        }

        currentImageIndex = index;
      });
    });

    // Закрытие модального окна
    if (closeZoom) {
      closeZoom.addEventListener('click', closeModal);
    }

    // Закрытие по клику вне изображения
    if (zoomModal) {
      zoomModal.addEventListener('click', function(e) {
        if (e.target === this) {
          closeModal();
        }
      });
    }

    // Обработчики для кнопок навигации
    if (prevImage) {
      prevImage.addEventListener('click', function() {
        currentImageIndex = (currentImageIndex - 1 + imageSources.length) % imageSources.length;
        updateZoomImage();
        updateActiveThumbnail();
      });
    }

    if (nextImage) {
      nextImage.addEventListener('click', function() {
        currentImageIndex = (currentImageIndex + 1) % imageSources.length;
        updateZoomImage();
        updateActiveThumbnail();
      });
    }

    // Обработка клавиш
    document.addEventListener('keydown', function(e) {
      if (!zoomModal.classList.contains('flex')) return;

      switch(e.key) {
        case 'Escape':
          closeModal();
          break;
        case 'ArrowLeft':
          if (prevImage) prevImage.click();
          break;
        case 'ArrowRight':
          if (nextImage) nextImage.click();
          break;
      }
    });

    function closeModal() {
      if (zoomModal) {
        zoomModal.classList.add('hidden');
        zoomModal.classList.remove('flex');
        document.body.style.overflow = '';
      }
    }

    function updateZoomImage() {
      if (zoomImage && imageSources[currentImageIndex]) {
        zoomImage.src = imageSources[currentImageIndex].zoom;
      }
    }

    function updateActiveThumbnail() {
      // Убираем активный класс со всех миниатюр
      thumbnails.forEach(t => t.classList.remove('border-blue-500'));

      // Добавляем активный класс к соответствующей миниатюре
      if (thumbnails[currentImageIndex - 1]) { // -1 потому что первый элемент - основное изображение
        thumbnails[currentImageIndex - 1].classList.add('border-blue-500');
      }
    }
  });

  // Функционал динамического обновления цены при выборе опций
  document.addEventListener('DOMContentLoaded', function() {
    const priceElement = document.getElementById('product-price');
    const oldPriceElement = document.getElementById('old-price');
    const discountBadge = document.getElementById('discount-badge');

    if (!priceElement) return;

    const basePrice = parseInt(priceElement.dataset.basePrice) || 0;
    const oldPrice = parseInt(oldPriceElement?.dataset.oldPrice) || 45000;

    // Функция форматирования цены
    function formatPrice(price) {
      return new Intl.NumberFormat('ru-RU', {
        style: 'currency',
        currency: 'RUB',
        minimumFractionDigits: 0
      }).format(price);
    }

    // Функция расчета новой цены
    function calculateNewPrice() {
      let totalOptionPrice = 0;

      // Находим все выбранные радио-кнопки
      const selectedOptions = document.querySelectorAll('input[type="radio"]:checked');

      selectedOptions.forEach(option => {
        const optionName = option.dataset.optionName;
        const optionPrice = parseInt(option.dataset.optionPrice) || 0;

        // Если это опция "Диаметр" и цена > 0, добавляем к итоговой цене
        if (optionName === 'Диаметр' && optionPrice > 0) {
          totalOptionPrice += optionPrice;
        }
      });

      return basePrice + totalOptionPrice;
    }

    // Функция обновления отображения цены
    function updatePriceDisplay() {
      const newPrice = calculateNewPrice();
      const newOldPrice = oldPrice + (newPrice - basePrice); // Пропорционально увеличиваем старую цену
      const currentPrice = parseInt(priceElement.textContent.replace(/[^\d]/g, '')) || basePrice;

      // Если цена не изменилась, выходим
      if (newPrice === currentPrice) return;

      // Анимируем изменение цены
      priceElement.style.transition = 'all 0.3s ease';
      priceElement.style.transform = 'scale(1.1)';
      priceElement.style.color = newPrice > currentPrice ? '#dc2626' : '#059669';

      setTimeout(() => {
        // Обновляем текущую цену
        priceElement.textContent = formatPrice(newPrice);

        // Обновляем старую цену
        if (oldPriceElement) {
          oldPriceElement.textContent = formatPrice(newOldPrice);
        }

        // Обновляем процент скидки
        if (discountBadge && newOldPrice > newPrice) {
          const discountPercent = Math.round((1 - newPrice / newOldPrice) * 100);
          discountBadge.textContent = `-${discountPercent}%`;
        }

        // Возвращаем нормальный вид
        setTimeout(() => {
          priceElement.style.transform = 'scale(1)';
          priceElement.style.color = '';
        }, 200);
      }, 150);
    }

    // Слушаем изменения радио-кнопок
    document.addEventListener('change', function(e) {
      if (e.target.type === 'radio' && e.target.name.startsWith('option-')) {
        // Добавляем анимацию для выбранного лейбла
        const label = e.target.nextElementSibling;
        if (label) {
          label.style.transition = 'all 0.2s ease';
          label.style.transform = 'scale(1.02)';
          label.style.boxShadow = '0 4px 12px rgba(59, 130, 246, 0.15)';

          setTimeout(() => {
            label.style.transform = 'scale(1)';
            label.style.boxShadow = '';
          }, 200);
        }

        // Небольшая задержка для визуального эффекта
        setTimeout(updatePriceDisplay, 100);
      }
    });

    // Инициализируем цену при загрузке страницы
    updatePriceDisplay();
  });
  </script>
{% endblock %}



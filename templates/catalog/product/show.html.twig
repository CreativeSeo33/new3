{% extends 'catalog/base.html.twig' %}

{% block title %}
  {{ product.metaTitle ?? product.name }} — {{ parent() }}
{% endblock %}

{% block catalog_body %}
{# ai:page=product map=@page_product_map.mdc v=1 #}
  <!-- Основная информация о товаре -->
  <div class="">
    <div class="container mx-auto">
    <div class="pb-6 pt-4">

            <h1 class="text-3xl lg:text-4xl font-bold text-gray-900">
              {{ product.metaH1 ?? product.name }}
            </h1>

            
          </div>
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 lg:gap-12">

      

              <!-- Галерея изображений -->
        <div class="space-y-4">
          {% set sortedImages = product.image|sort((a,b) => a.sortOrder <=> b.sortOrder) %}
          {% set mainImage = sortedImages|first %}

          <!-- Слайдер изображений с миниатюрами и loop -->
          <div class="relative overflow-hidden rounded-xl bg-white group">
            {% if mainImage %}
              {% set sortedImages = product.image|sort((a,b) => a.sortOrder <=> b.sortOrder) %}
              {% set mainImg = sortedImages|first %}

              <!-- Основной слайдер -->
              <div class="gallery-main-swiper mb-4">
                <swiper-container
                  class="product-gallery-swiper"
                  data-testid="gallery"
                  slides-per-view="1"
                  space-between="0"
                  loop="true"
                  grab-cursor="true"
                  navigation="true"
                  pagination="true"
                  thumbs-swiper=".gallery-thumbs-swiper"
                  speed="500"
                >
                  {% for image in sortedImages %}
                    {% set raw = image.imageUrl %}
                    {% set rel = raw|replace({'/media/cache/':''})|replace({'md2/':'','md/':'','sm/':'','xl/':''}) %}
                    {% set imgSrc = asset('/' ~ rel) | imagine_filter('xl') %}
                    {% set fullImgSrc = asset('/' ~ rel) | imagine_filter('xl') %}
                    <swiper-slide>
                      <div class="gallery-slide cursor-pointer h-full flex items-center justify-center" data-image-src="{{ fullImgSrc }}" data-caption="{{ product.name }} - Изображение {{ loop.index }}">
                        <img src="{{ imgSrc }}" alt="{{ product.name }} - Изображение {{ loop.index }}"
                             class="max-w-full max-h-full object-contain cursor-zoom-in transition-transform duration-300" />
                      </div>
                    </swiper-slide>
                  {% endfor %}
                </swiper-container>
              </div>

              <!-- Миниатюры -->
              {% if sortedImages|length > 1 %}
                <div class="gallery-thumbs-container">
                  <div class="gallery-thumbs-grid">
                    {% for image in sortedImages %}
                      {% set raw = image.imageUrl %}
                      {% set rel = raw|replace({'/media/cache/':''})|replace({'md2/':'','md/':'','sm/':'','xl/':''}) %}
                      {% set thumbSrc = asset('/' ~ rel) | imagine_filter('sm') %}
                      {% set fullImgSrc = asset('/' ~ rel) | imagine_filter('xl') %}
                      <div class="thumbnail-item-wrapper">
                        <div class="thumbnail-item overflow-hidden rounded-lg border-2 border-gray-200 hover:border-blue-400 cursor-pointer transition-all" data-image-src="{{ fullImgSrc }}" data-caption="{{ product.name }} - Изображение {{ loop.index }}">
                          <img src="{{ thumbSrc }}" alt="{{ product.name }} - Миниатюра {{ loop.index }}"
                               class="w-full h-full object-cover" />
                        </div>
                      </div>
                    {% endfor %}
                  </div>
                </div>
              {% endif %}
            {% else %}
              <img src="https://via.placeholder.com/600x600" alt="{{ product.name }}"
                   class="w-full h-auto object-cover" />
            {% endif %}

            <!-- Акционная наклейка -->
            <div class="absolute top-4 left-4">
              <span class="bg-red-500 text-white px-3 py-1 rounded-full text-sm font-medium shadow-lg">
                Новинка
              </span>
            </div>

            <!-- Иконка зума -->
            <div class="absolute bottom-4 right-4 opacity-0 group-hover:opacity-100 transition-opacity">
              <div class="bg-black bg-opacity-50 text-white p-2 rounded-full">
                <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607ZM10.5 7.5v6m3-3h-6"/>
                </svg>
              </div>
            </div>
          </div>


        </div>



        <!-- Информация о товаре -->
        <div class="space-y-6">
          

          <!-- Цена -->
          <div class="space-y-2" data-module="product-option-price-updater">
            {% set currentPrice = null %}
            {% set salePrice = null %}

            {% if product.getType() in ['simple', 'variable_no_prices'] %}
              {% set currentPrice = product.getPrice() %}
              {% set salePrice = product.getSalePrice() %}
            {% elseif product.getType() == 'variable' %}
              {# Ищем опцию с setPrice = true #}
              {% set setPriceOption = null %}
              {% for option in product.getOptionAssignments() %}
                {% if option.getSetPrice() %}
                  {% set setPriceOption = option %}
                {% endif %}
              {% endfor %}

              {% if setPriceOption and setPriceOption.getPrice() is not null %}
                {# Используем цену опции с setPrice = true #}
                {% set currentPrice = setPriceOption.getPrice() %}
                {% set salePrice = setPriceOption.getSalePrice() %}
              {% else %}
                {# Fallback: первая опция по sortOrder #}
                {% set firstOption = product.getOptionAssignments().first() %}
                {% if firstOption and firstOption.getPrice() is not null %}
                  {% set currentPrice = firstOption.getPrice() %}
                  {% set salePrice = firstOption.getSalePrice() %}
                {% endif %}
              {% endif %}
            {% endif %}

            {% if currentPrice is not null and currentPrice > 0 %}
              <div class="flex items-baseline gap-3">
                {% if salePrice is not null and salePrice > 0 %}
                  <span id="product-price" data-testid="price" class="text-4xl font-bold text-gray-900">
                    {{ salePrice }} руб.
                  </span>
                  <span class="text-lg text-gray-500 line-through" id="old-price" data-testid="old-price">{{ currentPrice }} руб.</span>
                  <span class="bg-red-500 text-white px-2 py-1 rounded text-sm font-medium" id="discount-badge" data-testid="discount-badge">
                    -{{ ((currentPrice - salePrice) / currentPrice * 100)|round }}%
                  </span>
                {% else %}
                  <span id="product-price" data-testid="price" class="text-4xl font-bold text-gray-900">
                    {{ currentPrice }} руб.
                  </span>
                  <span class="text-lg text-gray-500 line-through hidden" id="old-price" data-testid="old-price">{{ currentPrice }} руб.</span>
                  <span class="bg-red-500 text-white px-2 py-1 rounded text-sm font-medium hidden" id="discount-badge" data-testid="discount-badge">
                    0%
                  </span>
                {% endif %}
              </div>
            {% endif %}
          </div>


          <!-- Опции товара -->
          <form class="space-y-6" data-module="product-options" data-testid="options">
            {% if product.optionAssignments is defined and product.optionAssignments|length > 0 %}
              <div class="space-y-4">
                
                {% set items = product.optionAssignments|sort((a,b) => (a.option.sortOrder <=> b.option.sortOrder) ?: ((a.sortOrder ?? 2147483647) <=> (b.sortOrder ?? 2147483647))) %}

                {# Группируем опции по типам #}
                {% set groupedOptions = {} %}
                {% for a in items %}
                  {% set optionName = a.option.name ?? ('Опция #' ~ a.option.id) %}
                  {% if groupedOptions[optionName] is not defined %}
                    {% set groupedOptions = groupedOptions|merge({ (optionName): [] }) %}
                  {% endif %}
                  {% set groupedOptions = groupedOptions|merge({ (optionName): groupedOptions[optionName]|merge([a]) }) %}
                {% endfor %}

                {# Выводим радио-кнопки для каждой группы опций #}
                {% for optionName, optionValues in groupedOptions %}
                  <div class="space-y-3">
                    <h6 class="text-base text-base-content mb-1">{{ optionName }}</h6>
                    <ul class="border-base-content/25 divide-base-content/25 divide-y  rounded-md border *:first:rounded-t-md *:last:rounded-b-md *:cursor-pointer">
                      {# Определяем, какую опцию выбрать по умолчанию #}
                      {% set defaultOption = null %}
                      {% for a in optionValues %}
                        {% if a.getSetPrice() and (a.getQuantity() is not null and a.getQuantity() > 0) %}
                          {% set defaultOption = a %}
                        {% endif %}
                      {% endfor %}
                      {% if defaultOption is null %}
                        {% for a in optionValues %}
                          {% if defaultOption is null and (a.getQuantity() is not null and a.getQuantity() > 0) %}
                            {% set defaultOption = a %}
                          {% endif %}
                        {% endfor %}
                      {% endif %}

                      {% for a in optionValues %}
                        {% set isOut = a.getQuantity() is null or a.getQuantity() == 0 %}
                        <li>
                          <label class="flex items-center gap-3 p-3">
                            <input
                              type="radio"
                              id="option-{{ a.id }}"
                              name="option-{{ a.option.id }}"
                              value="{{ a.id }}"
                              class="radio radio-primary"
                              data-option-name="{{ optionName }}"
                              data-option-price="{{ product.getType() == 'variable_no_prices' ? 0 : (a.price|default(0)) }}"
                              data-option-value="{{ a.value.value ?? ('Значение #' ~ a.value.id) }}"
                              data-set-price="{{ a.getSetPrice() ? 'true' : 'false' }}"
                              data-sale-price="{{ product.getType() == 'variable_no_prices' ? 0 : (a.salePrice is not null ? a.salePrice : 0) }}"
                              {% if isOut %}disabled{% endif %}
                              {% if not isOut and defaultOption and a.id == defaultOption.id %}checked{% endif %}
                            >
                            <span class="label-text text-base">
                              {{ a.value.value ?? ('Значение #' ~ a.value.id) }}
                              {% if isOut %}
                                <span class="text-red-600 ml-2">Нет в наличии</span>
                              {% elseif product.getType() != 'variable_no_prices' and a.price is not null and a.price > 0 %}
                                {% if a.salePrice is not null and a.salePrice > 0 %}
                                  <span class="text-gray-500 line-through ml-2">{{ a.price }} руб.</span>
                                  <span class="text-red-600 ml-1">{{ a.salePrice }} руб.</span>
                                {% else %}
                                  <span class="text-gray-900 ml-2">{{ a.price }} руб.</span>
                                {% endif %}
                              {% endif %}
                            </span>
                          </label>
                        </li>
                      {% endfor %}
                    </ul>
                  </div>
                {% endfor %}
              </div>
            {% endif %}

            <!-- Выбор количества -->
            <div class="space-y-4">
              <div class="flex items-center justify-between">
                <label for="product-quantity" class="text-sm font-medium text-gray-700">
                  Количество:
                </label>
                <div data-module="quantity-selector"
                     data-testid="qty-input"
                     data-product-id="{{ product.id }}"
                     data-min="1"
                     data-max="{{ product.quantity ?? 999 }}"
                     data-value="1"
                     class="quantity-selector-container">
                </div>
              </div>

              <!-- Кнопка покупки -->
              <button type="button" data-product-id="{{ product.id }}"
                      data-quantity="1"
                      data-module="add-to-cart"
                      data-testid="add-to-cart"
                      class="js-add-to-cart w-full bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white font-semibold py-4 px-6 rounded-xl shadow-lg hover:shadow-xl transform hover:scale-[1.02] transition-all duration-200 disabled:opacity-50 disabled:pointer-events-none disabled:transform-none relative overflow-hidden group">
                <!-- Анимированный фон -->
                <div class="absolute inset-0 bg-gradient-to-r from-blue-400 to-blue-500 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>

                <!-- Основное содержимое -->
                <div class="relative flex items-center justify-center gap-3">
                  <!-- Иконка корзины с анимацией -->
                  <svg class="w-5 h-5 transition-transform duration-200 group-hover:scale-110" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 10.5V6a3.75 3.75 0 1 0-7.5 0v4.5m11.356-1.993 1.263 12c.07.665-.45 1.243-1.119 1.243H4.25a1.125 1.125 0 0 1-1.12-1.243l1.264-12A1.125 1.125 0 0 1 5.513 7.5h12.974c.576 0 1.059.435 1.119 1.007ZM8.625 10.5a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Zm7.5 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Z"/>
                  </svg>

                  <!-- Текст с анимацией -->
                  <span class="text-lg transition-all duration-200 group-hover:tracking-wide">Добавить в корзину</span>
                </div>

                <!-- Эффект пульсации -->
                <div class="absolute inset-0 rounded-xl bg-blue-400 opacity-0 group-hover:opacity-20 animate-pulse"></div>

                <!-- Loading state -->
                <div class="loading-spinner absolute inset-0 flex items-center justify-center opacity-0">
                  <svg class="w-5 h-5 animate-spin text-white" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12a7.5 7.5 0 0 0 15 0m-15 0a7.5 7.5 0 1 1 15 0m-15 0H9m6 0h4.5"/>
                  </svg>
                </div>
              </button>

              <div class="flex gap-3">
                {% set inWishlist = wishlist_has(product.id) %}
                <button type="button" class="flex-1 bg-gray-100 hover:bg-gray-200 text-gray-700 font-medium py-3 px-4 rounded-lg transition-colors{% if inWishlist %} is-active{% endif %}"
                        data-module="wishlist-toggle"
                        data-product-id="{{ product.id }}">
                  <div class="flex items-center justify-center gap-2">
                    <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" d="m11.645 20.91-.007-.003-.022-.012a15.247 15.247 0 0 1-.383-.218 25.18 25.18 0 0 1-4.244-3.17C4.688 15.36 2.25 12.174 2.25 8.25 2.25 5.322 4.714 3 7.688 3A5.5 5.5 0 0 1 12 5.052 5.5 5.5 0 0 1 16.313 3c2.973 0 5.437 2.322 5.437 5.25 0 3.925-2.438 7.111-4.739 9.256a25.175 25.175 0 0 1-4.244 3.17 15.247 15.247 0 0 1-.383.219l-.022.012-.007.004-.003.001a.752.752 0 0 1-.704 0l-.003-.001Z"/>
                    </svg>
                    <span class="{% if inWishlist %}text-red-600{% endif %}">{{ inWishlist ? 'Товар в избранном' : 'В избранное' }}</span>
                  </div>
                </button>
                <button class="flex-1 bg-gray-100 hover:bg-gray-200 text-gray-700 font-medium py-3 px-4 rounded-lg transition-colors">
                  <div class="flex items-center justify-center gap-2">
                    <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" d="M7.217 10.907a2.25 2.25 0 1 0 0 2.186m0-2.186c.18.324.283.696.283 1.093s-.103.77-.283 1.093m0-2.186 9.566-5.314m-9.566 7.5 9.566 5.314m0 0a2.25 2.25 0 1 0 3.935 2.186 2.25 2.25 0 0 0-3.935-2.186Z"/>
                    </svg>
                    <span>Поделиться</span>
                  </div>
                </button>
              </div>
            </div>
          </form>

          <!-- Дополнительная информация -->
          <div class="border-t pt-6 space-y-4">
            <div class="flex items-center gap-3 text-sm text-gray-600">
              <svg class="w-5 h-5 text-green-600" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" d="m4.5 12.75 6 6 9-13.5"/>
              </svg>
              <span>Бесплатная доставка при заказе от 10 000 руб.</span>
            </div>
            <div class="flex items-center gap-3 text-sm text-gray-600">
              <svg class="w-5 h-5 text-blue-600" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"/>
              </svg>
              <span>Доставка в течение 2-5 рабочих дней</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Описание товара -->
  {% if product.description %}
    <div class="bg-white">
      <div class="container mx-auto px-4 py-12">
        <div class="max-w-4xl mx-auto">
          <h2 class="text-2xl font-bold text-gray-900 mb-6">Описание</h2>
          <div class="prose prose-lg max-w-none text-gray-700 leading-relaxed">
            {{ product.description }}
          </div>
        </div>
      </div>
    </div>
  {% endif %}
  
  <!-- Характеристики товара -->
  {% if product.attributeAssignments is defined and product.attributeAssignments|length > 0 %}
    <div class="">
      <div class="container mx-auto px-4 py-12">
        <div class="max-w-4xl mx-auto">
          <h2 class="text-2xl font-bold text-gray-900 mb-8">Технические характеристики</h2>

          {# Группируем атрибуты по группам #}
          {% set grouped_attrs = {} %}
          {% for pa in product.attributeAssignments %}
            {% set groupName = pa.attributeGroup ? pa.attributeGroup.name : 'Основные характеристики' %}

            {% if grouped_attrs[groupName] is not defined %}
              {% set grouped_attrs = grouped_attrs|merge({ (groupName): [] }) %}
            {% endif %}

            {% set grouped_attrs = grouped_attrs|merge({ (groupName): grouped_attrs[groupName]|merge([pa]) }) %}
          {% endfor %}

          {# Сортируем группы и выводим атрибуты #}
          {% for groupName, attributes in grouped_attrs|sort((a, b) => a <=> b) %}
            <div class="bg-white rounded-xl shadow-sm border border-gray-200 mb-6 overflow-hidden">
              <div class="bg-gradient-to-r from-gray-50 to-gray-100 px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-semibold text-gray-900">{{ groupName }}</h3>
              </div>
              <div class="p-6">
                <dl class="grid grid-cols-1 md:grid-cols-2 gap-4">
                  {% for pa in attributes|sort((a, b) => (a.attribute.sortOrder ?? 0) <=> (b.attribute.sortOrder ?? 0)) %}
                    <div class="flex flex-col sm:flex-row sm:justify-between sm:items-center py-2 border-b border-gray-100 last:border-b-0">
                      <dt class="text-sm font-medium text-gray-600 mb-1 sm:mb-0">{{ pa.attribute.name }}</dt>
                      <dd class="text-sm font-semibold text-gray-900">{{ pa.stringValue ?? '—' }}</dd>
                    </div>
                  {% endfor %}
                </dl>
              </div>
            </div>
          {% endfor %}
        </div>
      </div>
    </div>
  {% endif %}




{% endblock %}


